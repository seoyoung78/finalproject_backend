{"version":3,"sources":["views/Register/components/modal/RegisterWeekTimeTableModal/RegisterWeekTimeTableModal.module.css","views/Register/components/modal/RegisterCreateModal/RegisterPatientList/RegisterPatientList.module.css","views/Register/components/modal/RegisterCreateModal/RegisterCreateModal.module.css","views/Register/components/modal/RegisterCreateModal/RegisterCreateForm/RegisterCreateForm.module.css","components/common/Address/style.module.css","components/common/ValidationModal/style.module.css","components/common/WeatherAPI/WeatherAPI.module.css","views/Register/components/modal/RegisterWeekTimeTableModal/MonthTimeTable/MonthTimeTable.module.css","views/Auth/style.module.css","views/Register/components/modal/RegisterWeekTimeTableModal/ToDoList/ToDoList.module.css","components/common/Spinner/style.module.css","views/Treatment/components/modal/TreatmentHistoryReadModal/style.module.css","views/DataAnalysis/DataAnalysis.module.css","views/Inspection/components/modal/InspectionImgFormModal/InspectionImgFormModal.module.css","views/Inspection/components/modal/InspectionImgCreateFormModal/InspectionImgCreateFormModal.module.css","views/Inspection/components/modal/InspectionImgModifyFormModal/InspectionImgModifyModal.module.css","components/common/Address/index.js","apis/patient.js","components/common/ValidationModal/index.js","views/Patient/PatientCreateForm.js","components/common/Spinner/index.js","components/common/NoData/index.js","views/Patient/PatientList.js","views/Patient/PatientUpdateForm.js","apis/mqtt.js","views/Patient/index.js","apis/register.js","views/Register/components/items/RegisterListItem/index.js","views/Register/RegisterList.js","views/Register/RegisterRead.js","views/Register/components/modal/RegisterCreateModal/RegisterCreateForm/index.js","views/Register/components/modal/RegisterCreateModal/RegisterPatientList/index.js","views/Register/components/modal/RegisterCreateModal/RegisterStateChange/index.js","views/Register/components/modal/RegisterCreateModal/index.js","views/Register/components/modal/RegisterWeekTimeTableModal/MonthTimeTable/index.js","views/Register/components/modal/RegisterWeekTimeTableModal/ToDoList/index.js","views/Register/components/modal/RegisterWeekTimeTableModal/index.js","views/Register/components/items/RegisterTimeScheduleItems/index.js","views/Register/RegisterTimeSchedule.js","views/Register/RegisterUpdateForm.js","views/Register/index.js","apis/treatments.js","apis/inspections.js","views/Inspection/components/modal/InspectionImgFormModal/index.js","views/Treatment/components/modal/TreatmentHistoryReadModal/index.js","views/Treatment/TreatmentCreateForm.js","views/Treatment/TreatmentHistoryList.js","views/Treatment/TreatmentPatientList.js","views/Treatment/index.js","views/Inspection/InspectionPatientListItem.js","views/Inspection/InspectionPatientList.js","views/Inspection/components/modal/InspectionBarcodeModal/index.js","views/Inspection/components/modal/InspectionImgCreateFormModal/index.js","views/Inspection/components/modal/InspectionImgModifyFormModal/index.js","views/Inspection/InspectionListItem.js","views/Inspection/InspectionList.js","views/Inspection/index.js","redux/auth-reducer.js","views/Help/index.js","apis/axiosConfig.js","apis/auth.js","redux/hospital-reducer.js","views/Login.js","views/DataAnalysis/Data1.js","views/DataAnalysis/Data2.js","views/DataAnalysis/Data3.js","views/DataAnalysis/Data4.js","views/DataAnalysis/index.js","apis/data.js","apis/users.js","views/User/UserCreateForm.js","views/User/UserList.js","views/User/UserUpdateForm.js","views/User/index.js","views/errors/Page404.js","views/errors/Page403.js","components/common/CustomeRoute/NurseRoute.js","components/common/CustomeRoute/DoctorRoute.js","components/common/CustomeRoute/InspectorRoute.js","components/common/CustomeRoute/MasterRoute.js","AppRoute.js","views/Auth/index.js","components/common/WeatherAPI/index.js","Header.js","App.js","reportWebVitals.js","redux/root-reducer.js","index.js","views/Register/components/modal/RegisterCreateModal/RegisterStateChange/RegisterStateChange.module.css","views/Inspection/components/modal/InspectionBarcodeModal/InspectionBarcodeModal.module.css"],"names":["module","exports","Modal","props","open","close","send","className","style","AddressModal","openModal","modal","AddressModal_header","onClick","onComplete","data","address","extraAddress","addressType","bname","buildingName","getPatientList","keyword","promise","axios","get","params","updatePatient","patient","put","createPatient","post","ValidationModal","errorMsg","ValidationModal_header","title","content","PatientCreateForm","useState","patient_name","patient_ssn1","patient_ssn2","patient_sex","patient_tel1","patient_tel2","patient_tel3","patient_zipcode","patient_address","patient_detailaddress1","patient_detailaddress2","setPatient","masking","setMasking","validationModalOpen","setValidationModalOpen","openvalidationModal","setErrorMsg","handleChange","event","target","name","value","handleCreate","a","preventDefault","patientValidation","length","response","result","ToastsStore","success","publishTopic","console","log","addressModalOpen","setAddressModalOpen","Fragment","onSubmit","type","placeholder","onChange","onBlur","replace","checked","readOnly","zonecode","prevPatient","store","position","ToastsContainerPosition","TOP_CENTER","lightBackground","Spinner","spinner2","role","Nodata","fontSize","height","PatientList","patients","setPatients","setKeyword","id","setId","loading","setLoading","handleSearch","patientList","useEffect","work","message","rowRenderer","index","key","patient_id","changePatient","width","moment","patient_regdate","format","disableHeight","list","rowCount","rowHeight","overscanRowCount","PatientUpdateForm","patientId","setPatientId","handleUpdate","ssn2Masking","slice","undefined","sendMqttMessage","topic","Patient","subTopic","pubMessage","setMessage","client","useRef","num","current","Paho","Client","Date","getTime","onConnectionLost","onMessageArrived","msg","Jmessage","JSON","parse","payloadString","connect","onSuccess","subscribe","getRegisterList","date","state","createRegister","register","updateRegister","changeRegisterState","getDoctorList","updateToDoLists","schedule","deleteToDoLists","delete","getRegisterByDoctor","user_id","RegisterListItem","selectedRegister","checkboxHandler","register_id","register_date","patient_ssn","substring","user_name","register_memo","register_communication","register_state","React","memo","registerLocale","ko","RegisterList","registerDate","setSelectedPatient","setRegisterDate","registerList","setRegisterList","startDate","setStartDate","registerStateReady","setRegisterStateReady","registerStateFinish","setRegisterStateFinish","registerStateCancel","setRegisterStateCancel","setSelectedRegister","selectPatient","find","changeRegisterStateToFinish","selectRegister","changeRegisterStateToCancel","showTotal","showReady","showFinish","showCancel","getRegistersState","count1","count2","count3","i","to","locale","selected","dateFormat","colSpan","map","RegisterRead","selectedPatient","changeRegister","register_patient_id","register_user_id","register_regdate","register_starttime","patient_tel","setSelectPatient","RegisterCreateForm","doctors","noneRegister","user_hospital_id","user_password","user_ssn","user_tel","user_email","user_sex","user_zipcode","user_address","user_detailaddress1","user_detailaddress2","user_regdate","user_enabled","user_authority","minDate","setMinDate","setHours","setMinutes","minTime","setMinTime","maxTime","setMaxTime","showTimeSelect","setShowTimeSelect","doctorsList","setDoctorsList","newDoctor","setNewDoctor","newMemo","setNewMemo","newCMemo","setNewCMemo","selectedTime","getFullYear","getMonth","getDate","getHours","setDate","newRegister","RegisterCreateForm_content","RegisterCreateForm_cal","setNewRegister","timeIntervals","timeCaption","timeClassName","time","inline","RegisterCreateForm_input","RegisterCreateForm_input_select","disabled","doctor","RegisterCreateForm_input_textarea","RegisterPatientList","setPatientList","searchContent","setSearchContent","getPatientsLists","RegisterPatientList_content","RegisterPatientList_search","RegisterPatientList_search_input","RegisterPatientList_search_input_1","RegisterPatientList_search_button","RegisterPatientList_content_table","RegisterPatientList_content_table_tr","RegisterStateChange","RegisterStateChange_content_table","RegisterStateChange_content_table_tr","RegisterStateChange_content_stateBtn","RegisterStateChange_content_stateBtn_item","RegisterStateChange_content_stateBtn_item_1","RegisterStateChange_content_stateBtn_item_2","RegisterStateChange_content_stateBtn_item_3","RegisterCreateModal","header","selectedRegisterDoctor","createNewRegister","registerValidation","updateNewRegister","RegisterCreateModal1","RegisterCreateModal_main","RegisterCreateModal_footer","MonthTimeTable","selectedDoctor","selectToday","selectTodayYear","selectTodayMonth","selectTodayDate","today","setToday","startOf","tMonth","setTMonth","registerListByDoctor","setRegisterListByDoctor","todayYear","todayMonth","thisYaerAndMonth","calCalender","thisYear","thisMonth","prevLast","thisLast","prevLastDate","prevLastDay","getDay","todayLastDate","todayLastDay","prevDates","thisDates","Array","keys","nextDates","unshift","push","concat","dates","setDates","prevMonth","setMonth","subtract","nextMonth","add","updateSelectDate","setSelectDate","getRegisterCount","MonthTimeTable_btns","MonthTimeTable_btn","MonthTimeTable_btnToday","yearAndMonth","days","day","dayN","thisDate","count","Rdate","count_font","onDoubleClick","otherDate1","otherDate2","otherDate","ToDoList","selectDate","globalUid","useSelector","authReducer","uid","inputText","setInputText","toDoList","setToDoList","addToDoList","newSchedule","schedule_id","schedule_user_id","schedule_content","schedule_state","schedule_regdate","changeYet","updateSchedule","changeDone","deleteToDo","getToDoList","todolist","ToDoList_header","ToDoList_header_name","ToDoList_header_date","ToDoList_header_inputLabel","ToDoList_header_inputLabel_input","ToDoList_header_inputLabel_button","ToDoList_content","ToDoList_content_header","ToDoList_content_items","ToDoList_content_items_yet_header","ToDoList_content_items_yet_header_1","ToDoList_content_items_yet_header_2","filter","toDo","ToDoList_content_items_yet_itmes","ToDoList_content_items_yet_item","ToDoList_content_items_yet_item_content","ToDoList_content_items_yet_item_btns","ToDoList_content_items_yet_item_btns_btn","ToDoList_btn_X","ToDoList_content_items_done_header","ToDoList_content_items_done_header_1","ToDoList_content_items_done_header_2","ToDoList_content_items_done_itmes","ToDoList_content_items_done_item","ToDoList_content_items_done_item_content","ToDoList_content_items_done_item_btns","ToDoList_content_items_done_item_btns_btn","ToDoList_btn_X2","RegisterWeekTimeTableModal","setPubMessage","RegisterWeekTimeTableModal_header","Main_content","RegisterWeekTimeTableModal_main","ToDoList_main","RegisterWeekTimeTableModal_footer","RegisterTimeScheduleItems","hours","mins","RegisterTimeSchedule","setDoctors","registers","setRegisters","modalOpen","setModalOpen","headerContent","setHeaderContent","selectTimeModalOpen","setSelectTimeModalOpen","setSelectedTime","setSelectedRegisterDoctor","setSelectedDoctor","registerWeekTimeTableOpen","setRegisterWeekTimeTableOpen","registerModalOpen","setRegisterModalOpen","openRegisterModal","getRegisterLists","tableRegisterList","getDoctorLists","doctorList","hour","min","currentTime","minCurrentTime","maxCurrentTime","isBetween","openRegisterWeekTimeTableOpen","index1","index2","h","m","d","index3","RegisterUpdateForm","doctorlist","cancelRegister","changeNewDoctor","useCallback","changeNewMemo","newCommunication","setNewCommunication","changeNewCommunication","updateRegisterBtn","new_doctor","Register","prevSubTopic","setPrevSubTopic","sendSubTopic","unsubscribe","registerRead","setRegisterRead","getTreatmentPatientList","getTreatmentHistoryList","treatment_patient_id","getTreatmentHistoryRead","treatment_id","getSearchDurg","condition","readPatient","treatmentDate","readInspection","treatmentId","updateState","inspectionId","updateResult","inspectionResult","selectImgId","createImage","multipartFormData","deleteImage","InspectionImgFormModal","inspection","inspectionImgResult","images","getInspectionImgs","inspection_id","inspectionImgList","original","inspection_img_path","thumbnail","originalHeight","responseImgId","inspectionImgId","inspection_img_id","responseType","InspectionImgModal","InspectionImgForm_title","InspectionImgForm_1","InspectionImgForm_1_1","InspectionImgForm_1_1_1","InspectionImgForm_1_1_2","inspection_list_category","inspection_list_name","inspection_doctor_name","inspection_inspector_name","inspection_lab","InspectionImgForm_1_2","items","InspectionImgForm_2","TreatmentHistoryRead","readTreatmentId","selectedTreatmentId","soap","setSoap","inspectionlists","setInspectionlists","druglists","setDrugLists","closeModal","getRead","treatmentSoaplist","treatmentInspectionlist","treatmentDrugsInjectionlist","TreatmentHistorymodal","TreatmentHistoryRead_title","TreatmentHistoryRead_border","TreatmentHistoryRead_1","TreatmentHistoryRead_1_table","bgcolor","treatment_smemo","treatment_omemo","treatment_amemo","treatment_pmemo","TreatmentHistoryRead_2","TreatmentHistoryRead_2_title","TreatmentHistoryRead_2_Totaltable","TreatmentHistoryRead_2_table","TreatmentHistoryRead_2_table_thead","TreatmentHistoryRead_2_table_tbody","inspections","inspection_date","inspection_list_reference","inspection_result","TreatmentHistoryRead_3","TreatmentHistoryRead_3_title","TreatmentHistoryRead_3_Totaltable","TreatmentHistoryRead_3_table","TreatmentHistoryRead_3_table_thead","drugInjections","treatment_date","drug_injection_drug_injection_list_id","drug_injection_list_name","drug_injection_list_category","TreatmentHistoryReadClose","TreatmentCreateForm","checkedPatientlist","inspectionlist","setInspectionlist","inspectionOption","setInspectionOption","selectedInspection","selectedInspection2","inspectionForm","setInspectionForm","selectedDrug","drugForm","setDrugForm","searchKeyword","setSearchKeyword","setSelectedTreatmentId","smemo","setSmemo","omemo","setOmemo","amemo","setAmemo","pmemo","setPmemo","cmemo","setCmemo","totalDrug","setTotalDrug","selectedDrugCategory","setSelectedDrugCategory","keywordDrugList","setKeywordDrugList","checkDrugList","setCheckDrugList","checkedpatient","treatment_register_id","treatment_state","checkList","setCheckList","handleCheckClick","newChecklist","item","getTotalInspectionsList","categoryValue","inspectionList","cList","iList","inspection_list_id","getSearchDurgs","druglist","totalDrugList","indexForDrug","drug","indexId","drug_injection_list_id","handleCheckDrugClick","newCheckDruglist","prevDrugForm","searchClick","searchDrugList","sDrug","totalFilter","innerFilter","outerFilter","injectionFilter","updateTreatmentBtn","newTreatment","treatment_user_id","treatment_communication","treatment","handleChangeBloodInspections","prevInspectionForm","handleChangeImgInspections","rows","cols","TreatmentHistoryList","historyLists","setHistoryLists","getList","historylist","treatmentHistory","TreatmentPatientList","setCheckedpatient","patientlists","setPatientlists","inputdate","setInputdate","inputdate2","setInputdate2","selectedRegisterId","setSelectedRegisterId","ready","setReady","done","setDone","treatmentlist","getState","readyState","doneState","readyFilter","finishFilter","patientlist","checkedtreatmentPatient","Treatment","InspectionPatientListItem","changeIStateInspection","treatment_istate","handleIStateInspectionFalse","changeIStateFinish","handleIStateFinishFalse","changeIStateWait","handleIStateWaitFalse","iStateInspection","iStateFinish","iStateWait","handleChecked","split","color","patientsList","InspectionPatientList","setTreatmentDate","treatmentDate2","setTreatmentDate2","getIstateWaiting","istateWaiting","setIstateWaiting","getIstateInspection","istateInspection","setIstateInspection","getIstateCompletion","istateCompletion","setIstateCompletion","getPatient","treatmentList","checkIState","countWaiting","countInspection","countCompletion","showInspection","searchDateBtn","checkedtId","InspectionBarcodeModal","closeCheck","closeCancel","inspectionListName","patientName","inspectionInspectorName","barcode","tid","inspectionListSpecimen","inspectionListContainer","InspectionModal","InspectionBarcodePop","InspectionBarcodePop_title","InspectionBarcodePop_1","InspectionBarcodePop_1_1","renderer","InspectionBarcodePop_1_2","InspectionBarcodePop_1_3","InspectionImgCreateFormModal","closeR","inputFile","inspectionImgResultBtn","maxSize","sizeIndex","size","typeIndex","files","lastIndexOf","alert","formData","FormData","append","InspectionImgCreateModal","InspectionImgCreateForm","InspectionImgCreateForm_title","InspectionImgCreateForm_1","encType","InspectionImgCreateForm_1_1","InspectionImgCreateForm_1_1_1","InspectionImgCreateForm_1_1_2","multiple","ref","accept","InspectionImgCreateForm_1_2","closeM","InspectionImgModifyModal","InspectionListItem","inspectionR","setInspectionR","imgModalOpen","setImgModalOpen","imgModifyModalOpen","setImgModifyModalOpen","imgCreateModalOpen","setImgCreateModalOpen","handleResultChange","inspectionRRegister","inspectionRModify","openImgModal","closeImgModal","closeRImgCreateModal","changeStateInspection","inspection_state","handleStateInspectionFalse","changeStateWait","handleStateWaitFalse","plusStateWaitCount","changeStateFinish","handleStateFinishFalse","plusStateFinishCount","stateInspection","stateWait","stateFinish","inspection_list_specimen","InspectionImgModifyFormModal","inspeciton_list_container","inspectionsList","InspectionList","setInspections","filterInspections","setFilterInspections","setStateInspection","setStateWait","setStateFinish","stateFinishCount","setStateFinishCount","stateWaitCount","setStateWaitCount","authorityRole","uauthority","ExcelFile","ReactExport","ExcelSheet","ExcelColumn","dataSet","getInspections","inspection_inspector_id","getInspectionsWhenStateChange","getStateFinishCount","finishCount","getStateWaitCount","waitCount","handleIStateFinishTrue","handleIStateWaitTrue","ins","handleIStateInspectionTrue","filename","element","category","specimen","reference","container","inspector","lab","label","window","confirm","Inspection","setTreatmentId","setIStateInspection","setIStateWait","setIStateFinish","initialState","authToken","SET_UID","SET_AUTH_TOKEN","SET_UAUTHORITY","createSetUidAction","createSetAuthTokenAction","cresteSetUauthorityAction","action","Help","href","download","rel","addAuthHeader","defaults","headers","common","login","user","updateUserInfo","baseURL","hid","hname","haddress","hurl","hlat","hlong","SET_HID","SET_HNAME","SET_HADDRESS","SET_HURL","SET_HLAT","SET_HLONG","createSetHidAction","createSetHnameAction","createSetHaddressAction","createSetHurlAction","createSetHLATAction","createSetHLONGAction","hospitalReducer","Login","userId","userPassword","setUser","dispatch","useDispatch","loginUser","sessionStorage","setItem","history","bid","setBid","boardClick","useForm","mode","handleSubmit","errors","src","alt","required","Data1","data1","DataAnalysis_col_header","DataAnalysis_col_content","indexBy","margin","top","right","bottom","left","padding","groupMode","valueScale","indexScale","round","colors","scheme","fill","match","borderColor","from","modifiers","axisTop","axisRight","axisLeft","tickSize","tickPadding","tickRotation","legend","legendPosition","legendOffset","animate","motionStiffness","motionDamping","Data2","data2","innerRadius","padAngle","cornerRadius","activeOuterRadiusOffset","borderWidth","arcLinkLabelsSkipAngle","arcLinkLabelsTextColor","arcLinkLabelsThickness","arcLinkLabelsColor","arcLabelsSkipAngle","arcLabelsTextColor","legends","anchor","direction","justify","translateX","translateY","itemsSpacing","itemWidth","itemHeight","itemTextColor","itemDirection","itemOpacity","symbolSize","effects","on","Data3","data3","defs","background","stagger","rotation","lineWidth","spacing","axisBottom","labelSkipWidth","labelSkipHeight","labelTextColor","dataFrom","Data4","data4","symbolShape","DataAnalysis","setData1","setData2","setData3","setData4","getData","calcData1","calcData2","calcData3","calcData4","datalist","countA1","countA2","countA3","countA4","countA5","countA6","countA7","countA8","countA9","countB1","countB2","countB3","countB4","countB5","countB6","countB7","countB8","countB9","countC1","countC2","countC3","countC4","countC5","countC6","countC7","countC8","countC9","countD1","countD2","countD3","countD4","countD5","countD6","countD7","countD8","countD9","countE1","countE2","countE3","countE4","countE5","countE6","countE7","countE8","countE9","pAge","yearToday","newAge","newAge2","countQ1","countQ2","countQ3","countQ4","DataAnalysis_row1","DataAnalysis_col","DataAnalysis_row2","getAllUserList","getUserList","updateUser","updateUserEnabled","createUser","UserCreateForm","hospital_id","user_ssn1","user_ssn2","user_tel1","user_tel2","user_tel3","user_email1","user_email2","userValidation","regex","test","prevUser","UserList","users","setUsers","userCount","setUserCount","getUsersCount","userList","count4","count5","countAll","setCondition","clickCondition","selectCondition","changeUser","UserUpdateForm","setUserId","handleEnabled","AddressModalOpen","User","Page404","useHistory","marginTop","goBack","Page403","DoctorRoute","Component","component","rest","render","InspectorRoute","MasterRoute","AppRoute","Uauthority","path","exact","NurseRoute","Auth","openValidationModal","old_password","new_password","re_password","Auth_header","Auth_box","Auth_content","minLength","maxLength","Auth_error","Auth_noterror","pattern","user_Address","Auth_password","API_KEY","WeatherAPI","hospitalTemp","setHospitalTemp","imgUrl","setImgUrl","getWeatherData","lat","long","fetch","then","json","Math","floor","main","temp","weather","icon","catch","error","navigator","geolocation","getCurrentPosition","coords","latitude","longitude","timeout","enableHighAccuracy","maximumAge","WeatherAPI_items","WeatherAPI_item","Header","hospital_url","authModalOpen","setAuthModalOpen","removeItem","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","createStore","composeWithDevTools","getItem","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b593c2c7.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterWeekTimeTableModal\":\"RegisterWeekTimeTableModal_RegisterWeekTimeTableModal__1pwux\",\"modal\":\"RegisterWeekTimeTableModal_modal__2kHnf\",\"modal-show\":\"RegisterWeekTimeTableModal_modal-show__3RPYl\",\"RegisterWeekTimeTableModal_header\":\"RegisterWeekTimeTableModal_RegisterWeekTimeTableModal_header__3fdlb\",\"Main_content\":\"RegisterWeekTimeTableModal_Main_content__3jwmk\",\"RegisterWeekTimeTableModal_footer\":\"RegisterWeekTimeTableModal_RegisterWeekTimeTableModal_footer__OA9dE\",\"openModal\":\"RegisterWeekTimeTableModal_openModal__8BdfL\",\"modal-bg-show\":\"RegisterWeekTimeTableModal_modal-bg-show__11W4g\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterPatientList\":\"RegisterPatientList_RegisterPatientList__1LS1u\",\"RegisterPatientList_header\":\"RegisterPatientList_RegisterPatientList_header__ttCbr\",\"RegisterPatientList_search\":\"RegisterPatientList_RegisterPatientList_search__16gTB\",\"RegisterPatientList_search_input\":\"RegisterPatientList_RegisterPatientList_search_input__2fEBJ\",\"RegisterPatientList_search_input_1\":\"RegisterPatientList_RegisterPatientList_search_input_1__22r-k\",\"RegisterPatientList_search_button\":\"RegisterPatientList_RegisterPatientList_search_button__QxPV0\",\"RegisterPatientList_content\":\"RegisterPatientList_RegisterPatientList_content__1CEIG\",\"RegisterPatientList_content_table\":\"RegisterPatientList_RegisterPatientList_content_table__2fe95\",\"RegisterPatientList_content_table_tr\":\"RegisterPatientList_RegisterPatientList_content_table_tr__2Uus2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterCreateModal\":\"RegisterCreateModal_RegisterCreateModal__9vafi\",\"modal\":\"RegisterCreateModal_modal__39Ehp\",\"modal-show\":\"RegisterCreateModal_modal-show__104Yj\",\"RegisterCreateModal1\":\"RegisterCreateModal_RegisterCreateModal1__3qPRI\",\"RegisterCreateModal_main\":\"RegisterCreateModal_RegisterCreateModal_main__3S_PZ\",\"RegisterCreateModal_footer\":\"RegisterCreateModal_RegisterCreateModal_footer__3bSdL\",\"openModal\":\"RegisterCreateModal_openModal__3UP0r\",\"modal-bg-show\":\"RegisterCreateModal_modal-bg-show__2T2Ra\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterCreateForm\":\"RegisterCreateForm_RegisterCreateForm__2YFQt\",\"RegisterCreateForm_content\":\"RegisterCreateForm_RegisterCreateForm_content__18xUw\",\"RegisterCreateForm_cal\":\"RegisterCreateForm_RegisterCreateForm_cal__3cRtI\",\"RegisterCreateForm_input\":\"RegisterCreateForm_RegisterCreateForm_input__1RNg-\",\"RegisterCreateForm_input_select\":\"RegisterCreateForm_RegisterCreateForm_input_select__3Qe5i\",\"RegisterCreateForm_input_textarea\":\"RegisterCreateForm_RegisterCreateForm_input_textarea__3rvLD\",\"RegisterCreateForm_button\":\"RegisterCreateForm_RegisterCreateForm_button__3Kyb-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"AddressModal_header\":\"style_AddressModal_header__3Tgiv\",\"AddressModal\":\"style_AddressModal__1_ByM\",\"modal\":\"style_modal__1Ea-Y\",\"modal-show\":\"style_modal-show__3UxOZ\",\"openModal\":\"style_openModal__2bZ4H\",\"modal-bg-show\":\"style_modal-bg-show__2-wG2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ValidationModal_header\":\"style_ValidationModal_header__K4tFw\",\"ValidationModal\":\"style_ValidationModal__17oYG\",\"modal\":\"style_modal__3yU5w\",\"modal-show\":\"style_modal-show__307Cu\",\"openModal\":\"style_openModal__1fRGH\",\"modal-bg-show\":\"style_modal-bg-show__zbtTj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"WeatherAPI\":\"WeatherAPI_WeatherAPI__1zJC9\",\"WeatherAPI_items\":\"WeatherAPI_WeatherAPI_items__1cepU\",\"WeatherAPI_item\":\"WeatherAPI_WeatherAPI_item__1Uut1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MonthTimeTable\":\"MonthTimeTable_MonthTimeTable__AwQuB\",\"yearAndMonth\":\"MonthTimeTable_yearAndMonth__rgav1\",\"MonthTimeTable_btns\":\"MonthTimeTable_MonthTimeTable_btns__2kY-x\",\"MonthTimeTable_btn\":\"MonthTimeTable_MonthTimeTable_btn__2gYdM\",\"MonthTimeTable_btnToday\":\"MonthTimeTable_MonthTimeTable_btnToday__1-47L\",\"days\":\"MonthTimeTable_days__NLGbT\",\"day\":\"MonthTimeTable_day__RUGQE\",\"dayN\":\"MonthTimeTable_dayN__1RXpL\",\"divisionLine\":\"MonthTimeTable_divisionLine__2JkcF\",\"divisionLine2\":\"MonthTimeTable_divisionLine2__3DANS\",\"dates\":\"MonthTimeTable_dates__1w7Va\",\"date\":\"MonthTimeTable_date__2bESt\",\"thisDate\":\"MonthTimeTable_thisDate__2tqWB\",\"otherDate\":\"MonthTimeTable_otherDate__Surad\",\"otherDate1\":\"MonthTimeTable_otherDate1__1QZ3a\",\"otherDate2\":\"MonthTimeTable_otherDate2__I-Z3B\",\"count\":\"MonthTimeTable_count__1yb2c\",\"count_font\":\"MonthTimeTable_count_font__r-qu7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Auth\":\"style_Auth__2J4yB\",\"Auth_box\":\"style_Auth_box__1xc85\",\"Auth_content\":\"style_Auth_content__3-GC9\",\"Auth_content2\":\"style_Auth_content2__1SlWC\",\"Auth_password\":\"style_Auth_password__2yFBU\",\"Auth_error\":\"style_Auth_error__3sgxB\",\"Auth_noterror\":\"style_Auth_noterror__1w43I\",\"Auth_header\":\"style_Auth_header__17yvL\",\"modal\":\"style_modal__3VrS7\",\"modal-show\":\"style_modal-show__128ff\",\"openModal\":\"style_openModal__1NVrR\",\"modal-bg-show\":\"style_modal-bg-show__31SUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ToDoList\":\"ToDoList_ToDoList__2WBML\",\"ToDoList_header\":\"ToDoList_ToDoList_header__3pwjo\",\"ToDoList_header_name\":\"ToDoList_ToDoList_header_name__2407W\",\"ToDoList_header_date\":\"ToDoList_ToDoList_header_date__17h_1\",\"ToDoList_header_inputLabel\":\"ToDoList_ToDoList_header_inputLabel__1j9yT\",\"ToDoList_header_inputLabel_input\":\"ToDoList_ToDoList_header_inputLabel_input__28SBi\",\"ToDoList_header_inputLabel_button\":\"ToDoList_ToDoList_header_inputLabel_button__CYDo9\",\"button_team2_fill\":\"ToDoList_button_team2_fill__1L9h5\",\"ToDoList_content\":\"ToDoList_ToDoList_content__--9Uy\",\"ToDoList_content_header\":\"ToDoList_ToDoList_content_header__KgLeO\",\"ToDoList_content_items\":\"ToDoList_ToDoList_content_items__1J941\",\"ToDoList_content_items_yet_header\":\"ToDoList_ToDoList_content_items_yet_header__23bb4\",\"ToDoList_content_items_yet_header_1\":\"ToDoList_ToDoList_content_items_yet_header_1__1REau\",\"ToDoList_content_items_yet_header_2\":\"ToDoList_ToDoList_content_items_yet_header_2__Ummt7\",\"ToDoList_content_items_yet_itmes\":\"ToDoList_ToDoList_content_items_yet_itmes__2acVr\",\"ToDoList_content_items_yet_item\":\"ToDoList_ToDoList_content_items_yet_item__1ldx1\",\"ToDoList_content_items_yet_item_content\":\"ToDoList_ToDoList_content_items_yet_item_content__3afSw\",\"ToDoList_content_items_yet_item_btns\":\"ToDoList_ToDoList_content_items_yet_item_btns__oRpRq\",\"ToDoList_content_items_done_header\":\"ToDoList_ToDoList_content_items_done_header__2vc62\",\"ToDoList_content_items_done_header_1\":\"ToDoList_ToDoList_content_items_done_header_1__3VQjn\",\"ToDoList_content_items_done_header_2\":\"ToDoList_ToDoList_content_items_done_header_2__39hXi\",\"ToDoList_content_items_done_itmes\":\"ToDoList_ToDoList_content_items_done_itmes__18PsL\",\"ToDoList_content_items_done_item\":\"ToDoList_ToDoList_content_items_done_item__1Qvju\",\"ToDoList_content_items_done_item_content\":\"ToDoList_ToDoList_content_items_done_item_content__3PoaA\",\"ToDoList_content_items_done_item_btns\":\"ToDoList_ToDoList_content_items_done_item_btns__2O8ef\",\"ToDoList_btn_X\":\"ToDoList_ToDoList_btn_X__2wP6T\",\"ToDoList_btn_X2\":\"ToDoList_ToDoList_btn_X2__1KHnB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner2\":\"style_spinner2__2wGl0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"TreatmentHistorymodal\":\"style_TreatmentHistorymodal__eRVR6\",\"modal\":\"style_modal__2qqIL\",\"modal-show\":\"style_modal-show__26Sq5\",\"openModal\":\"style_openModal__1tOBU\",\"modal-bg-show\":\"style_modal-bg-show__b4n7j\",\"TreatmentHistoryRead\":\"style_TreatmentHistoryRead__21Vmk\",\"TreatmentHistoryRead_title\":\"style_TreatmentHistoryRead_title__1frzE\",\"TreatmentHistoryRead_border\":\"style_TreatmentHistoryRead_border__38o5M\",\"TreatmentHistoryRead_1_table\":\"style_TreatmentHistoryRead_1_table__mus_e\",\"TreatmentHistoryRead_2\":\"style_TreatmentHistoryRead_2__1cdUG\",\"TreatmentHistoryRead_2_Totaltable\":\"style_TreatmentHistoryRead_2_Totaltable__qAFA9\",\"TreatmentHistoryRead_2_title\":\"style_TreatmentHistoryRead_2_title__3_T85\",\"TreatmentHistoryRead_2_table\":\"style_TreatmentHistoryRead_2_table__2tuZH\",\"TreatmentHistoryRead_2_table_thead\":\"style_TreatmentHistoryRead_2_table_thead__2glBN\",\"TreatmentHistoryRead_3\":\"style_TreatmentHistoryRead_3__3p0JY\",\"TreatmentHistoryRead_3_title\":\"style_TreatmentHistoryRead_3_title__3I6nz\",\"TreatmentHistoryRead_3_Totaltable\":\"style_TreatmentHistoryRead_3_Totaltable__1MnPh\",\"TreatmentHistoryRead_3_table\":\"style_TreatmentHistoryRead_3_table__2JZTc\",\"TreatmentHistoryReadClose\":\"style_TreatmentHistoryReadClose__3k39n\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"DataAnalysis\":\"DataAnalysis_DataAnalysis__3NTuV\",\"DataAnalysis_row1\":\"DataAnalysis_DataAnalysis_row1__oRlep\",\"DataAnalysis_row2\":\"DataAnalysis_DataAnalysis_row2__RJG1-\",\"DataAnalysis_col\":\"DataAnalysis_DataAnalysis_col__2lXR5\",\"DataAnalysis_col_header\":\"DataAnalysis_DataAnalysis_col_header__255NV\",\"DataAnalysis_col_content\":\"DataAnalysis_DataAnalysis_col_content__v7gWv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InspectionImgModal\":\"InspectionImgFormModal_InspectionImgModal__2Oiqs\",\"modal\":\"InspectionImgFormModal_modal__36N0g\",\"modal-show\":\"InspectionImgFormModal_modal-show__1ExMY\",\"openModal\":\"InspectionImgFormModal_openModal__Proue\",\"modal-bg-show\":\"InspectionImgFormModal_modal-bg-show__2P0aA\",\"InspectionImgForm\":\"InspectionImgFormModal_InspectionImgForm__1QSRz\",\"InspectionImgForm_title\":\"InspectionImgFormModal_InspectionImgForm_title__26CWr\",\"InspectionImgForm_1\":\"InspectionImgFormModal_InspectionImgForm_1__1AyiO\",\"InspectionImgForm_1_1\":\"InspectionImgFormModal_InspectionImgForm_1_1__1opcL\",\"InspectionImgForm_1_1_1\":\"InspectionImgFormModal_InspectionImgForm_1_1_1__3HW4X\",\"InspectionImgForm_1_1_2\":\"InspectionImgFormModal_InspectionImgForm_1_1_2__Xkuu7\",\"InspectionImgForm_1_2\":\"InspectionImgFormModal_InspectionImgForm_1_2__1UdKa\",\"InspectionImgForm_2\":\"InspectionImgFormModal_InspectionImgForm_2__3Jorr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InspectionImgCreateModal\":\"InspectionImgCreateFormModal_InspectionImgCreateModal__Kugic\",\"modal\":\"InspectionImgCreateFormModal_modal__8y5eb\",\"modal-show\":\"InspectionImgCreateFormModal_modal-show__1u9zy\",\"openModal\":\"InspectionImgCreateFormModal_openModal__18aQb\",\"modal-bg-show\":\"InspectionImgCreateFormModal_modal-bg-show__2FLRI\",\"InspectionImgCreateForm\":\"InspectionImgCreateFormModal_InspectionImgCreateForm__2xalN\",\"InspectionImgCreateForm_title\":\"InspectionImgCreateFormModal_InspectionImgCreateForm_title__3loLs\",\"InspectionImgCreateForm_1\":\"InspectionImgCreateFormModal_InspectionImgCreateForm_1__1YnWj\",\"InspectionImgCreateForm_1_1\":\"InspectionImgCreateFormModal_InspectionImgCreateForm_1_1__wBXJ-\",\"InspectionImgCreateForm_1_1_1\":\"InspectionImgCreateFormModal_InspectionImgCreateForm_1_1_1__1WJ0P\",\"InspectionImgCreateForm_1_1_2\":\"InspectionImgCreateFormModal_InspectionImgCreateForm_1_1_2__2v1lL\",\"InspectionImgCreateForm_1_2\":\"InspectionImgCreateFormModal_InspectionImgCreateForm_1_2__DJ5oz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InspectionImgModifyModal\":\"InspectionImgModifyModal_InspectionImgModifyModal__2BXTn\",\"modal\":\"InspectionImgModifyModal_modal__2-_C7\",\"modal-show\":\"InspectionImgModifyModal_modal-show__35-QE\",\"openModal\":\"InspectionImgModifyModal_openModal__2AuJ4\",\"modal-bg-show\":\"InspectionImgModifyModal_modal-bg-show__xvftg\",\"InspectionImgCreateForm\":\"InspectionImgModifyModal_InspectionImgCreateForm__2PjWW\",\"InspectionImgCreateForm_title\":\"InspectionImgModifyModal_InspectionImgCreateForm_title__2s63d\",\"InspectionImgCreateForm_1\":\"InspectionImgModifyModal_InspectionImgCreateForm_1__Z0o6V\",\"InspectionImgCreateForm_1_1\":\"InspectionImgModifyModal_InspectionImgCreateForm_1_1__2YjmF\",\"InspectionImgCreateForm_1_1_1\":\"InspectionImgModifyModal_InspectionImgCreateForm_1_1_1__1d2Ve\",\"InspectionImgCreateForm_1_1_2\":\"InspectionImgModifyModal_InspectionImgCreateForm_1_1_2__3xw30\",\"InspectionImgCreateForm_1_2\":\"InspectionImgModifyModal_InspectionImgCreateForm_1_2__1x49N\"};","import React from \"react\";\r\nimport DaumPostcode from 'react-daum-postcode';\r\nimport style from \"./style.module.css\";\r\n\r\nexport const Modal = (props) => {\r\n  const {open, close, send} = props;\r\n\r\n  // 다음 주소 API\r\n  const handleComplete = (data) => {\r\n    let fullAddress = data.address;\r\n    let extraAddress = ''; \r\n    \r\n    if (data.addressType === 'R') {\r\n      if (data.bname !== '') {\r\n        extraAddress += data.bname;\r\n      }\r\n      if (data.buildingName !== '') {\r\n        extraAddress += (extraAddress !== '' ? `, ${data.buildingName}` : data.buildingName);\r\n      }\r\n      fullAddress += (extraAddress !== '' ? ` (${extraAddress})` : '');\r\n    }\r\n\r\n    //console.log(fullAddress);  // e.g. '서울 성동구 왕십리로2길 20 (성수동1가)'\r\n    \r\n    // 주소 데이터를 createForm으로 보냄\r\n    send(data);\r\n    return data;\r\n  }\r\n\r\n  return(\r\n    <div className={`${style.AddressModal}`}>\r\n      <div className={open ? `${style.openModal} ${style.modal}`: `${style.modal}`}>\r\n        {open? (\r\n          <section>\r\n            <div className={`${style.AddressModal_header}`}>\r\n              <div>우편번호 찾기</div>\r\n              <button className=\"close\" onClick={close}>\r\n                {\" \"}\r\n                &times;{\" \"}\r\n              </button>\r\n            </div>\r\n            <main>\r\n              <DaumPostcode\r\n                onComplete={handleComplete} \r\n                { ...props }\r\n              />\r\n            </main>\r\n          </section>\r\n        ):null}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import axios from \"axios\";\r\n\r\nexport function getPatientList(keyword=\"\") {\r\n  const promise = axios.get(\"/patient\", {params: {keyword}});\r\n  return promise;\r\n}\r\n\r\nexport function updatePatient(patient) {\r\n  const promise = axios.put(\"/patient\", patient);\r\n  return promise;\r\n}\r\n\r\nexport function createPatient(patient) {\r\n  const promise = axios.post(\"/patient\", patient);\r\n  return promise;\r\n}","import style from \"./style.module.css\";\r\n\r\nexport const ValidationModal = (props) => {\r\n  const {open, close, errorMsg } = props;\r\n\r\n  return (\r\n    <div className={`${style.ValidationModal}`}>\r\n      <div className={open ? `${style.openModal} ${style.modal}`: `${style.modal}`}>\r\n        {open? (\r\n          <section>\r\n            <div className={`${style.ValidationModal_header}`}>\r\n              <div>{errorMsg.title}</div>\r\n              <button className=\"close\" onClick={close}>\r\n                {\" \"}\r\n                &times;{\" \"}\r\n              </button>\r\n            </div>\r\n            <main>\r\n              {errorMsg.content}\r\n            </main>\r\n          </section>\r\n        ):null}\r\n      </div>\r\n    </div>\r\n  )\r\n}","import { Modal } from \"../../components/common/Address\";\r\nimport React, { useState } from \"react\";\r\nimport { createPatient } from \"apis/patient\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nimport { ValidationModal } from \"components/common/ValidationModal\";\r\n\r\nfunction PatientCreateForm(props) {\r\n  // 환자 상태\r\n  const [patient, setPatient] = useState({\r\n    patient_name: \"\",\r\n    patient_ssn1: \"\",\r\n    patient_ssn2: \"\",\r\n    patient_sex: \"M\",\r\n    patient_tel1: \"010\",\r\n    patient_tel2: \"\",\r\n    patient_tel3: \"\",\r\n    patient_zipcode: \"\",\r\n    patient_address: \"\",\r\n    patient_detailaddress1: \"\",\r\n    patient_detailaddress2: \"\",\r\n  });\r\n\r\n  // 마스킹 상태\r\n  const [masking, setMasking] = useState(\"\");\r\n\r\n  //---------------------------------------------------------------------------------------\r\n  // validation 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [validationModalOpen, setValidationModalOpen] = useState(false);\r\n  const openvalidationModal = () => {\r\n    setValidationModalOpen(true);\r\n  };\r\n  const closeValidationModal = () => {\r\n    setValidationModalOpen(false);\r\n  };\r\n  // 유효성 검사 오류 메시지\r\n  const [errorMsg, setErrorMsg] = useState({\r\n    title: \"환자 등록 실패\",\r\n    content: \"\",\r\n  });\r\n\r\n  //---------------------------------------------------------------------------------------\r\n  // 실행 함수\r\n  const handleChange = (event) => {\r\n    setPatient({\r\n      ...patient,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangeSsn = (event) => {\r\n    setPatient({\r\n      ...patient,\r\n      patient_ssn2: event.target.value,\r\n    });\r\n    setMasking(event.target.value);\r\n  };\r\n\r\n  // 환자 등록\r\n  const handleCreate = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      var patientValidation = true;\r\n\r\n      if (patient.patient_name === \"\") {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"환자명을 입력해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      } else if (patient.patient_name.length < 2) {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 환자명을 작성해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      } else if (patient.patient_ssn1 === \"\" || patient.patient_ssn2 === \"\") {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"주민등록번호를 입력해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      } else if (patient.patient_ssn1.length !== 6 || patient.patient_ssn2.length !== 7) {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 주민등록번호를 입력해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      } else if (patient.patient_tel2 === \"\" || patient.patient_tel3 === \"\") {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"전화번호를 입력해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      } else if (patient.patient_tel2.length < 3 || patient.patient_tel2.length > 4 || patient.patient_tel3.length < 3 || patient.patient_tel3.length > 4) {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 전화번호를 입력해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      }\r\n\r\n      if (patientValidation) {\r\n        const response = await createPatient(patient);\r\n        // console.log(response.data.result);\r\n        if (response.data.result === \"success\") {\r\n          if (response.data) {\r\n            setPatient({\r\n              patient_name: \"\",\r\n              patient_ssn1: \"\",\r\n              patient_ssn2: \"\",\r\n              patient_sex: \"M\",\r\n              patient_tel1: \"010\",\r\n              patient_tel2: \"\",\r\n              patient_tel3: \"\",\r\n              patient_zipcode: \"\",\r\n              patient_address: \"\",\r\n              patient_detailaddress1: \"\",\r\n              patient_detailaddress2: \"\",\r\n            });\r\n            setMasking(\"\");\r\n            ToastsStore.success(\"환자를 등록했습니다.\");\r\n            props.publishTopic(1);\r\n          }\r\n        } else if (response.data.result === \"notUnique\") {\r\n          setErrorMsg({\r\n            ...errorMsg,\r\n            content: \"이미 등록된 환자입니다.\",\r\n          });\r\n          return openvalidationModal();\r\n        }     \r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //---------------------------------------------------------------------------------------\r\n  // 주소 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [addressModalOpen, setAddressModalOpen] = useState(false);\r\n\r\n  const openAddressModal = (event) => {\r\n    event.preventDefault();\r\n    setAddressModalOpen(true);\r\n  };\r\n  const closeAddressModal = () => {\r\n    setAddressModalOpen(false);\r\n  };\r\n  const sendModal = (data) => {\r\n    setAddressModalOpen(false);\r\n    setPatient({\r\n      ...patient,\r\n      patient_zipcode: data.zonecode,\r\n      patient_address: data.address,\r\n    });\r\n    if (data.buildingName === \"\") {\r\n      setPatient((prevPatient) => {\r\n        return {\r\n          ...prevPatient,\r\n          patient_detailaddress2: data.bname,\r\n        };\r\n      });\r\n    } else {\r\n      setPatient((prevPatient) => {\r\n        return {\r\n          ...prevPatient,\r\n          patient_detailaddress2: data.bname + \", \" + data.buildingName,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <div className={`Patient_title`}>\r\n        환자 등록\r\n        <React.Fragment>\r\n          <ValidationModal open={validationModalOpen} close={closeValidationModal} errorMsg={errorMsg}></ValidationModal>\r\n        </React.Fragment>\r\n      </div>\r\n      <div className={`border p-3`}>\r\n        <form onSubmit={handleCreate}>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 m-0\">환자명 * : </label>\r\n            <div className=\"col-sm\">\r\n              <input type=\"text\" name=\"patient_name\" placeholder=\"환자명\" value={patient.patient_name} onChange={handleChange}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 m-0\">주민등록번호 * : </label>\r\n            <div className=\"row ml-3\">\r\n              <input type=\"text\" className=\"col-sm\" name=\"patient_ssn1\" value={patient.patient_ssn1} placeholder=\"앞자리\" onChange={handleChange}></input>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              <input type=\"text\" className=\"col-sm\" name=\"user_ssn2\" value={masking} placeholder=\"뒷자리\" onChange={handleChangeSsn} \r\n                onBlur={() => {setMasking(masking?.replace(/(?<=.{1})./gi, \"*\"));}}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 m-0\">성별 * : </label>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"patient_sex\" value=\"M\" checked={patient.patient_sex === \"M\" ? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">남</label>\r\n            </div>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"patient_sex\" value=\"F\" checked={patient.patient_sex === \"F\" ? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">여</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 m-0\">전화 번호 * : </label>\r\n            <div className=\"row col-sm\">\r\n              <select className=\"col-sm-2 ml-3\" name=\"patient_tel1\" value={patient.patient_tel1} onChange={handleChange}>\r\n                <option value=\"010\">010</option>\r\n                <option value=\"011\">011</option>\r\n                <option value=\"016\">016</option>\r\n                <option value=\"017\">017</option>\r\n                <option value=\"02\">02</option>\r\n                <option value=\"031\">031</option>\r\n                <option value=\"032\">032</option>\r\n                <option value=\"033\">033</option>\r\n                <option value=\"041\">041</option>\r\n                <option value=\"042\">042</option>\r\n                <option value=\"043\">043</option>\r\n                <option value=\"044\">044</option>\r\n                <option value=\"051\">051</option>\r\n                <option value=\"052\">052</option>\r\n                <option value=\"053\">053</option>\r\n                <option value=\"054\">054</option>\r\n                <option value=\"055\">055</option>\r\n                <option value=\"061\">061</option>\r\n                <option value=\"062\">062</option>\r\n                <option value=\"063\">063</option>\r\n                <option value=\"064\">064</option>\r\n              </select>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              <input type=\"text\" className=\"col-sm-2\" name=\"patient_tel2\" value={patient.patient_tel2} onChange={handleChange}></input>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              <input type=\"text\" className=\"col-sm-2\" name=\"patient_tel3\" value={patient.patient_tel3} onChange={handleChange}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 m-0\">주소 : </label>\r\n            <div className=\"col-sm\">\r\n              <div className=\"row mb-2\">\r\n                <input type=\"text\" className=\"col-sm-3 ml-3\" name=\"patient_zipcode\" value={patient.patient_zipcode} placeholder=\"우편번호\" onChange={handleChange} readOnly></input>\r\n                <React.Fragment>\r\n                  <button className=\"button_team2_empty\" onClick={openAddressModal}>\r\n                    우편번호 찾기\r\n                  </button>\r\n                  <Modal open={addressModalOpen} close={closeAddressModal} send={sendModal}></Modal>\r\n                </React.Fragment>\r\n              </div>\r\n              <input type=\"text\" className=\"col-sm mb-2\" name=\"patient_address\" placeholder=\"주소\" value={patient.patient_address} onChange={handleChange} readOnly></input>\r\n              <div className=\"row  no-gutters mb-2\">\r\n                <input type=\"text\" className=\"col-sm mr-2\" name=\"patient_detailaddress1\" value={patient.patient_detailaddress1} placeholder=\"상세주소\" onChange={handleChange}></input>\r\n                <input type=\"text\" className=\"col-sm\" name=\"patient_detailaddress2\" value={patient.patient_detailaddress2} placeholder=\"참고항목\" onChange={handleChange} readOnly></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button className=\"button_team2_fill\" type=\"submit\">\r\n              등록\r\n            </button>\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientCreateForm;\r\n","import style from \"./style.module.css\";\r\nfunction Spinner(props) {\r\n\r\n\r\n  return (\r\n    <div className={`${style.spinner2}`}>\r\n      <div className={`spinner-border text-primary`} role=\"status\">\r\n        <span className=\"sr-only\">loading...</span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Spinner;\r\n","import { FcSearch } from \"react-icons/fc\";\r\n\r\nfunction Nodata(props) {\r\n  return (\r\n    <div className=\"d-flex align-items-center justify-content-center mt-5\" style={{fontSize: \"1.5rem\", height: \"100%\"}}>\r\n      <div><FcSearch/> 데이터가 없습니다.</div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Nodata;","import React, { useEffect, useState } from \"react\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport { getPatientList } from \"apis/patient\";\r\nimport moment from \"moment\";\r\nimport Spinner from \"components/common/Spinner\";\r\nimport Nodata from \"components/common/NoData\";\r\n\r\nfunction PatientList(props) {\r\n  // 환자 목록 상태\r\n  const [patients, setPatients] = useState([]);\r\n\r\n  // 검색 상태\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  // 환자 코드 비교를 위한 상태\r\n  const [id, setId] = useState(\"\");\r\n\r\n  // Spinner\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setKeyword(event.target.value);\r\n  };\r\n\r\n  // 검색\r\n  const handleSearch = async (event) => {\r\n    setLoading(true);\r\n    try {\r\n      event.preventDefault();\r\n      const response = await getPatientList(keyword);\r\n      setPatients(response.data.patientList);\r\n    } catch(error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };  \r\n\r\n  // 환자 선택\r\n  const handleClick = (patient) => {\r\n    setId(patient.patient_id);\r\n    props.changePatient(patient);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const work = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await getPatientList();\r\n        setPatients(response.data.patientList);\r\n      } catch(error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    work();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"받습니다\", props.message);\r\n    const work = async () => {\r\n      try {\r\n        if (props.message.content === \"updatePatient\" || props.message.content === \"addPatient\") {\r\n           const response = await getPatientList();\r\n          setPatients(response.data.patientList);\r\n          setLoading(true);\r\n        }        \r\n      } catch(error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    work();\r\n  }, [props.message])\r\n    \r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div className=\"PatientList_tr\" key={key} style={style} onClick={() => handleClick(patients[index])}>\r\n        <div style={{width: \"3%\"}} key={patients.patient_id}><input type=\"checkbox\" name=\"patientCheck\" checked={id === patients[index].patient_id? true : false} width={50} readOnly></input></div>\r\n        <div style={{width: \"8%\"}}>{patients[index].patient_id}</div>\r\n        <div style={{width: \"10%\"}}>{patients[index].patient_name}</div>\r\n        <div style={{width: \"8%\"}}>{patients[index].patient_ssn1}</div>\r\n        <div style={{width: \"5%\"}}>{patients[index].patient_sex === \"M\"? \"남\" : \"여\"}</div>\r\n        <div style={{width: \"12%\"}}>{patients[index].patient_tel1}-{patients[index].patient_tel2}-{patients[index].patient_tel3}</div>\r\n        <div style={{width: \"41%\"}}>{patients[index].patient_address} {patients[index].patient_detailaddress1} {patients[index].patient_detailaddress2}</div>\r\n        <div style={{width: \"13%\"}}>{moment(patients[index].patient_regdate).format(\"yyyy-MM-DD\")}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"받습니다\", props.message);\r\n  // },[props])\r\n\r\n  return (    \r\n    <div className=\"PatientList\">\r\n      <div className={`Patient_title`}>환자 목록</div>\r\n      <div className={`PatientList_content border`}>\r\n        <div className=\"mb-2\">\r\n          <input type=\"text\" className=\"col-3\" name=\"search\" value={keyword} placeholder=\"이름/생년월일을 입력하세요.\" onChange={handleChange}></input>\r\n          <button className=\"button_team2_fill\" onClick={handleSearch}>검색</button>\r\n        </div>\r\n        <div className=\"text-center\">\r\n            <div className={`PatientList_Table`}>\r\n              <div style={{width: \"3%\"}}></div>\r\n              <div style={{width: \"9%\"}}>환자 코드</div>\r\n              <div style={{width: \"8%\"}}>환자명</div>\r\n              <div style={{width: \"10%\"}}>생년월일</div>\r\n              <div style={{width: \"4%\"}}>성별</div>\r\n              <div style={{width: \"15%\"}}>전화번호</div>\r\n              <div style={{width: \"39%\"}}>주소</div>\r\n              <div style={{width: \"13%\"}}>등록일</div>\r\n              <div style={{width: \"2%\"}}></div>\r\n            </div>\r\n          <div>\r\n            {loading ? <Spinner /> \r\n            : \r\n            patients.length === 0 ?\r\n            <React.Fragment>\r\n              <Nodata />\r\n            </React.Fragment>\r\n            :\r\n            <>\r\n              <AutoSizer disableHeight>\r\n                {({width, height}) => {\r\n                  return <List width={width} height={675} list={patients} rowCount={patients.length} rowHeight={44} rowRenderer={rowRenderer} overscanRowCount={5}></List>\r\n                }}\r\n              </AutoSizer>\r\n            </>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientList;","import { Modal } from \"../../components/common/Address\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { updatePatient } from \"apis/patient\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nimport { ValidationModal } from \"components/common/ValidationModal\";\r\n\r\nfunction PatientUpdateForm(props) {\r\n  // 환자 상태\r\n  const [patient, setPatient] = useState({});\r\n  const [patientId, setPatientId] = useState(\"\");\r\n\r\n  // 마스킹 상태\r\n  const [masking, setMasking] = useState(\"\");\r\n  \r\n  //---------------------------------------------------------------------------------------\r\n   // validation 모달 상태(open일 떄 true로 바뀌어 열림)\r\n   const [validationModalOpen, setValidationModalOpen] = useState(false);\r\n   // 유효성 검사 오류 메시지\r\n   const [errorMsg, setErrorMsg] = useState({\r\n     title : \"환자정보 수정 실패\",\r\n     content: \"\"\r\n   }); \r\n   const openvalidationModal = () => {\r\n     setValidationModalOpen(true);\r\n   }; \r\n   const closeValidationModal = () => {\r\n     setValidationModalOpen(false);\r\n   };\r\n\r\n  //---------------------------------------------------------------------------------------\r\n  // 실행 함수\r\n  const handleChange = (event) => {\r\n    setPatient({\r\n      ...patient,\r\n      patient_id: props.patient.patient_id,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  const handleChangeSsn = (event) => {\r\n    setPatient({\r\n      ...patient,\r\n      patient_ssn2 : event.target.value\r\n    });\r\n    setMasking(event.target.value);\r\n  };\r\n\r\n\r\n  // 환자 정보 수정\r\n  const handleUpdate = async (event) => {\r\n    event.preventDefault();\r\n    try{\r\n      var patientValidation = true;\r\n\r\n      if (patient.patient_name === \"\") {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"환자명을 입력해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      } else if (patient.patient_name.length < 2) {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 환자명을 작성해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      } else if (patient.patient_ssn1 === \"\" || patient.patient_ssn2 === \"\") {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"주민등록번호를 입력해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      } else if (patient.patient_ssn1.length !== 6 || patient.patient_ssn2.length !== 7) {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 주민등록번호를 입력해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      } else if (patient.patient_tel2 === \"\" || patient.patient_tel3 === \"\") {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"전화번호를 입력해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      } else if (patient.patient_tel2.length < 3 || patient.patient_tel2.length > 4 || patient.patient_tel3.length < 3 || patient.patient_tel3.length > 4) {\r\n        patientValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 전화번호를 입력해주세요.\",\r\n        });\r\n        return openvalidationModal();\r\n      }\r\n\r\n      if (patientValidation) {\r\n        const response = await updatePatient(patient);\r\n        if (response.data) {\r\n          ToastsStore.success(\"환자 정보를 수정했습니다.\");\r\n          props.publishTopic(0);\r\n        }\r\n      }      \r\n    } catch(error) {\r\n      console.log(error);\r\n    }    \r\n  }; \r\n\r\n  //---------------------------------------------------------------------------------------\r\n  // 주소 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [addressModalOpen, setAddressModalOpen] = useState(false);\r\n\r\n  const openAddressModal = (event) => {\r\n    event.preventDefault();\r\n    setAddressModalOpen(true);\r\n  };\r\n  const closeAddressModal = () => {\r\n    setAddressModalOpen(false);\r\n  };\r\n  const sendModal = (data) => {\r\n    setAddressModalOpen(false);\r\n    // console.log(\"send1 실행\", data);\r\n    setPatient({\r\n      ...patient,\r\n      patient_zipcode: data.zonecode, \r\n      patient_address: data.address\r\n    })\r\n    if (data.buildingName === \"\") {\r\n      setPatient(prevPatient => {\r\n        return {\r\n          ...prevPatient,\r\n          patient_detailaddress2: data.bname          \r\n        };\r\n      });\r\n    } else {\r\n      setPatient(prevPatient => {\r\n        return {\r\n          ...prevPatient,\r\n          patient_detailaddress2: data.bname + \", \" + data.buildingName   \r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  //---------------------------------------------------------------------------------------\r\n  // 마운트 시 실행 함수\r\n  useEffect(() => {\r\n    setPatient({\r\n      patient_id: props.patient.patient_id,\r\n      patient_name: props.patient.patient_name,\r\n      patient_ssn1: props.patient.patient_ssn1,\r\n      patient_ssn2: props.patient.patient_ssn2,\r\n      patient_sex: props.patient.patient_sex,\r\n      patient_tel1: props.patient.patient_tel1,\r\n      patient_tel2: props.patient.patient_tel2,\r\n      patient_tel3: props.patient.patient_tel3, \r\n      patient_zipcode: props.patient.patient_zipcode, \r\n      patient_address: props.patient.patient_address, \r\n      patient_detailaddress1: props.patient.patient_detailaddress1, \r\n      patient_detailaddress2: props.patient.patient_detailaddress2,\r\n      patient_regdate: props.patient.patient_regdate\r\n    });\r\n    setPatientId(props.patient.patient_id);\r\n\r\n    if (props.patient.patient_ssn2) {\r\n      let ssn2Masking = props.patient.patient_ssn2.slice(0, 1) + \"******\";\r\n      setMasking(ssn2Masking);\r\n    }\r\n  }, [props.patient]);\r\n\r\n  return (\r\n    <div>\r\n      <div className={`Patient_title`}>환자 정보 수정</div>\r\n      <div className={`border p-3`}>\r\n        <form onSubmit={handleUpdate}>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 pl-3 p-0 m-0\">환자 코드 : </label>\r\n            <div className=\"col-sm d-flex \">{patient.patient_id}</div>\r\n            <React.Fragment>\r\n              <ValidationModal open={validationModalOpen} close={closeValidationModal} errorMsg={errorMsg}></ValidationModal>\r\n            </React.Fragment>\r\n          </div>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 pl-3 p-0 m-0\">환자명 * : </label>\r\n            <div className=\"col-sm\">\r\n              <input type=\"text\" name=\"patient_name\" value={patient.patient_name} placeholder=\"환자명\" onChange={handleChange}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 m-0\">주민등록번호 * : </label>\r\n            <div className=\"row ml-3\">\r\n              <input type=\"text\" className=\"col-sm\" name=\"patient_ssn1\" value={patient.patient_ssn1} placeholder=\"앞자리\" onChange={handleChange}></input>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              <input type=\"text\" className=\"col-sm\" name=\"patient_ssn2\" value={masking} placeholder=\"뒷자리\" \r\n                     onChange={handleChangeSsn} onBlur={() => {setMasking(masking?.replace(/(?<=.{1})./gi, '*'));}}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 pl-3 p-0 m-0\">성별 * : </label>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"patient_sex\" value=\"M\" checked={patient.patient_sex === \"M\"? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">남</label>\r\n            </div>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"patient_sex\" value=\"F\" checked={patient.patient_sex === \"F\"? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">여</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 m-0\">전화 번호 * : </label>\r\n            <div className=\"row col-sm\">\r\n              <select className=\"col-sm-2 ml-3\" name=\"patient_tel1\" value={patient.patient_tel1} onChange={handleChange}>\r\n                <option value=\"010\">010</option>\r\n                <option value=\"011\">011</option>\r\n                <option value=\"016\">016</option>\r\n                <option value=\"017\">017</option>\r\n                <option value=\"02\">02</option>\r\n                <option value=\"031\">031</option>\r\n                <option value=\"032\">032</option>\r\n                <option value=\"033\">033</option>\r\n                <option value=\"041\">041</option>\r\n                <option value=\"042\">042</option>\r\n                <option value=\"043\">043</option>\r\n                <option value=\"044\">044</option>\r\n                <option value=\"051\">051</option>\r\n                <option value=\"052\">052</option>\r\n                <option value=\"053\">053</option>\r\n                <option value=\"054\">054</option>\r\n                <option value=\"055\">055</option>\r\n                <option value=\"061\">061</option>\r\n                <option value=\"062\">062</option>\r\n                <option value=\"063\">063</option>\r\n                <option value=\"064\">064</option>\r\n              </select>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              <input type=\"text\" className=\"col-sm-2\" name=\"patient_tel2\" value={patient.patient_tel2} onChange={handleChange}></input>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              <input type=\"text\" className=\"col-sm-2\" name=\"patient_tel3\" value={patient.patient_tel3} onChange={handleChange}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 m-0\">주소 : </label>\r\n            <div className=\"col-sm\">\r\n              <div className=\"row mb-2\"> \r\n                <input type=\"text\" className=\"col-sm-3 ml-3\" name=\"patient_zipcode\" value={patient.patient_zipcode} placeholder=\"우편번호\" readOnly></input>\r\n                <React.Fragment>\r\n                  <button className=\"button_team2_empty\" onClick={openAddressModal}>우편번호 찾기</button>\r\n                  <Modal open={addressModalOpen} close={closeAddressModal} send={sendModal}></Modal>\r\n                </React.Fragment>   \r\n              </div>\r\n              <input type=\"text\" className=\"col-sm mb-2\" name=\"patient_address\" value={patient.patient_address} placeholder=\"주소\" readOnly></input>\r\n              <div className=\"row no-gutters mb-2\">\r\n                <input type=\"text\" className=\"col-sm mr-2\" name=\"patient_detailaddress1\" value={patient.patient_detailaddress1} placeholder=\"상세주소\" onChange={handleChange}></input>\r\n                <input type=\"text\" className=\"col-sm\" name=\"patient_detailaddress2\" value={patient.patient_detailaddress2} placeholder=\"참고항목\" readOnly></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"Patient_item\">\r\n            <label className=\"col-sm-3 col-form-label pl-3 p-0\">등록 날짜 : </label>\r\n            <div className=\"col-sm d-flex align-items-center\">{patientId !== undefined? moment(patient.patient_regdate).format(\"yyyy-MM-DD\") : \"\"}</div>\r\n          </div>\r\n          {patientId !== undefined?\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button className=\"button_team2_fill\" type=\"submit\">수정</button>\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground/> \r\n          </div>\r\n          :<div className=\"d-flex justify-content-end\" style={{\"visibility\":\"hidden\"}}><button className=\"button_team2_fill\">수정</button></div>\r\n          }\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PatientUpdateForm;","import axios from \"axios\";\r\n\r\nexport function sendMqttMessage({topic, content}) {\r\n  const promise = axios.get(\"/sendMqttMessage\", {params:{topic, content}});\r\n  return promise;\r\n}\r\n\r\n","import PatientCreateForm from \"./PatientCreateForm\";\r\nimport PatientList from \"./PatientList\";\r\nimport PatientUpdateForm from \"./PatientUpdateForm\";\r\nimport \"./Patient.css\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useRef } from \"react\";\r\nimport Paho from \"paho-mqtt\";\r\nimport { sendMqttMessage } from \"apis/mqtt\";\r\n\r\nfunction Patient(props) {\r\n  // 환자 상태\r\n  const [patient, setPatient] = useState({});\r\n\r\n  function changePatient(patient) {\r\n    setPatient({\r\n      patient_id: patient.patient_id,\r\n      patient_name: patient.patient_name,\r\n      patient_ssn1: patient.patient_ssn1,\r\n      patient_ssn2: patient.patient_ssn2,\r\n      patient_sex: patient.patient_sex,\r\n      patient_tel1: patient.patient_tel1,\r\n      patient_tel2: patient.patient_tel2,\r\n      patient_tel3: patient.patient_tel3, \r\n      patient_zipcode: patient.patient_zipcode, \r\n      patient_address: patient.patient_address, \r\n      patient_detailaddress1: patient.patient_detailaddress1, \r\n      patient_detailaddress2: patient.patient_detailaddress2,\r\n      patient_regdate: patient.patient_regdate\r\n    })\r\n  };\r\n  \r\n  //---------------------------------------------------------------------------------------\r\n  // MQTT\r\n  const [subTopic, setSubTopic] = useState(\"/138010/nurse\");\r\n\r\n  const pubMessage = [{\r\n    topic: \"/138010/nurse\",\r\n    content: \"updatePatient\"}, {\r\n      topic: \"/138010/nurse\",\r\n      content: \"addPatient\"\r\n    }];\r\n\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  let client = useRef(null);\r\n\r\n  const connectMqttBroker = () => {\r\n    // Paho.Mqtt.Client x\r\n    client.current = new Paho.Client(\"kosa3.iptime.org\", 50012, \"client-\" + new Date().getTime());\r\n    // client.current = new Paho.Client(\"localhost\", 61614, \"client-\" + new Date().getTime());\r\n\r\n    client.current.onConnectionLost = () => {\r\n      console.log(\"Mqtt 접속 끊김\");\r\n    };\r\n\r\n    client.current.onMessageArrived = (msg) => {\r\n      console.log(\"메시지 수신\");\r\n      var Jmessage = JSON.parse(msg.payloadString);\r\n      setMessage(() => {\r\n        return Jmessage;\r\n      });\r\n    };\r\n\r\n    client.current.connect({\r\n      onSuccess: () => {\r\n        client.current.subscribe(subTopic);\r\n        console.log(\"Mqtt 접속 성공\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const disconnectMqttBroker = () => {\r\n    client.current.disconnect(); // onConnectionLost 실행됨\r\n  };\r\n\r\n  const publishTopic = async (num) => {\r\n    await sendMqttMessage(pubMessage[num]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectMqttBroker();\r\n    console.log(\"MESSAGE: \", message);\r\n  });\r\n\r\n  return (\r\n    <div className={`row no-gutters Patient`}>\r\n      {/* 좌측 */}\r\n      <div className=\"Patient_left\">\r\n        {/* 환자 목록 */}\r\n        <PatientList patient={patient} changePatient={changePatient} message={message}/>\r\n      </div>\r\n\r\n      {/* 우측 */}\r\n      <div className=\"Patient_right\">\r\n        <div>\r\n          {/* 환자 정보 수정 */}\r\n          <PatientUpdateForm patient={patient} publishTopic={publishTopic}/>\r\n        </div>\r\n        <div>\r\n          {/* 환자 등록 */}\r\n          <PatientCreateForm publishTopic={publishTopic}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Patient;","import axios from \"axios\";\r\n\r\n/* Register  ------------------------------------------------------------- */\r\n\r\n// register 불러오기 \r\nexport function getRegisterList(date, state=\"\"){\r\n  const promise = axios.get(\"/register\", {params: {date, state}});\r\n  return promise;\r\n}\r\n\r\n// register 등록하기\r\nexport function createRegister(register){\r\n  const promise = axios.post(\"/register\", register);\r\n  return promise;\r\n}\r\n\r\n// register 업데이트\r\nexport function updateRegister(register){\r\n  const promise = axios.put(\"/register\", register);\r\n  return promise;\r\n}\r\n\r\n// register 상태변경\r\nexport function changeRegisterState(register){\r\n  const promise = axios.put(\"/register/state\", register);\r\n  return promise;\r\n}\r\n\r\n/* User ------------------------------------------------------------------ */\r\n\r\n// 의사 불러오기\r\nexport function getDoctorList(date){\r\n  const promise = axios.get(\"/register/doctors\");\r\n  return promise;\r\n}\r\n\r\n// 환자 불러오기\r\nexport function getPatientList(date){\r\n  const promise = axios.get(\"/register/patients\");\r\n  return promise;\r\n}\r\n\r\n/* To Do List ------------------------------------------------------------- */\r\n\r\n// ToDoList 불러오기\r\nexport function getToDoLists(date, user_id){\r\n  const promise = axios.get(\"/register/todolists\", {params: {date, user_id}});\r\n  return promise;\r\n}\r\n\r\n// ToDoList 추가\r\nexport function createToDoLists(schedule){\r\n  const promise = axios.post(\"/register/todolists\", schedule);\r\n  return promise;\r\n}\r\n\r\n// ToDoList 변경\r\nexport function updateToDoLists(schedule){\r\n  const promise = axios.put(\"/register/todolists\", schedule);\r\n  return promise;\r\n}\r\n\r\n// ToDoList 삭제\r\nexport function deleteToDoLists(id){\r\n  const promise = axios.delete(\"/register/todolists\", {params: {id}});\r\n  return promise;\r\n}\r\n\r\n// ToDoList 캘린더 의사별 월별 환자 예약수 불러오기\r\nexport function getRegisterByDoctor(user_id, date){\r\n  const promise = axios.get(\"/register/calendar\",{params: {user_id, date}});\r\n  return promise;\r\n}","import moment from \"moment\";\r\nimport React from \"react\";\r\n\r\nfunction RegisterListItem(props) {\r\n  const {index , register, selectedRegister, checkboxHandler} = props;\r\n  return (\r\n    <tr key={index} className=\"RegisterList_content_2_tr\" onClick={(event) => checkboxHandler(register.register_id)}>\r\n      <td><input type=\"checkbox\" name=\"chk\" checked={selectedRegister === register.register_id ? true : false} readOnly /></td>\r\n      <td>{index + 1}</td>\r\n      <td>{moment(register.register_date).format(\"yyyy-MM-DD HH:mm\")}</td>\r\n      <td>{register.register_id}</td>\r\n      <td>{register.patient_name}</td>\r\n      <td>{(register.patient_ssn).substring(0, 6)}</td>\r\n      <td>{register.patient_sex}</td>\r\n      <td>{register.user_name}</td>\r\n      <td>{register.register_memo}</td>\r\n      <td>{register.register_communication}</td>\r\n      <td className={\r\n        register.register_state === \"완료\" ? \"RegisterList_content_2_tr_td_finish\" : \"\" ||\r\n          register.register_state === \"취소\" ? \"RegisterList_content_2_tr_td_cancel\" : \"\" ||\r\n            register.register_state === \"대기\" ? \"RegisterList_content_2_tr_td_ready\" : \"\"\r\n      }>\r\n        {register.register_state}\r\n      </td>\r\n    </tr>\r\n  );\r\n}\r\nexport default React.memo(RegisterListItem);\r\n","import \"./Register.css\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport { useEffect, useState, useCallback } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport ko from 'date-fns/locale/ko';\r\nimport moment from \"moment\";\r\nimport { registerLocale } from \"react-datepicker\";\r\nimport { changeRegisterState, getRegisterList } from \"apis/register\";\r\nimport Spinner from \"components/common/Spinner\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nimport Nodata from \"components/common/NoData\";\r\nimport React from \"react\";\r\nimport RegisterListItem from \"./components/items/RegisterListItem\";\r\nregisterLocale(\"ko\", ko);\r\n\r\nfunction RegisterList(props) {\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n\r\n  // 공통 날짜 상태 \r\n  const { registerDate, setSelectedPatient, setRegisterDate, publishTopic, message } = props;\r\n  // 접수 목록 상태\r\n  const [registerList, setRegisterList] = useState([]);\r\n\r\n  // 접수 날짜 검색\r\n  const [startDate, setStartDate] = useState(registerDate);\r\n  //const [dateForRegister2, setDateForRegister2] = useState(registerDate);\r\n\r\n  // 접수 상태 (대기, 완료, 취소)\r\n  const [registerStateReady, setRegisterStateReady] = useState(0);\r\n  const [registerStateFinish, setRegisterStateFinish] = useState(0);\r\n  const [registerStateCancel, setRegisterStateCancel] = useState(0);\r\n\r\n  // 선택된 접수 상태\r\n  const [selectedRegister, setSelectedRegister] = useState();\r\n\r\n  // spinner \r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n\r\n  // 날짜 이동 버튼\r\n  const searchDateBtn = (newDate) => {\r\n    setRegisterDate(newDate);\r\n  };\r\n\r\n  // 체크박스 클릭시 체크 됨\r\n  const checkboxHandler = (register_id) => {\r\n    if (register_id === selectedRegister) {\r\n      setSelectedRegister(register_id);\r\n    } else {\r\n      setSelectedRegister(register_id);\r\n      const selectPatient = registerList.find(register => {\r\n        // 해당 아이디의 정보를 찾아서 수정\r\n        if (register.register_id === register_id) {\r\n          return true;\r\n        }\r\n      });\r\n      setSelectedPatient(selectPatient);\r\n    }\r\n  };\r\n\r\n  // 진료 상태 대기 -> 완료로 \r\n  const changeRegisterStateToFinish = async (register_id) => {\r\n    try {\r\n      var finishValidation = true;\r\n      let selectRegister = registerList.find(register => {\r\n        if (register.register_id === register_id) {\r\n          if (register.register_state === \"대기\") {\r\n            return register;\r\n          }\r\n        }\r\n      });\r\n      if (selectRegister) {\r\n        if (finishValidation) {\r\n          selectRegister.register_state = \"완료\";\r\n          var list = await changeRegisterState(selectRegister);\r\n          publishTopic(0);\r\n          publishTopic(1);\r\n        }\r\n      } else {\r\n        ToastsStore.success(\"대기 환자를 체크해 주세요.\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // 진료 상태 대기 -> 취소로 \r\n  const changeRegisterStateToCancel = async (register_id) => {\r\n    try {\r\n      let selectRegister = registerList.find(register => {\r\n        if (register.register_id === register_id) {\r\n          if (register.register_state === \"대기\") {\r\n            return register;\r\n          }\r\n        }\r\n      });\r\n      if (selectRegister) {\r\n        selectRegister.register_state = \"취소\";\r\n        var list = await changeRegisterState(selectRegister);\r\n        publishTopic(0);\r\n      } else {\r\n        ToastsStore.success(\"대기 환자를 체크해 주세요.\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // 전체 보여주기\r\n  const showTotal = async () => {\r\n    setLoading(true);\r\n    try {\r\n      var list = await getRegisterList(moment(registerDate).format(\"yyyy-MM-DD HH:mm\"), \"\");\r\n      setRegisterList(list.data.registerList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 대기 보여주기\r\n  const showReady = async () => {\r\n    setLoading(true);\r\n    try {\r\n      var list = await getRegisterList(moment(registerDate).format(\"yyyy-MM-DD HH:mm\"), \"대기\");\r\n      setRegisterList(list.data.registerList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 완료 보여주기\r\n  const showFinish = async () => {\r\n    setLoading(true);\r\n    try {\r\n      var list = await getRegisterList(moment(registerDate).format(\"yyyy-MM-DD HH:mm\"), \"완료\");\r\n      setRegisterList(list.data.registerList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 취소 보여주기\r\n  const showCancel = async () => {\r\n    setLoading(true);\r\n    try {\r\n      var list = await getRegisterList(moment(registerDate).format(\"yyyy-MM-DD HH:mm\"), \"취소\");\r\n      setRegisterList(list.data.registerList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //실행 함수\r\n  //-------------------------------------------------------------\r\n\r\n  //해당 날짜에 맞는 리스트 가져오기\r\n  const getList = async (date) => {\r\n    setLoading(true);\r\n    try {\r\n      var list = await getRegisterList(moment(date).format(\"yyyy-MM-DD HH:mm\"), \"\");\r\n      setRegisterList(list.data.registerList);\r\n      getRegistersState(list.data.registerList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //리스트의 개수 새기\r\n  const getRegistersState = (registerList) => {\r\n    var count1 = 0;\r\n    var count2 = 0;\r\n    var count3 = 0;\r\n    for (var i = 0; i < registerList.length; i++) {\r\n      if (registerList[i].register_state === \"대기\") {\r\n        count1++;\r\n      } else if (registerList[i].register_state === \"완료\") {\r\n        count2++;\r\n      } else if (registerList[i].register_state === \"취소\") {\r\n        count3++;\r\n      }\r\n    }\r\n    setRegisterStateReady(count1); // 대기\r\n    setRegisterStateFinish(count2); // 완료\r\n    setRegisterStateCancel(count3); // 취소\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n\r\n\r\n  useEffect(() => {\r\n    const work = async () => {\r\n      setLoading(true);\r\n      try {\r\n        var list = await getRegisterList(moment(registerDate).format(\"yyyy-MM-DD HH:mm\"), \"\");\r\n        setRegisterList(list.data.registerList);\r\n        getRegistersState(list.data.registerList);\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    work();\r\n  }, [registerDate]);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"MESSAGE: \", message);\r\n    const work = async () => {\r\n      setLoading(true);\r\n      try {\r\n        var list = await getRegisterList(moment(registerDate).format(\"yyyy-MM-DD HH:mm\"), \"\");\r\n        setRegisterList(list.data.registerList);\r\n        getRegistersState(list.data.registerList);\r\n      } catch (e) {\r\n        console.log(e);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (message.content === \"refreshRegisters\") {\r\n      ToastsStore.success(\"접수현황이 갱신 되었습니다.\");\r\n      work();\r\n    }\r\n  }, [message]);\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <div>\r\n      {/* 상단 메뉴 이름 + 버튼 */}\r\n      <div className=\"RegisterList_header\">\r\n        <div className=\"RegisterList_header_content\">\r\n          접수 내역\r\n        </div>\r\n        <div className=\"RegisterList_header_button\">\r\n          <Link to=\"/Patient\" ><button className=\"button_team2_fill\">신규 환자 등록</button></Link>\r\n        </div>\r\n      </div>\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n      {/* 하단 내용 */}\r\n      <div className=\"RegisterList_content border\">\r\n        {/* 달력 , 상태 , 완료 버튼 */}\r\n        <div className=\"RegisterList_content_1\">\r\n          <div className=\"RegisterList_content_1_1\">\r\n            <div>\r\n              <DatePicker locale=\"ko\" selected={startDate} onChange={(date) => setStartDate(date)} dateFormat=\"yyyy.MM.dd\" />\r\n            </div>\r\n            <div>\r\n              <button className=\"button_team2_fill\" onClick={() => searchDateBtn(startDate)}>이동</button>\r\n            </div>\r\n          </div>\r\n          <div className=\"RegisterList_content_1_2\">\r\n            <div className=\"RegisterList_content_1_2_total\" onClick={showTotal}>\r\n              전체: {registerStateReady + registerStateFinish + registerStateCancel}명\r\n            </div>\r\n            <div className=\"RegisterList_content_1_2_ready\" onClick={showReady}>\r\n              대기: {registerStateReady}명\r\n            </div>\r\n            <div className=\"RegisterList_content_1_2_finish\" onClick={showFinish}>\r\n              완료: {registerStateFinish}명\r\n            </div>\r\n            <div className=\"RegisterList_content_1_2_cancel \" onClick={showCancel}>\r\n              취소: {registerStateCancel}명\r\n            </div>\r\n          </div>\r\n          <div className=\"RegisterList_content_1_3\">\r\n            <button className=\"button_team2_empty\" onClick={() => changeRegisterStateToCancel(selectedRegister)}>접수 취소</button>\r\n            <button className=\"button_team2_fill\" onClick={() => changeRegisterStateToFinish(selectedRegister)}>진료 시작</button>\r\n          </div>\r\n        </div>\r\n        {/* 접수 내역 테이블 */}\r\n        <div className=\"RegisterList_content_2\">\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th></th>\r\n                <th>순번</th>\r\n                <th>예약 시간</th>\r\n                <th>접수 번호</th>\r\n                <th>환자명</th>\r\n                <th>생년월일</th>\r\n                <th>성별</th>\r\n                <th>담당의</th>\r\n                <th>접수 메모</th>\r\n                <th>의사소통 메모</th>\r\n                <th>접수 상태</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {loading ? <Spinner />\r\n                : registerList.length === 0 ?\r\n                  <tr>\r\n                    <td colSpan=\"12\">\r\n                      <React.Fragment>\r\n                        <Nodata />\r\n                      </React.Fragment>\r\n                    </td>\r\n                  </tr>\r\n                  : <>\r\n                    {registerList.map((register, index) => {\r\n                      return (\r\n                        <RegisterListItem\r\n                          key={index}\r\n                          index={index}\r\n                          register={register}\r\n                          selectedRegister={selectedRegister}\r\n                          checkboxHandler={checkboxHandler}\r\n                        />\r\n                      );\r\n                    })} </>}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default RegisterList;\r\n","import moment from \"moment\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nfunction RegisterRead(props) {\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const {selectedPatient, changeRegister} = props;\r\n\r\n  const noneRegister = {\r\n    register_id: \"\",\r\n    register_patient_id: \"\",\r\n    register_user_id: \"\",\r\n    register_regdate: \"\",\r\n    register_date: \"\",\r\n    register_starttime: \"\",\r\n    register_memo: \"\",\r\n    register_communication: \"\",\r\n    register_state: \"\",\r\n\r\n    // Add Data\r\n    patient_name: \"\",\r\n    patient_ssn: \"\",\r\n    patient_sex: \"\",\r\n    patient_tel: \"\",\r\n\r\n    user_name: \"\"\r\n  };\r\n  const [selectPatient, setSelectPatient] = useState(noneRegister);\r\n\r\n  const showUpdateForm = (event) => {\r\n    changeRegister();\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n\r\n  useEffect(() => {\r\n    setSelectPatient(selectedPatient);\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    //setSelectPatient(noneRegister);\r\n  },[props.registerDate]);\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <>\r\n      {/* 상단 메뉴 이름 */}\r\n      <div className=\"RegisterRead_header\">\r\n        접수 상세 내역\r\n      </div>\r\n      {/* 하단 내용 */}\r\n      <div className=\"RegisterRead_content border\">\r\n        {/* 접수 상세 내역 내용 */}\r\n        <div className=\"RegisterRead_content_form\">\r\n          <form>\r\n            <div className=\"RegisterRead_content_list\">\r\n              <div className=\"RegisterRead_content_list_label\">\r\n                환자명:\r\n              </div>\r\n              <div className=\"RegisterRead_content_list_input\">\r\n                <input className=\"RegisterRead_content_list_input_readOnly\" type=\"text\" value={selectPatient.patient_name} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterRead_content_list\">\r\n              <div className=\"RegisterRead_content_list_label\">\r\n                생년월일:\r\n              </div>\r\n              <div className=\"RegisterRead_content_list_input\">\r\n                <input className=\"RegisterRead_content_list_input_readOnly\" type=\"text\" value={selectPatient.patient_ssn ? selectPatient.patient_ssn.substring(0, 6) : selectPatient.patient_ssn} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterRead_content_list\">\r\n              <div className=\"RegisterRead_content_list_label\">\r\n                성별:\r\n              </div>\r\n              <div className=\"RegisterRead_content_list_input\">\r\n                <input className=\"RegisterRead_content_list_input_readOnly\" type=\"text\" value={selectPatient.patient_sex} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterRead_content_list\">\r\n              <div className=\"RegisterRead_content_list_label\">\r\n                전화번호:\r\n              </div>\r\n              <div className=\"RegisterRead_content_list_input\">\r\n                <input className=\"RegisterRead_content_list_input_readOnly\" type=\"text\" value={selectPatient.patient_tel} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterRead_content_list\">\r\n              <div className=\"RegisterRead_content_list_label\">\r\n                담당의:\r\n              </div>\r\n              <div className=\"RegisterRead_content_list_input\">\r\n                <input className=\"RegisterRead_content_list_input_readOnly\" type=\"text\" value={selectPatient.user_name} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterRead_content_list\">\r\n              <div className=\"RegisterRead_content_list_label\">\r\n                진료 날짜:\r\n              </div>\r\n              <div className=\"RegisterRead_content_list_input\">\r\n                <input className=\"RegisterRead_content_list_input_readOnly\" type=\"text\" value={selectPatient.register_date ? moment(selectPatient.register_date).format(\"yyyy-MM-DD H:mm\") : \"\"} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterRead_content_list\">\r\n              <div className=\"RegisterRead_content_list_label\">\r\n                접수 메모:\r\n              </div>\r\n              <div className=\"RegisterRead_content_list_input\">\r\n                <input className=\"RegisterRead_content_list_input_readOnly\" type=\"text\" value={selectPatient.register_memo} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterRead_content_list\">\r\n              <div className=\"RegisterRead_content_list_label\">\r\n                의사소통 메모:\r\n              </div>\r\n              <div className=\"RegisterRead_content_list_input\">\r\n                <input className=\"RegisterRead_content_list_input_readOnly\" type=\"text\" value={selectPatient.register_communication} readOnly />\r\n              </div>\r\n            </div>\r\n          </form>\r\n          {/* 수정 취소 버튼 */}\r\n          <div className=\"RegisterRead_content_button\">\r\n            {selectPatient.register_state === \"대기\" ? <button className=\"button_team2_fill\" onClick={showUpdateForm}>수정</button> : false}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default RegisterRead;\r\n","import DatePicker from \"react-datepicker\";\r\nimport { useEffect, useState } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport setHours from \"date-fns/setHours\";\r\nimport setMinutes from \"date-fns/setMinutes\";\r\nimport { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\nimport style from \"./RegisterCreateForm.module.css\";\r\nimport moment from \"moment\";\r\n\r\nregisterLocale(\"ko\", ko);\r\n\r\nfunction RegisterCreateForm(props) {\r\n  //빈 객체\r\n  let noneRegister = {\r\n    register_id: \"\",\r\n    register_patient_id: \"\",\r\n    register_user_id: \"\",\r\n    register_regdate: \"\",\r\n    register_date: new Date(),\r\n    register_starttime: \"\",\r\n    register_memo: \"\",\r\n    register_communication: \"\",\r\n    register_state: \"\",\r\n\r\n    // 추가된 DTO \r\n    patient_name: \"\",\r\n    patient_ssn: \"\",\r\n    patient_sex: \"\",\r\n    patient_tel: \"\",\r\n\r\n    user_name: \"\",\r\n  };\r\n  var register;\r\n  if (props.register) {\r\n    register = props.register;\r\n  } else {\r\n    register = noneRegister;\r\n  }\r\n  const noneDoctor = {\r\n    user_id: \"\",\r\n    user_hospital_id: \"\",\r\n    user_password: \"\",\r\n    user_name: \"\",\r\n    user_ssn: \"\",\r\n    user_tel: \"\",\r\n    user_email: \"\",\r\n    user_sex: \"\",\r\n    user_zipcode: \"\",\r\n    user_address: \"\",\r\n    user_detailaddress1: \"\",\r\n    user_detailaddress2: \"\",\r\n    user_regdate: \"\",\r\n    user_enabled: \"\",\r\n    user_authority: \"\",\r\n  };\r\n  var doctors;\r\n  if (props.doctors) {\r\n    doctors = props.doctors;\r\n  } else {\r\n    doctors = noneDoctor;\r\n  }\r\n\r\n\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [minDate, setMinDate] = useState(new Date());\r\n  const [minTime, setMinTime] = useState(setHours(setMinutes(new Date(), 0), 9));\r\n  const [maxTime, setMaxTime] = useState(setHours(setMinutes(new Date(), 45), 17));\r\n  const [showTimeSelect, setShowTimeSelect] = useState(true);\r\n\r\n  // 담당의 상태\r\n  const [doctorsList, setDoctorsList] = useState(doctors);\r\n\r\n  const [newDoctor, setNewDoctor] = useState(register.register_user_id ? register.register_user_id : \"doctor\");\r\n\r\n  const changeNewDoctor = (event) => {\r\n    setNewDoctor(event.target.value);\r\n    props.setNewRegister({ ...props.newRegister, register_user_id: event.target.value });\r\n  };\r\n\r\n  // 메모 상태 \r\n  const [newMemo, setNewMemo] = useState(register.register_memo);\r\n\r\n  const changeMemo = (event) => {\r\n    setNewMemo(event.target.value);\r\n    props.setNewRegister({ ...props.newRegister, register_memo: event.target.value });\r\n  };\r\n\r\n  // 의사소통 메모 상태 \r\n  const [newCMemo, setNewCMemo] = useState(register.register_communication);\r\n\r\n  const changeCMemo = (event) => {\r\n    setNewCMemo(event.target.value);\r\n    props.setNewRegister({ ...props.newRegister, register_communication: event.target.value });\r\n  };\r\n\r\n  // datepicker 옵션\r\n  let handleColor = (time) => {\r\n    return (time.getHours() > 8 && time.getHours() < 18 ? \"hourStyle\" : \"\");\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n  useEffect(() => {\r\n    if (props.selectedTime) {\r\n      //console.log(\"bububu\", props.selectedTime);\r\n      setStartDate(props.selectedTime);\r\n    }\r\n  }, [props.selectedTime]);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"ttet\",props.register.register_date)\r\n    //setStartDate(props.register ? new Date(props.register.register_date) : new Date());\r\n    setDoctorsList(doctors);\r\n  }, [doctors]);\r\n\r\n  useEffect(() => {\r\n    // if(props.selectedTime){\r\n    //   setStartDate(props.selectedTime? props.selectedTime : new Date());\r\n    // }\r\n    setStartDate(props.register ? new Date(props.register.register_date) : new Date());\r\n    setShowTimeSelect(() =>\r\n      ((startDate.getFullYear() === new Date().getFullYear())\r\n        && (startDate.getMonth() === new Date().getMonth())\r\n        && (startDate.getDate() === new Date().getDate())\r\n        && (startDate.getHours() >= 18))\r\n        ? false : true\r\n    );\r\n    setMinDate(() =>\r\n      ((startDate.getFullYear() === new Date().getFullYear())\r\n        && (startDate.getMonth() === new Date().getMonth())\r\n        && (startDate.getDate() === new Date().getDate())\r\n        && (startDate.getHours() >= 18))\r\n        ? startDate.setDate(new Date().getDate() + 1) : new Date()\r\n    );\r\n    if (new Date().getHours() >= 18) {\r\n      setMinTime(new Date());\r\n      setMaxTime(new Date());\r\n    } else {\r\n      setMinTime(() =>\r\n        ((startDate.getFullYear() === new Date().getFullYear())\r\n          && (startDate.getMonth() === new Date().getMonth())\r\n          && (startDate.getDate() === new Date().getDate())\r\n          && ((startDate.getHours() >= 9)\r\n            || (startDate.getHours() <= 18)))\r\n          ? new Date() : setHours(setMinutes(new Date(), 0), 9)\r\n      );\r\n      setMaxTime(() =>\r\n        ((startDate.getFullYear() === new Date().getFullYear())\r\n          && (startDate.getMonth() === new Date().getMonth())\r\n          && (startDate.getDate() === new Date().getDate())\r\n          && ((startDate.getHours() >= 9)\r\n            || (startDate.getHours() <= 18)))\r\n          ? new Date() : setHours(setMinutes(new Date(), 45), 17)\r\n      );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setShowTimeSelect(() =>\r\n      ((startDate.getFullYear() === new Date().getFullYear())\r\n        && (startDate.getMonth() === new Date().getMonth())\r\n        && (startDate.getDate() === new Date().getDate())\r\n        && (startDate.getHours() >= 18))\r\n        ? false : true\r\n    );\r\n    // setMinDate(() =>\r\n    //   ((startDate.getFullYear() === new Date().getFullYear())\r\n    //     && (startDate.getMonth() === new Date().getMonth())\r\n    //     && (startDate.getDate() === new Date().getDate())\r\n    //     && (startDate.getHours() >= 18))\r\n    //     // || (startDate.getHours() <= 18)))\r\n    //     ? new Date().setDate(new Date().getDate() + 1) : new Date()\r\n    // );\r\n    setMinTime(() =>\r\n      ((startDate.getFullYear() === new Date().getFullYear())\r\n        && (startDate.getMonth() === new Date().getMonth())\r\n        && (startDate.getDate() === new Date().getDate())\r\n        && ((startDate.getHours() >= 9)\r\n          || (startDate.getHours() <= 18)))\r\n        ? new Date() : setHours(setMinutes(new Date(), 0), 9)\r\n    );\r\n    setMaxTime(() =>\r\n      ((startDate.getFullYear() === new Date().getFullYear())\r\n        && (startDate.getMonth() === new Date().getMonth())\r\n        && (startDate.getDate() === new Date().getDate())\r\n        && ((startDate.getHours() >= 9)\r\n          || (startDate.getHours() <= 18)))\r\n        ? setHours(setMinutes(new Date(), 45), 17) : setHours(setMinutes(new Date(), 45), 17)\r\n    );\r\n\r\n  }, [startDate]);\r\n\r\n  useEffect(() => {\r\n    setNewDoctor(props.newRegister.register_user_id);\r\n  }, [props.newRegister]);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"hihihi\", props.selectedTime);\r\n    if (props.selectedTime) {\r\n      setStartDate(props.selectedTime ? props.selectedTime : new Date());\r\n    }\r\n  }, [props.selectedTime])\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <div className={`${style.RegisterCreateForm_content} border`}>\r\n      {/* 달력 */}\r\n      <div className={style.RegisterCreateForm_cal}>\r\n        <DatePicker\r\n          locale=\"ko\"\r\n          showTimeSelect={showTimeSelect}\r\n          selected={startDate}\r\n          onChange={(date) => {\r\n            setStartDate(date);\r\n            props.setNewRegister({ ...props.newRegister, register_date: moment(date).format(\"yyyy-MM-DD H:mm\") });\r\n          }\r\n          }\r\n          timeIntervals={15}\r\n          timeCaption=\"시간\"\r\n          minDate={minDate}\r\n          minTime={minTime}\r\n          maxTime={maxTime}\r\n          dateFormat=\"yyyy-MM-dd h:mm\"\r\n          timeClassName={handleColor}\r\n          inline\r\n        />\r\n      </div>\r\n      {/* content */}\r\n      <div className={style.RegisterCreateForm_input}>\r\n        <form>\r\n          <div>\r\n            <div>의사 이름</div>\r\n            <div>\r\n              <select className={style.RegisterCreateForm_input_select} value={newDoctor} onChange={changeNewDoctor}>\r\n                <option disabled value=\"doctor\">담당의를 선택해주세요</option>\r\n                {/* 임의의 데이터 넣어서 출력 해보기 */}\r\n                {doctorsList.map(doctor => {\r\n                  return (\r\n                    <option key={doctor.user_id} value={doctor.user_id}>{doctor.user_name}</option>\r\n                  );\r\n                })}\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div>\r\n            <div>접수 메모</div>\r\n            <textarea className={style.RegisterCreateForm_input_textarea} value={newMemo} onChange={changeMemo}></textarea>\r\n          </div>\r\n          <div>\r\n            <div>의사소통 메모</div>\r\n            <textarea className={style.RegisterCreateForm_input_textarea} value={newCMemo} onChange={changeCMemo}></textarea>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default RegisterCreateForm;\r\n","import { getPatientList } from \"apis/patient\";\r\nimport { useEffect, useState } from \"react\";\r\nimport style from \"./RegisterPatientList.module.css\";\r\n\r\nfunction RegisterPatientList(props) {\r\n  //빈 객체\r\n  const noneRegister = {\r\n    register_id: \"\",\r\n    register_patient_id: \"\",\r\n    register_user_id: \"\",\r\n    register_regdate: \"\",\r\n    register_date: \"\",\r\n    register_starttime: \"\",\r\n    register_memo: \"\",\r\n    register_communication: \"\",\r\n    register_state: \"\",\r\n\r\n    // 추가된 DTO\r\n    patient_name: \"\",\r\n    patient_ssn: \"\",\r\n    patient_sex: \"\",\r\n    patient_tel: \"\",\r\n\r\n    user_name: \"\",\r\n  };\r\n  var register\r\n  if(props.register){\r\n    register = props.register;\r\n  } else {\r\n    register = noneRegister;\r\n  }\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const [patientList, setPatientList] = useState([]);\r\n\r\n  // 환자 검색창 상태 \r\n  const [searchContent, setSearchContent] = useState(register.patient_name);\r\n\r\n  const changeSearchContent = (event) => {\r\n    setSearchContent(\r\n      event.target.value\r\n    );\r\n  };\r\n\r\n  // 선택된 환자 상태\r\n  const [selectedPatient, setSelectedPatient] = useState();\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n  const handlePatient = (patient_id) => {\r\n    if(patient_id === selectedPatient){\r\n      setSelectedPatient(\"\");\r\n    } else {\r\n      setSelectedPatient(patient_id);\r\n      props.setNewRegister({...props.newRegister,register_patient_id:patient_id});\r\n    }\r\n  };\r\n\r\n  const handleSearch = async (event) => {\r\n    try {\r\n      event.preventDefault();\r\n      const list = await getPatientList(searchContent);\r\n      setPatientList(list.data.patientList);\r\n    } catch(e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const getPatientsLists = async () => {\r\n    try {\r\n      var list = await getPatientList();\r\n      setPatientList(list.data.patientList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  \r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n\r\n  useEffect(()=>{\r\n    getPatientsLists();\r\n  },[]);\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <div className={style.RegisterPatientList}>\r\n      <div className={`${style.RegisterPatientList_content} border`}>\r\n        <div className={`${style.RegisterPatientList_search} mt-1`}>\r\n          <div className={style.RegisterPatientList_search_input}>\r\n            <input type=\"text\" \r\n              className={style.RegisterPatientList_search_input_1} \r\n              placeholder=\"이름/생년월일을 입력해 주세요.\" \r\n              value={searchContent} onChange={changeSearchContent} \r\n            />\r\n          </div>\r\n          <div className={style.RegisterPatientList_search_button}>\r\n            <button className=\"button_team2_fill\" onClick={handleSearch}>환자 검색</button>\r\n          </div>\r\n        </div>\r\n        <div className={style.RegisterPatientList_content_table}>\r\n          <table className=\"table\">\r\n            <thead>\r\n              <tr>\r\n                <th></th>\r\n                <th>환자 코드</th>\r\n                <th>환자명</th>\r\n                <th>생년월일</th>\r\n                <th>성별</th>\r\n                <th>전화번호</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {/* 임의의 데이터 넣어서 출력 해보기 */}\r\n              {patientList.map(patient => {\r\n                return (\r\n                  <tr key={patient.patient_id} className={style.RegisterPatientList_content_table_tr} onClick={()=>handlePatient(patient.patient_id)}>\r\n                    <td><input type=\"checkbox\" name=\"chk\" checked={selectedPatient === patient.patient_id? true : false} readOnly/></td>\r\n                    <td>{patient.patient_id}</td>\r\n                    <td>{patient.patient_name}</td>\r\n                    <td>{patient.patient_ssn1}</td>\r\n                    <td>{patient.patient_sex}</td>\r\n                    <td>{patient.patient_tel}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default RegisterPatientList;\r\n","import { changeRegisterState } from \"apis/register\";\r\nimport { useEffect, useState } from \"react\";\r\nimport style from \"./RegisterStateChange.module.css\";\r\n\r\nfunction RegisterStateChange(props) {\r\n  const { register, publishTopic, close } = props;\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n\r\n  // 선택된 환자 상태\r\n  const [selectedPatient, setSelectedPatient] = useState();\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n  // 진료 상태 대기 -> 완료로 \r\n  const changeRegisterStateToFinish = async (register) => {\r\n    try {\r\n      var finishValidation = true;\r\n\r\n      if (register.register_state===\"대기\") {\r\n        if (finishValidation) {\r\n          register.register_state = \"완료\";\r\n          var list = await changeRegisterState(register);\r\n          publishTopic(0);\r\n          publishTopic(1);\r\n          close();\r\n        }\r\n      } \r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  // 진료 상태 대기 -> 취소로 \r\n  const changeRegisterStateToCancel = async (register) => {\r\n    try {\r\n      if (register.register_state===\"대기\") {\r\n        register.register_state = \"취소\";\r\n        var list = await changeRegisterState(register);\r\n        publishTopic(0);\r\n        close();\r\n      } \r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <div className={style.RegisterStateChange}>\r\n      <div className={style.RegisterStateChange_content_table}>\r\n        <table className=\"table\">\r\n          <thead>\r\n            <tr>\r\n              <th></th>\r\n              <th>환자 코드</th>\r\n              <th>환자명</th>\r\n              <th>생년월일</th>\r\n              <th>성별</th>\r\n              <th>전화번호</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr className={style.RegisterStateChange_content_table_tr}>\r\n              <td><input type=\"checkbox\" name=\"chk\" checked readOnly /></td>\r\n              <td>{register.register_patient_id}</td>\r\n              <td>{register.patient_name}</td>\r\n              <td>{(register.patient_ssn).substring(0, 6)}</td>\r\n              <td>{register.patient_sex}</td>\r\n              <td>{register.patient_tel}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className={style.RegisterStateChange_content_stateBtn}>\r\n        {register.register_state === \"대기\" ?\r\n          <>\r\n            <div className={style.RegisterStateChange_content_stateBtn_item}>\r\n              <button className={style.RegisterStateChange_content_stateBtn_item_1} onClick={()=>changeRegisterStateToCancel(register)}>접수 취소</button>\r\n            </div>\r\n            <div className={style.RegisterStateChange_content_stateBtn_item}>\r\n              <button className={style.RegisterStateChange_content_stateBtn_item_2} onClick={()=>changeRegisterStateToFinish(register)}>진료 시작</button>\r\n            </div>\r\n          </>\r\n          :\r\n          <div className={style.RegisterStateChange_content_stateBtn_item}>\r\n            <button className={style.RegisterStateChange_content_stateBtn_item_3}> 진료 {register.register_state} </button>\r\n          </div>\r\n        }\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default RegisterStateChange;\r\n","import style from \"./RegisterCreateModal.module.css\";\r\nimport React, { useEffect, useState } from 'react';\r\nimport RegisterCreateForm from \"./RegisterCreateForm\";\r\nimport RegisterPatientList from \"./RegisterPatientList\";\r\nimport { createRegister, updateRegister } from \"apis/register\";\r\nimport moment from \"moment\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nimport RegisterStateChange from \"./RegisterStateChange\";\r\nfunction RegisterCreateModal(props) {\r\n  // props 상속\r\n  const { open, close, header, doctors, register, publishTopic, selectedTime, selectedRegisterDoctor } = props;\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const [newRegister, setNewRegister] = useState(register);\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n  const createNewRegister = async () => {\r\n    try {\r\n      var registerValidation = true;\r\n      console.log(\"생성\", newRegister);\r\n      if (newRegister.register_patient_id === \"\") {\r\n        registerValidation = false;\r\n        ToastsStore.success(\"환자를 선택해 주세요.\");\r\n      }\r\n      else if (newRegister.register_user_id === \"\" || newRegister.register_user_id === \"doctor\") {\r\n        registerValidation = false;\r\n        ToastsStore.success(\"담당의를 선택해 주세요.\");\r\n      }\r\n      else if (newRegister.register_date < new Date() || moment(newRegister.register_date) < moment()) {\r\n        registerValidation = false;\r\n        ToastsStore.success(\"예약 시간을 선택해 주세요.\");\r\n      }\r\n      // else if (new Date(newRegister.register_date).getHours() >= 18 \r\n      // || new Date(newRegister.register_date).getHours() <= 9 ) {\r\n      //   registerValidation = false;\r\n      //   ToastsStore.success(\"예약 시간을 선택해 주세요.2\");\r\n      // }\r\n      else if (newRegister.register_memo === \"\") {\r\n        registerValidation = false;\r\n        ToastsStore.success(\"메모를 입력해 주세요.\");\r\n      }\r\n      // else if (newRegister.register_communication === \"\") {\r\n      //   registerValidation = false;\r\n      //   ToastsStore.success(\"의사소통 메모를 입력해 주세요.\");\r\n      // }\r\n      if (registerValidation) {\r\n        var list = await createRegister(newRegister);\r\n        //console.log(\"결과값\", list.data.result);\r\n        if (list.data.result === \"중복\") {\r\n          ToastsStore.success(\"이미 예약이 되어있습니다.\");\r\n        } else if (list.data.result === \"성공\") {\r\n          publishTopic(0);\r\n          close();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const updateNewRegister = async () => {\r\n    try {\r\n      console.log(\"갱신\", newRegister);\r\n      var registerValidation = true;\r\n      if (newRegister.register_date < new Date() || moment(newRegister.register_date) < moment()) {\r\n        registerValidation = false;\r\n        ToastsStore.success(\"예약시간을 확인해 주세요.\");\r\n      } else if (new Date(newRegister.register_date).getHours() >= 18\r\n        || new Date(newRegister.register_date).getHours() <= 9) {\r\n        registerValidation = false;\r\n        ToastsStore.success(\"예약 시간을 선택해 주세요.\");\r\n      }\r\n      if (registerValidation) {\r\n        var list = await updateRegister(newRegister);\r\n        //console.log(\"결과값\", list.data.result);\r\n        if (list.data.result === \"중복\") {\r\n          ToastsStore.success(\"이미 예약이 되어있습니다.\");\r\n        } else if (list.data.result === \"성공\") {\r\n          publishTopic(0);\r\n          close();\r\n        }\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------  \r\n  useEffect(() => {\r\n    setNewRegister(register);\r\n  }, [register]);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"닥터1\",selectedRegisterDoctor);\r\n    if (selectedRegisterDoctor) {\r\n      setNewRegister({\r\n        ...register,\r\n        register_user_id: selectedRegisterDoctor\r\n      });\r\n    }\r\n  }, [open]);\r\n\r\n  useEffect(() => {\r\n    if (selectedTime) {\r\n      if (selectedTime >= new Date()) {\r\n        setNewRegister({ ...register, register_date: moment(selectedTime).format(\"yyyy-MM-DD H:mm\") });\r\n      }\r\n    }\r\n  }, [open, selectedTime]);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"닥터2\",selectedRegisterDoctor);\r\n    if (selectedRegisterDoctor) {\r\n      setNewRegister({\r\n        ...register,\r\n        register_date: moment(selectedTime).format(\"yyyy-MM-DD H:mm\"),\r\n        register_user_id: selectedRegisterDoctor\r\n      });\r\n    }\r\n  }, [selectedRegisterDoctor]);\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <div className={style.RegisterCreateModal}>\r\n      <div className={open ? `${style.openModal} ${style.modal}` : `${style.modal}`}>\r\n        {open ? (\r\n          <section>\r\n            <header>\r\n              <div className={style.RegisterCreateModal1}>\r\n                {header}\r\n              </div>\r\n            </header>\r\n            <main>\r\n              <div className={style.RegisterCreateModal_main}>\r\n                <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n                {register.register_state === \"\" || register.register_state === \"취소\" ?\r\n                  <RegisterPatientList register={register} newRegister={newRegister} setNewRegister={setNewRegister} />\r\n                  :\r\n                  <RegisterStateChange register={register} publishTopic={publishTopic} close={close} />\r\n                }\r\n                <RegisterCreateForm doctors={doctors} register={register} newRegister={newRegister} setNewRegister={setNewRegister} open={open} selectedTime={selectedTime} />\r\n              </div>\r\n            </main>\r\n            <footer>\r\n              <div className={style.RegisterCreateModal_footer}>\r\n                {register.register_state === \"완료\" ?\r\n                  <>\r\n                    <button className=\"button_team2_empty\" onClick={close}>확인</button>\r\n                  </>\r\n                  :\r\n                  <>\r\n                    <button className=\"button_team2_empty\" onClick={close}>취소</button>\r\n                    {register.register_state === \"대기\" ?\r\n                      <button className=\"button_team2_fill\" onClick={updateNewRegister}>수정</button>\r\n                      :\r\n                      <button className=\"button_team2_fill\" onClick={createNewRegister}>등록</button>\r\n                    }\r\n                  </>\r\n                }\r\n              </div>\r\n            </footer>\r\n          </section>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default RegisterCreateModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport style from \"./MonthTimeTable.module.css\";\r\nimport { getRegisterByDoctor } from \"apis/register\";\r\nimport Spinner from \"components/common/Spinner\";\r\n\r\nfunction MonthTimeTable(props) {\r\n\r\n  const { selectedDoctor } = props;\r\n\r\n  let selectToday = new Date();\r\n  let selectTodayYear = selectToday.getFullYear();\r\n  let selectTodayMonth = selectToday.getMonth() + 1;\r\n  let selectTodayDate = selectToday.getDate();\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const [today, setToday] = useState(new Date());\r\n  const [tMonth, setTMonth] = useState(moment().startOf('month'));\r\n\r\n  const [registerListByDoctor, setRegisterListByDoctor] = useState([]);\r\n  \r\n  // spinner \r\n  const [loading, setLoading] = useState(false);\r\n  //-------------------------------------------------------------  \r\n  //달력 렌더 함수\r\n  //-------------------------------------------------------------\r\n  let todayYear = today.getFullYear();\r\n  let todayMonth = (today.getMonth() + 1);\r\n\r\n  const thisYaerAndMonth = todayYear + \" 년 \" + todayMonth + \" 월\";\r\n\r\n  const calCalender = (today) => {\r\n    const thisYear = today.getFullYear();\r\n    const thisMonth = today.getMonth() + 1;\r\n\r\n    const prevLast = new Date(thisYear, thisMonth - 1, 0);\r\n    const thisLast = new Date(thisYear, thisMonth, 0);\r\n\r\n    const prevLastDate = prevLast.getDate();\r\n    const prevLastDay = prevLast.getDay();\r\n\r\n    const todayLastDate = thisLast.getDate();\r\n    const todayLastDay = thisLast.getDay();\r\n\r\n    const prevDates = [];\r\n    const thisDates = [...Array(todayLastDate + 1).keys()].slice(1);\r\n    const nextDates = [];\r\n\r\n    if (prevLastDay !== 6) {\r\n      for (let i = 0; i < prevLastDay + 1; i++) {\r\n        prevDates.unshift(prevLastDate - i);\r\n      }\r\n    }\r\n\r\n    for (let i = 1; i < 7 - todayLastDay; i++) {\r\n      nextDates.push(i);\r\n    }\r\n    const dates = prevDates.concat(thisDates, nextDates);\r\n\r\n    return dates;\r\n  };\r\n  const [dates, setDates] = useState(calCalender(today));\r\n\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n\r\n  const prevMonth = () => {\r\n    today.setMonth(today.getMonth() - 1);\r\n    setToday(today);\r\n    setTMonth(moment(tMonth).subtract(\"1\",\"M\"));\r\n    setDates(calCalender(today));\r\n  };\r\n  const nextMonth = () => {\r\n    today.setMonth(today.getMonth() + 1);\r\n    setToday(today);\r\n    setTMonth(moment(tMonth).add(\"1\",\"M\"));\r\n    setDates(calCalender(today));\r\n  };\r\n  const goToday = () => {\r\n    setToday(new Date());\r\n    setTMonth(moment().startOf('month'));\r\n  };\r\n\r\n  const updateSelectDate = (date) => {\r\n    today.setDate(date);\r\n    props.setSelectDate(moment(today).format(\"yyyy-MM-DD\"));\r\n    setToday(today);\r\n    //setDate(calCalender(today));\r\n  };\r\n\r\n  const getRegisterCount = async (date) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await getRegisterByDoctor(selectedDoctor.user_id, moment(date).format(\"yyyy-MM-DD H:mm\"));\r\n      setRegisterListByDoctor(response.data.registerList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n\r\n  useEffect(() => {\r\n    getRegisterCount(tMonth);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRegisterCount(tMonth);\r\n  }, [tMonth]);\r\n\r\n  useEffect(() => {\r\n    setDates(calCalender(today));\r\n  }, [today]);\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //------------------------------------------------------------- \r\n  return (\r\n    <div className={style.MonthTimeTable}>\r\n      <div className={style.MonthTimeTable_btns}>\r\n        <button className={`button_team2_empty ${style.MonthTimeTable_btn}`}\r\n          onClick={prevMonth}\r\n        >\r\n          &lt;\r\n        </button>\r\n        <button className={`button_team2_fill ${style.MonthTimeTable_btnToday}`}\r\n          onClick={goToday}\r\n        >\r\n          오 늘\r\n        </button>\r\n        <button className={`button_team2_empty ${style.MonthTimeTable_btn}`}\r\n          onClick={nextMonth}\r\n        >\r\n          &gt;\r\n        </button>\r\n      </div>\r\n      <div className={style.yearAndMonth}>\r\n        {thisYaerAndMonth}\r\n      </div>\r\n      <div className={style.days}>\r\n        <div className={style.day}>일</div>\r\n        <div className={`${style.day} ${style.dayN}`}>월</div>\r\n        <div className={`${style.day} ${style.dayN}`}>화</div>\r\n        <div className={`${style.day} ${style.dayN}`}>수</div>\r\n        <div className={`${style.day} ${style.dayN}`}>목</div>\r\n        <div className={`${style.day} ${style.dayN}`}>금</div>\r\n        <div className={style.day}>토</div>\r\n      </div>\r\n      <div className={style.dates}>\r\n      {loading ? <Spinner /> : <>\r\n        {dates.map((date, index) => {\r\n          if (todayYear === selectTodayYear\r\n            && todayMonth === selectTodayMonth\r\n            && date === selectTodayDate\r\n            && date < index) {\r\n            return (\r\n              <div className={style.date} onClick={() => updateSelectDate(date)} key={index}>\r\n                <div className={style.thisDate}>\r\n                  {date}\r\n                </div>\r\n                <div className={style.count}>\r\n                  {registerListByDoctor.map((Rdate,index) => {\r\n                    if ((Rdate.date *= 1) === (date *= 1)) {\r\n                      return (<div key={index} className={style.count_font}>진료수: {Rdate.count}명</div>)\r\n                    }\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )\r\n          } else {\r\n            if (index < 7 && date > 7) {\r\n              return (\r\n                <div className={style.date} onDoubleClick={prevMonth} key={index}>\r\n                  <div className={style.otherDate1}>\r\n                    {date}\r\n                  </div>\r\n                  <div>\r\n\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n            else if (index > 28 && date < 7) {\r\n              return (\r\n                <div className={style.date} onDoubleClick={nextMonth} key={index}>\r\n                  <div className={style.otherDate2}>\r\n                    {date}\r\n                  </div>\r\n                  <div>\r\n\r\n                  </div>\r\n                </div>\r\n              )\r\n            } else {\r\n              return (\r\n                <div className={style.date} onClick={() => updateSelectDate(date)} key={index}>\r\n                  <div className={style.otherDate}>\r\n                    {date}\r\n                  </div>\r\n                  <div className={style.count}>\r\n                    {registerListByDoctor.map((Rdate, index) => {\r\n                      if ((Rdate.date *= 1) === (date *= 1)) {\r\n                        return (<div className={style.count_font} key={index}>진료수: {Rdate.count}명</div>)\r\n                      }\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )\r\n            }\r\n          }\r\n        })}\r\n        </>}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default MonthTimeTable;\r\n","import style from \"./ToDoList.module.css\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nimport { createToDoLists, deleteToDoLists, getToDoLists, updateToDoLists } from \"apis/register\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction ToDoList(props) {\r\n  const { selectedDoctor, selectDate, setSelectDate, publishTopic } = props;\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const globalUid = useSelector((state) => state.authReducer.uid);\r\n\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [toDoList, setToDoList] = useState([]);\r\n  \r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n\r\n  const inputTextHandler = (event) => {\r\n    setInputText(\r\n      event.target.value\r\n    );\r\n  };\r\n  const addToDoList = async () => {\r\n    const newSchedule = {\r\n      schedule_id: \"\",\r\n      schedule_user_id: selectedDoctor.user_id,\r\n      schedule_content: inputText,\r\n      schedule_state: \"대기\",\r\n      schedule_regdate: moment(selectDate).format(\"yyyy-MM-DD\"),\r\n    };\r\n\r\n    try {\r\n      var list = await createToDoLists(newSchedule);\r\n      publishTopic(2);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n    setInputText(\"\");\r\n  };\r\n\r\n  const changeYet = async (id) => {\r\n\r\n    if (globalUid === selectedDoctor.user_id) {\r\n      const updateSchedule = {\r\n        schedule_id: id,\r\n        schedule_state: \"완료\",\r\n      };\r\n      try {\r\n        var list = await updateToDoLists(updateSchedule);\r\n        publishTopic(2);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n\r\n    }\r\n\r\n  };\r\n  const changeDone = async (id) => {\r\n    if (globalUid === selectedDoctor.user_id) {\r\n      const updateSchedule = {\r\n        schedule_id: id,\r\n        schedule_state: \"대기\",\r\n      };\r\n      try {\r\n        var list = await updateToDoLists(updateSchedule);\r\n        publishTopic(2);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    } else {\r\n\r\n    }\r\n  };\r\n  const deleteToDo = async (id) => {\r\n\r\n    try {\r\n      var list = await deleteToDoLists(id);\r\n      publishTopic(2);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getToDoList = async (schedule_regdate, schedule_user_id) => {\r\n    try {\r\n      var list = await getToDoLists(schedule_regdate, schedule_user_id);\r\n      setToDoList(list.data.todolist);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n\r\n  useEffect(() => {\r\n    getToDoList(selectDate, selectedDoctor.user_id);\r\n    return () => {\r\n      setSelectDate(moment().format(\"yyyy-MM-DD\"));\r\n    };\r\n  }, [selectDate, selectedDoctor.user_id, setSelectDate]);\r\n\r\n  useEffect(() => {\r\n    setSelectDate(selectDate ? selectDate : new Date());\r\n    getToDoList(selectDate, selectedDoctor.user_id);\r\n  }, [props, selectDate, selectedDoctor.user_id, setSelectDate]);\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <div className={style.ToDoList}>\r\n      <div className={style.ToDoList_header}>\r\n        <div className={style.ToDoList_header_name}>\r\n          <h2>To Do List</h2>\r\n        </div>\r\n        <div className={style.ToDoList_header_date}>\r\n          {selectDate}\r\n        </div>\r\n        <div className={style.ToDoList_header_inputLabel}>\r\n          <div className={style.ToDoList_header_inputLabel_input}>\r\n            {globalUid === selectedDoctor.user_id ?\r\n              <input type=\"text\" value={inputText} onChange={inputTextHandler} placeholder=\"할 일을 입력해주세요.\"></input>\r\n              :\r\n              false\r\n            }\r\n          </div>\r\n          <div className={style.ToDoList_header_inputLabel_button}>\r\n            {globalUid === selectedDoctor.user_id ?\r\n              <button className=\"button_team2_fill\" onClick={addToDoList}>+</button>\r\n              :\r\n              false\r\n            }\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className={style.ToDoList_content}>\r\n        <div className={style.ToDoList_content_header}>\r\n\r\n        </div>\r\n        <div className={style.ToDoList_content_items}>\r\n          <div className={style.ToDoList_content_items_yet_header}>\r\n            <div className={style.ToDoList_content_items_yet_header_1}>\r\n              Doing\r\n            </div>\r\n            <div className={style.ToDoList_content_items_yet_header_2}>\r\n              {toDoList.filter(toDo => {\r\n                if (toDo.schedule_state === \"대기\") {\r\n                  return toDo;\r\n                }\r\n              }).length}\r\n            </div>\r\n          </div>\r\n          <div className={style.ToDoList_content_items_yet_itmes}>\r\n            {toDoList.map(toDo => {\r\n              if (toDo.schedule_state === \"대기\") {\r\n                return (\r\n                  <div className={style.ToDoList_content_items_yet_item} key={toDo.schedule_id} onDoubleClick={() => changeYet(toDo.schedule_id)} >\r\n                    <div className={style.ToDoList_content_items_yet_item_content}>\r\n                      {toDo.schedule_content}\r\n                    </div>\r\n                    <div className={style.ToDoList_content_items_yet_item_btns}>\r\n                      <div className={style.ToDoList_content_items_yet_item_btns_btn}>\r\n                        {globalUid === selectedDoctor.user_id ?\r\n                          <button className={style.ToDoList_btn_X} onClick={() => deleteToDo(toDo.schedule_id)}>X</button>\r\n                          :\r\n                          false\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            })}\r\n          </div>\r\n          <div className={style.ToDoList_content_items_done_header}>\r\n            <div className={style.ToDoList_content_items_done_header_1}>\r\n              Done\r\n            </div>\r\n            <div className={style.ToDoList_content_items_done_header_2}>\r\n              {toDoList.filter(toDo => {\r\n                if (toDo.schedule_state === \"완료\") {\r\n                  return toDo;\r\n                }\r\n              }).length}\r\n            </div>\r\n          </div>\r\n          <div className={style.ToDoList_content_items_done_itmes}>\r\n            {toDoList.map(toDo => {\r\n              if (toDo.schedule_state === \"완료\") {\r\n                return (\r\n                  <div className={style.ToDoList_content_items_done_item} key={toDo.schedule_id} onDoubleClick={() => changeDone(toDo.schedule_id)}>\r\n                    <div className={style.ToDoList_content_items_done_item_content}>\r\n                      {toDo.schedule_content}\r\n                    </div>\r\n                    <div className={style.ToDoList_content_items_done_item_btns}>\r\n                      <div className={style.ToDoList_content_items_done_item_btns_btn}>\r\n                        {globalUid === selectedDoctor.user_id ?\r\n                          <button className={style.ToDoList_btn_X2} onClick={() => deleteToDo(toDo.schedule_id)}>X</button>\r\n                          :\r\n                          false\r\n                        }\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                )\r\n              }\r\n            })}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default ToDoList;\r\n","import style from \"./RegisterWeekTimeTableModal.module.css\"\r\nimport React, { useEffect, useState } from 'react';\r\nimport MonthTimeTable from \"./MonthTimeTable\";\r\nimport ToDoList from \"./ToDoList\";\r\nimport moment from \"moment\";\r\nfunction RegisterWeekTimeTableModal(props) {\r\n  // props 상속\r\n  const { open, close, header, selectedDoctor, setPubMessage, publishTopic } = props;\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const [selectDate, setSelectDate] = useState(moment().format(\"yyyy-MM-DD\"));\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <div className={style.RegisterWeekTimeTableModal}>\r\n      <div className={open ? `${style.openModal} ${style.modal}` : `${style.modal}`}>\r\n        {open ? (\r\n          <section>\r\n            <header>\r\n              <div className={style.RegisterWeekTimeTableModal_header}>\r\n                {header}\r\n              </div>\r\n            </header>\r\n            <main>\r\n              <div className={style.Main_content}>\r\n                <div className={style.RegisterWeekTimeTableModal_main}>\r\n                  <MonthTimeTable\r\n                    selectDate={selectDate}\r\n                    setSelectDate={setSelectDate}\r\n                    selectedDoctor={selectedDoctor}\r\n                  />\r\n                </div>\r\n                <div className={style.ToDoList_main}>\r\n                  <ToDoList selectDate={selectDate}\r\n                    setSelectDate={setSelectDate}\r\n                    selectedDoctor={selectedDoctor}\r\n                    setPubMessage={setPubMessage}\r\n                    publishTopic={publishTopic}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </main>\r\n            <footer>\r\n              <div className={style.RegisterWeekTimeTableModal_footer}>\r\n                <button className=\"button_team2_fill\" onClick={() => { setSelectDate(moment().format(\"yyyy-MM-DD\")); close(); }}>확인</button>\r\n              </div>\r\n            </footer>\r\n          </section>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default RegisterWeekTimeTableModal;\r\n","import React from \"react\";\r\n\r\nfunction RegisterTimeScheduleItems(props) {\r\n  // 상속된 props\r\n  const {patient_name, user_name, register_state} = props;\r\n  return (\r\n    <>\r\n      {patient_name}<br></br>{register_state}\r\n      \r\n      <span className={register_state === \"대기\" ? \"balloon_ready\" : \"\" \r\n                    || register_state === \"완료\" ? \"balloon_success\" : \"\" \r\n                    || register_state === \"취소\" ? \"balloon_cancel\" : \"\" }>\r\n        <div>\r\n          환자명:{patient_name}\r\n        </div>\r\n        <div>\r\n          담당의:{user_name}\r\n        </div>\r\n      </span>\r\n    </>\r\n  );\r\n}\r\nexport default React.memo(RegisterTimeScheduleItems);\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ReactDatePicker from \"react-datepicker\";\r\nimport \"./Register.css\";\r\nimport moment from \"moment\";\r\nimport RegisterCreateModal from \"./components/modal/RegisterCreateModal\";\r\nimport { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\nimport RegisterWeekTimeTableModal from \"./components/modal/RegisterWeekTimeTableModal\";\r\nimport { getDoctorList, getRegisterList } from \"apis/register\";\r\nimport RegisterTimeScheduleItems from \"views/Register/components/items/RegisterTimeScheduleItems\";\r\n\r\nregisterLocale(\"ko\", ko);\r\n// 타임테이블 - 진료 시간 \r\nconst hours = [\"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\"];\r\nconst mins = [\"0\", \"15\", \"30\", \"45\"];\r\n\r\nfunction RegisterTimeSchedule(props) {\r\n  // 빈 객체\r\n  let noneRegister = {\r\n    register_id: \"\",\r\n    register_patient_id: \"\",\r\n    register_user_id: \"\",\r\n    register_regdate: \"\",\r\n    register_date: new Date(),\r\n    register_starttime: \"\",\r\n    register_memo: \"\",\r\n    register_communication: \"\",\r\n    register_state: \"\",\r\n\r\n    // 추가된 DTO 내용\r\n    patient_name: \"\",\r\n    patient_ssn: \"\",\r\n    patient_sex: \"\",\r\n    patient_tel: \"\",\r\n\r\n    user_name: \"\",\r\n  };\r\n\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n  const { registerDate, setRegisterDate, publishTopic, setPubMessage, message } = props;\r\n\r\n  const [doctors, setDoctors] = useState([]);\r\n  const [registers, setRegisters] = useState([]);\r\n  //const [startDate, setStartDate] = useState(new Date());\r\n  const [selectedRegister, setSelectedRegister] = useState(noneRegister);\r\n\r\n  //신규 접수 등록 모달\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  const [headerContent, setHeaderContent] = useState(\"신규\");\r\n\r\n  //신규 시간을 누른 모달\r\n  const [selectTimeModalOpen, setSelectTimeModalOpen] = useState(false);\r\n\r\n  //선택된 시간 상태\r\n  const [selectedTime, setSelectedTime] = useState(new Date());\r\n\r\n  //선택된 의사 상태\r\n  const [selectedRegisterDoctor, setSelectedRegisterDoctor] = useState(\"\");\r\n\r\n  // 의사별 개인 타임 테이블 모달\r\n  const [selectedDoctor, setSelectedDoctor] = useState({});\r\n  const [registerWeekTimeTableOpen, setRegisterWeekTimeTableOpen] = useState(false);\r\n\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n\r\n  const openModal = () => {\r\n    //setSelectedRegister(noneRegister);\r\n    setSelectedRegisterDoctor(\"doctor\");\r\n    setModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setSelectedRegister(noneRegister);\r\n    setSelectedRegisterDoctor(\"doctor\");\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const openSelectTimeModal = (h, m, d) => {\r\n    //console.log(registerDate);\r\n    setSelectedTime(new Date(registerDate.getFullYear(), registerDate.getMonth(), registerDate.getDate(), h, m));\r\n    //console.log(selectedTime);\r\n    setSelectedRegisterDoctor(d);\r\n    setSelectTimeModalOpen(true);\r\n  };\r\n\r\n  const closeSelectTimeModal = () => {\r\n    setSelectedRegisterDoctor(\"doctor\");\r\n    setSelectTimeModalOpen(false);\r\n  };\r\n\r\n  //기존 접수 수정 모달\r\n  const [registerModalOpen, setRegisterModalOpen] = useState(false);\r\n  const openRegisterModal = (register) => {\r\n    setHeaderContent(register.register_state);\r\n    setSelectedRegister(register);\r\n    setRegisterModalOpen(true);\r\n  };\r\n  const closeRegisterModal = () => {\r\n    setSelectedRegister(noneRegister);\r\n    setRegisterModalOpen(false);\r\n  };\r\n\r\n  // 의사 투두 리스트 모달\r\n  const openRegisterWeekTimeTableOpen = (doctor) => {\r\n    setSelectedDoctor(doctor);\r\n    setRegisterWeekTimeTableOpen(true);\r\n  };\r\n  const closeRegisterWeekTimeTableOpen = () => {\r\n    setRegisterWeekTimeTableOpen(false);\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //실행 함수\r\n  //-------------------------------------------------------------\r\n\r\n  //해당 날짜에 맞는 리스트 가져오기\r\n  const getRegisterLists = async (date) => {\r\n    try {\r\n      var list = await getRegisterList(date);\r\n      //console.log(list.data.tableRegisterList);\r\n      setRegisters(list.data.tableRegisterList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const getDoctorLists = async () => {\r\n    try {\r\n      var list = await getDoctorList();\r\n      setDoctors(list.data.doctorList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n\r\n  useEffect(() => {\r\n    getDoctorLists();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getRegisterLists(moment(registerDate).format(\"yyyy-MM-DD HH:mm\"));\r\n  }, [registerDate]);\r\n\r\n  useEffect(() => {\r\n    //console.log(\"MESSAGE: \", message);\r\n    const work = async () => {\r\n      try {\r\n        var list = await getRegisterList(moment(registerDate).format(\"yyyy-MM-DD HH:mm\"), \"\");\r\n        setRegisters(list.data.tableRegisterList);\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    if (message.content === \"refreshRegisters\") {\r\n      work();\r\n    }\r\n  }, [message, registerDate]);\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <>\r\n      {/* 상단 버튼 */}\r\n      <div className=\"RegisterTimeSchedule_header\">\r\n        <div className=\"RegisterTimeSchedule_header_btn\">\r\n          <button className=\"button_team2_fill\" onClick={openModal}>신규 접수 등록</button>\r\n        </div>\r\n        <React.Fragment>\r\n          <RegisterCreateModal\r\n            open={modalOpen}\r\n            close={closeModal}\r\n            header=\"신규 접수 등록\"\r\n            doctors={doctors}\r\n            register={selectedRegister}\r\n            setPubMessage={setPubMessage}\r\n            publishTopic={publishTopic}\r\n            selectedRegisterDoctor={selectedRegisterDoctor}\r\n          />\r\n          <RegisterCreateModal\r\n            open={selectTimeModalOpen}\r\n            close={closeSelectTimeModal}\r\n            header=\"신규 접수 등록\"\r\n            doctors={doctors}\r\n            register={selectedRegister}\r\n            setPubMessage={setPubMessage}\r\n            publishTopic={publishTopic}\r\n            selectedTime={selectedTime}\r\n            selectedRegisterDoctor={selectedRegisterDoctor}\r\n          />\r\n          <RegisterCreateModal\r\n            open={registerModalOpen}\r\n            close={closeRegisterModal}\r\n            header={headerContent + \" 내역\"}\r\n            doctors={doctors}\r\n            register={selectedRegister}\r\n            setPubMessage={setPubMessage}\r\n            publishTopic={publishTopic}\r\n          />\r\n          <RegisterWeekTimeTableModal\r\n            open={registerWeekTimeTableOpen}\r\n            close={closeRegisterWeekTimeTableOpen}\r\n            header={\"Dr. \" + selectedDoctor.user_name}\r\n            selectedDoctor={selectedDoctor}\r\n            setPubMessage={setPubMessage}\r\n            publishTopic={publishTopic}\r\n          />\r\n        </React.Fragment>\r\n      </div>\r\n      {/* 스케쥴 타임테이블 */}\r\n      <div className=\"RegisterTimeSchedule_content\">\r\n        <div className=\"RegisterTimeSchedule_content_title\">\r\n          {/* 오늘 날짜 */}\r\n          <div className=\"RegisterTimeSchedule_content_title_today\">\r\n            <ReactDatePicker\r\n              locale=\"ko\"\r\n              selected={registerDate}\r\n              onChange={(date) => setRegisterDate(date)}\r\n              dateFormat=\"M/dd\"\r\n              readOnly\r\n            />\r\n          </div>\r\n          {/* 9시~18시 */}\r\n          <div className=\"RegisterTimeSchedule_content_title_hours\">\r\n            {hours.map(hour => {\r\n              return (\r\n                <div className=\"RegisterTimeSchedule_content_title_hours_hour\" key={hour}>\r\n                  <div className=\"RegisterTimeSchedule_content_title_hours_hour_upside\">\r\n                    {hour}시\r\n                  </div>\r\n                  <div className=\"RegisterTimeSchedule_content_title_hours_hour_downside\">\r\n                    {mins.map((min, index) => {\r\n                      let currentTime = moment().format(\"YYYY-MM-DD H:m\");\r\n                      let minCurrentTime = moment(registerDate).format(\"YYYY-MM-DD\") + \" \" + hour + \":\" + min;\r\n                      let maxCurrentTime = moment(minCurrentTime).add(15, \"m\");\r\n                      if (moment(currentTime).isBetween(minCurrentTime, maxCurrentTime, undefined, '[)')) {\r\n                        return (\r\n                          <div className=\"RegisterTimeSchedule_content_title_hours_hour_downside_content_today\" key={index}>\r\n                            {min}\r\n                          </div>\r\n                        )\r\n                      } else {\r\n                        return (\r\n                          <div className=\"RegisterTimeSchedule_content_title_hours_hour_downside_content\" key={index}>\r\n                            {min}\r\n                          </div>\r\n                        )\r\n                      }\r\n                    })}\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"RegisterTimeSchedule_content_timetable\">\r\n          {doctors.map((doctor, index) => {\r\n            return (\r\n              <div className=\"RegisterTimeSchedule_content_timetable_doctors\" key={index}>\r\n                <div className=\"RegisterTimeSchedule_content_timetable_doctors_doctor\" onDoubleClick={() => openRegisterWeekTimeTableOpen(doctor)}>\r\n                  {doctor.user_name}님\r\n                </div>\r\n                <div className=\"RegisterTimeSchedule_content_timetable_doctors_registers\">\r\n                  {hours.map((hour, index1) => {\r\n                    return (\r\n                      <div className=\"RegisterTimeSchedule_content_timetable_doctors_registers_group\" key={index1}>\r\n                        {mins.map((min, index2) => {\r\n                          return (\r\n                            <div className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register\" onDoubleClick={() => openSelectTimeModal(hour, min, doctor.user_id)} key={index2}>\r\n                              {registers.map((register, index3) => {\r\n                                if ((register.register_user_id === doctor.user_id)\r\n                                  && (moment(register.register_date).format(\"YYYY-MM-DD H:m\") === (moment(registerDate).format(\"YYYY-MM-DD\") + \" \" + hour + \":\" + min))) {\r\n                                  if (register.register_state === \"대기\") {\r\n                                    if (index < 4 && index1 < 8) {\r\n                                      return (\r\n                                        <div\r\n                                          className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_ready tip_normal\"\r\n                                          onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                        >\r\n                                          <RegisterTimeScheduleItems\r\n                                            patient_name={register.patient_name}\r\n                                            register_state={register.register_state}\r\n                                            user_name={register.user_name}\r\n                                          />\r\n                                        </div>\r\n                                      )\r\n                                    } else {\r\n                                      if (index >= 4 && index1 < 8) {\r\n                                        return (\r\n                                          <div\r\n                                            className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_ready tip_upside\"\r\n                                            onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                          >\r\n                                            <RegisterTimeScheduleItems\r\n                                              patient_name={register.patient_name}\r\n                                              register_state={register.register_state}\r\n                                              user_name={register.user_name}\r\n                                            />\r\n                                          </div>\r\n                                        )\r\n                                      } else if (index < 4 && index1 >= 8) {\r\n                                        return (\r\n                                          <div\r\n                                            className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_ready tip_rightside\"\r\n                                            onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                          >\r\n                                            <RegisterTimeScheduleItems\r\n                                              patient_name={register.patient_name}\r\n                                              register_state={register.register_state}\r\n                                              user_name={register.user_name}\r\n                                            />\r\n                                          </div>\r\n                                        )\r\n                                      } else {\r\n                                        return (\r\n                                          <div\r\n                                            className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_ready tip_uprightside\"\r\n                                            onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                          >\r\n                                            <RegisterTimeScheduleItems\r\n                                              patient_name={register.patient_name}\r\n                                              register_state={register.register_state}\r\n                                              user_name={register.user_name}\r\n                                            />\r\n                                          </div>\r\n                                        )\r\n                                      }\r\n                                    }\r\n                                  } else if (register.register_state === \"완료\") {\r\n                                    if (index < 4 && index1 < 8) {\r\n                                      return (\r\n                                        <div\r\n                                          className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_success tip_normal\"\r\n                                          onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                        >\r\n                                          <RegisterTimeScheduleItems\r\n                                            patient_name={register.patient_name}\r\n                                            register_state={register.register_state}\r\n                                            user_name={register.user_name}\r\n                                          />\r\n                                        </div>\r\n                                      )\r\n                                    } else {\r\n                                      if (index >= 4 && index1 < 8) {\r\n                                        return (\r\n                                          <div\r\n                                            className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_success tip_upside\"\r\n                                            onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                          >\r\n                                            <RegisterTimeScheduleItems\r\n                                              patient_name={register.patient_name}\r\n                                              register_state={register.register_state}\r\n                                              user_name={register.user_name}\r\n                                            />\r\n                                          </div>\r\n                                        )\r\n                                      } else if (index < 4 && index1 >= 8) {\r\n                                        return (\r\n                                          <div\r\n                                            className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_success tip_rightside\"\r\n                                            onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                          >\r\n                                            <RegisterTimeScheduleItems\r\n                                              patient_name={register.patient_name}\r\n                                              register_state={register.register_state}\r\n                                              user_name={register.user_name}\r\n                                            />\r\n                                          </div>\r\n                                        )\r\n                                      } else {\r\n                                        return (\r\n                                          <div\r\n                                            className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_success tip_uprightside\"\r\n                                            onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                          >\r\n                                            <RegisterTimeScheduleItems\r\n                                              patient_name={register.patient_name}\r\n                                              register_state={register.register_state}\r\n                                              user_name={register.user_name}\r\n                                            />\r\n                                          </div>\r\n                                        )\r\n                                      }\r\n                                    }\r\n                                  } else if (register.register_state === \"취소\") {\r\n                                    if (index < 4 && index1 < 8) {\r\n                                      return (\r\n                                        <div\r\n                                          className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_cancel tip_normal\"\r\n                                          onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                        >\r\n                                          <RegisterTimeScheduleItems\r\n                                            patient_name={register.patient_name}\r\n                                            register_state={register.register_state}\r\n                                            user_name={register.user_name}\r\n                                          />\r\n                                        </div>\r\n                                      )\r\n                                    } else {\r\n                                      if (index >= 4 && index1 < 8) {\r\n                                        return (\r\n                                          <div\r\n                                            className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_cancel tip_upside\"\r\n                                            onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                          >\r\n                                            <RegisterTimeScheduleItems\r\n                                              patient_name={register.patient_name}\r\n                                              register_state={register.register_state}\r\n                                              user_name={register.user_name}\r\n                                            />\r\n                                          </div>\r\n                                        )\r\n                                      } else if (index < 4 && index1 >= 8) {\r\n                                        return (\r\n                                          <div\r\n                                            className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_cancel tip_rightside\"\r\n                                            onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                          >\r\n                                            <RegisterTimeScheduleItems\r\n                                              patient_name={register.patient_name}\r\n                                              register_state={register.register_state}\r\n                                              user_name={register.user_name}\r\n                                            />\r\n                                          </div>\r\n                                        )\r\n                                      } else {\r\n                                        return (\r\n                                          <div\r\n                                            className=\"RegisterTimeSchedule_content_timetable_doctors_registers_register_cancel tip_uprightside\"\r\n                                            onClick={() => { openRegisterModal(register) }} key={index3}\r\n                                          >\r\n                                            <RegisterTimeScheduleItems\r\n                                              patient_name={register.patient_name}\r\n                                              register_state={register.register_state}\r\n                                              user_name={register.user_name}\r\n                                            />\r\n                                          </div>\r\n                                        )\r\n                                      }\r\n                                    }\r\n                                  }\r\n                                }\r\n                              })}\r\n                            </div>\r\n                          )\r\n                        })}\r\n                      </div>\r\n                    )\r\n                  })}\r\n                </div>\r\n              </div>\r\n            )\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default RegisterTimeSchedule;\r\n","import DatePicker from \"react-datepicker\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport setHours from \"date-fns/setHours\";\r\nimport setMinutes from \"date-fns/setMinutes\";\r\nimport { registerLocale } from \"react-datepicker\";\r\nimport ko from 'date-fns/locale/ko';\r\nimport { changeRegisterState, updateRegister } from \"apis/register\";\r\nimport moment from \"moment\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nregisterLocale(\"ko\", ko);\r\n\r\nfunction RegisterUpdateForm(props) {\r\n  // props 상속\r\n  const { selectedPatient, doctors, setSelectedPatient, changeRegister, cancelRegister, publishTopic } = props;\r\n\r\n  // 빈 객체\r\n  const noneRegister = {\r\n    register_id: \"\",\r\n    register_patient_id: \"\",\r\n    register_user_id: \"\",\r\n    register_regdate: \"\",\r\n    register_date: new Date(),\r\n    register_starttime: \"\",\r\n    register_memo: \"\",\r\n    register_communication: \"\",\r\n    register_state: \"\",\r\n\r\n    // 추가된 DTO\r\n    patient_name: \"\",\r\n    patient_ssn: \"\",\r\n    patient_sex: \"\",\r\n    patient_tel: \"\",\r\n\r\n    user_name: \"\"\r\n  };\r\n  var selectPatient;\r\n  if (selectedPatient) {\r\n    selectPatient = selectedPatient;\r\n  } else {\r\n    selectPatient = noneRegister;\r\n  }\r\n  const noneDoctor = {\r\n    user_id: \"\",\r\n    user_hospital_id: \"\",\r\n    user_password: \"\",\r\n    user_name: \"\",\r\n    user_ssn: \"\",\r\n    user_tel: \"\",\r\n    user_email: \"\",\r\n    user_sex: \"\",\r\n    user_zipcode: \"\",\r\n    user_address: \"\",\r\n    user_detailaddress1: \"\",\r\n    user_detailaddress2: \"\",\r\n    user_regdate: \"\",\r\n    user_enabled: \"\",\r\n    user_authority: \"\",\r\n  };\r\n  var doctorlist;\r\n  if (doctors) {\r\n    doctorlist = doctors;\r\n  } else {\r\n    doctorlist = noneDoctor;\r\n  }\r\n\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n\r\n  // 진료 날짜 상태\r\n\r\n  const [startDate, setStartDate] = useState(new Date());\r\n  const [minDate, setMinDate] = useState(new Date());\r\n  const [minTime, setMinTime] = useState(setHours(setMinutes(new Date(), 0), 9));\r\n  const [maxTime, setMaxTime] = useState(setHours(setMinutes(new Date(), 45), 17));\r\n  const [showTimeSelect, setShowTimeSelect] = useState(true);\r\n\r\n\r\n  // 담당의 상태\r\n\r\n  // 다른 의사들\r\n  const [doctorsList, setDoctorsList] = useState(doctorlist);\r\n  // 선택된 의사\r\n  const [newDoctor, setNewDoctor] = useState(selectPatient.register_user_id);\r\n  const changeNewDoctor = useCallback((event) => {\r\n    setNewDoctor(event.target.value);\r\n  },[]);\r\n\r\n  // 접수 메모 상태\r\n  const [newMemo, setNewMemo] = useState(selectPatient.register_memo);\r\n  const changeNewMemo = useCallback((event) => {\r\n    setNewMemo(event.target.value);\r\n  },[]);\r\n\r\n  // 의사소통 메모 상태\r\n  const [newCommunication, setNewCommunication] = useState(selectPatient.register_communication);\r\n  const changeNewCommunication = useCallback((event) => {\r\n    setNewCommunication(event.target.value);\r\n  },[]);\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n  const updateRegisterBtn = async (event) => {\r\n    try {\r\n      let new_doctor = doctorsList.find((doctor) => {\r\n        if (doctor.user_id === newDoctor) {\r\n          return true;\r\n        }\r\n      });\r\n      let newRegister = {\r\n        register_id: selectPatient.register_id,\r\n        register_patient_id: selectPatient.register_patient_id,\r\n        register_user_id: newDoctor,\r\n        register_regdate: selectPatient.register_regdate,\r\n        register_date: moment(startDate).format(\"yyyy-MM-DD HH:mm\"),\r\n        register_starttime: \"\",\r\n        register_memo: newMemo,\r\n        register_communication: newCommunication,\r\n        register_state: selectPatient.register_state,\r\n        patient_name: selectPatient.patient_name,\r\n        patient_ssn: selectPatient.patient_ssn,\r\n        patient_sex: selectPatient.patient_sex,\r\n        patient_tel: selectPatient.patient_tel,\r\n        user_name: new_doctor.user_name\r\n      };\r\n      var list = await updateRegister(newRegister);\r\n      //console.log(\"업데이트\",list.data.result);\r\n      if (list.data.result === \"중복\") {\r\n        ToastsStore.success(\"이미 예약이 되어있습니다.\");\r\n      } else if (list.data.result === \"성공\") {\r\n        publishTopic(0);\r\n        setSelectedPatient(newRegister);\r\n        changeRegister();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const cancelRegisterForm = (event) => {\r\n    cancelRegister();\r\n  };\r\n\r\n  // datepicker 옵션\r\n  let handleColor = (time) => {\r\n    return (time.getHours() > 8 && time.getHours() < 18 ? \"hourStyle\" : \"\");\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n  useEffect(() => {\r\n    setStartDate(props.selectedPatient ? new Date(props.selectedPatient.register_date) : new Date());\r\n    return () => {\r\n      changeRegister();\r\n    }\r\n  }, [props.selectedPatient]);\r\n  useEffect(() => {\r\n    setMinDate(() =>\r\n      ((startDate.getFullYear() === new Date().getFullYear())\r\n        && (startDate.getMonth() === new Date().getMonth())\r\n        && (startDate.getDate() === new Date().getDate())\r\n        && (startDate.getHours() >= 18))\r\n        // || (startDate.getHours() <= 18)))\r\n        ? new Date().setDate(new Date().getDate() + 1) : new Date()\r\n    );\r\n  }, []);\r\n  useEffect(() => {\r\n    setShowTimeSelect(() =>\r\n      ((startDate.getFullYear() === new Date().getFullYear())\r\n        && (startDate.getMonth() === new Date().getMonth())\r\n        && (startDate.getDate() === new Date().getDate())\r\n        && (startDate.getHours() >= 18))\r\n        ? false : true\r\n    );\r\n\r\n    setMinTime(() =>\r\n      ((startDate.getFullYear() === new Date().getFullYear())\r\n        && (startDate.getMonth() === new Date().getMonth())\r\n        && (startDate.getDate() === new Date().getDate())\r\n        && ((startDate.getHours() >= 9)\r\n          || (startDate.getHours() <= 18)))\r\n        ? new Date() : setHours(setMinutes(new Date(), 0), 9)\r\n    );\r\n    setMaxTime(() =>\r\n      ((startDate.getFullYear() === new Date().getFullYear())\r\n        && (startDate.getMonth() === new Date().getMonth())\r\n        && (startDate.getDate() === new Date().getDate())\r\n        && ((startDate.getHours() >= 9)\r\n          || (startDate.getHours() <= 18)))\r\n        ? setHours(setMinutes(new Date(), 45), 17) : setHours(setMinutes(new Date(), 45), 17)\r\n    );\r\n  }, [props.selectedPatient.register_date, startDate]);\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <>\r\n      {/* 상단 메뉴 이름 */}\r\n      <div className=\"RegisterUpdateForm_header\">\r\n        접수 수정\r\n      </div>\r\n      {/* 하단 내용 */}\r\n      <div className=\"RegisterUpdateForm_content border\">\r\n        <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n        {/* 접수 상세 내역 내용 */}\r\n        <div className=\"RegisterUpdateForm_content_form\">\r\n          <form>\r\n            <div className=\"RegisterUpdateForm_content_list\">\r\n              <div className=\"RegisterUpdateForm_content_list_label\">\r\n                환자명:\r\n              </div>\r\n              <div className=\"RegisterUpdateForm_content_list_input\">\r\n                <input className=\"RegisterUpdateForm_content_list_input_readOnly\" type=\"text\" value={selectPatient.patient_name} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterUpdateForm_content_list\">\r\n              <div className=\"RegisterUpdateForm_content_list_label\">\r\n                생년월일:\r\n              </div>\r\n              <div className=\"RegisterUpdateForm_content_list_input\">\r\n                <input className=\"RegisterUpdateForm_content_list_input_readOnly\" type=\"text\" value={selectPatient.patient_ssn ? selectPatient.patient_ssn.substring(0, 6) : selectPatient.patient_ssn} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterUpdateForm_content_list\">\r\n              <div className=\"RegisterUpdateForm_content_list_label\">\r\n                성별:\r\n              </div>\r\n              <div className=\"RegisterRead_content_list_input\">\r\n                <input className=\"RegisterRead_content_list_input_readOnly\" type=\"text\" value={selectPatient.patient_sex} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterUpdateForm_content_list\">\r\n              <div className=\"RegisterUpdateForm_content_list_label\">\r\n                전화번호:\r\n              </div>\r\n              <div className=\"RegisterUpdateForm_content_list_input\">\r\n                <input className=\"RegisterUpdateForm_content_list_input_readOnly\" type=\"text\" value={selectPatient.patient_tel} readOnly />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterUpdateForm_content_list\">\r\n              <div className=\"RegisterUpdateForm_content_list_label\">\r\n                담당의:\r\n              </div>\r\n              <div className=\"RegisterUpdateForm_content_list_input\">\r\n                <select className=\"RegisterUpdateForm_input_select\" value={newDoctor} onChange={changeNewDoctor}>\r\n                  <option disabled>담당의를 선택해주세요</option>\r\n                  {/* 임의의 데이터 넣어서 출력 해보기 */}\r\n                  {doctorsList.map(doctor => {\r\n                    return (\r\n                      <option key={doctor.user_id} value={doctor.user_id}>{doctor.user_name}</option>\r\n                    );\r\n                  })}\r\n                </select>\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterUpdateForm_content_list\">\r\n              <div className=\"RegisterUpdateForm_content_list_label\">\r\n                진료 날짜:\r\n              </div>\r\n              <div className=\"RegisterUpdateForm_content_list_input\">\r\n                <DatePicker\r\n                  locale=\"ko\"\r\n                  showTimeSelect={showTimeSelect}\r\n                  selected={startDate}\r\n                  onChange={(date) => { setStartDate(date); }}\r\n                  timeIntervals={15}\r\n                  timeCaption=\"시간\"\r\n                  minDate={minDate}\r\n                  minTime={minTime}\r\n                  maxTime={maxTime}\r\n                  timeClassName={handleColor}\r\n                  dateFormat=\"yyyy-MM-dd H:mm\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterUpdateForm_content_list\">\r\n              <div className=\"RegisterUpdateForm_content_list_label\">\r\n                접수 메모:\r\n              </div>\r\n              <div className=\"RegisterUpdateForm_content_list_input\">\r\n                <input type=\"text\" value={newMemo} onChange={changeNewMemo} />\r\n              </div>\r\n            </div>\r\n            <div className=\"RegisterUpdateForm_content_list\">\r\n              <div className=\"RegisterUpdateForm_content_list_label\">\r\n                의사소통 메모:\r\n              </div>\r\n              <div className=\"RegisterUpdateForm_content_list_input\">\r\n                <input type=\"text\" value={newCommunication} onChange={changeNewCommunication} />\r\n              </div>\r\n            </div>\r\n          </form>\r\n          {/* 수정 취소 버튼 */}\r\n          <div className=\"RegisterUpdateForm_content_button\">\r\n            <button className=\"button_team2_empty\" onClick={cancelRegisterForm} >취소</button>\r\n            <button className=\"button_team2_fill\" type=\"submit\" onClick={updateRegisterBtn} >수정</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\nexport default RegisterUpdateForm;\r\n","import { getDoctorList } from \"apis/register\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport RegisterList from \"./RegisterList\";\r\nimport RegisterRead from \"./RegisterRead\";\r\nimport RegisterTimeSchedule from \"./RegisterTimeSchedule\";\r\nimport RegisterUpdateForm from \"./RegisterUpdateForm\";\r\nimport Paho from \"paho-mqtt\";\r\nimport { sendMqttMessage } from \"apis/mqtt\";\r\n\r\nfunction Register(props) {\r\n\r\n\r\n  ///////////////////////////////////////////////////////////////\r\n  // MQTT 설정 \r\n  ///////////////////////////////////////////////////////////////\r\n\r\n  //-------------------------------------------------------------  \r\n  //메시지 종류\r\n  //-------------------------------------------------------------\r\n\r\n  // 1. 리스트 호출 - nurse -> nurse\r\n  // { topic: \"/138010/nurse\", content: \"refreshRegisters\"}\r\n  // 2. 진료 추가   - nurse -> doctor\r\n  // { topic: \"/138010/doctor\", content: \"addTreatments\"}\r\n  // 3. To Do List 추가\r\n  // { topic: \"/138010/doctor\", content: \"refreshToDoList\"}\r\n  \r\n\r\n  //-------------------------------------------------------------  \r\n  //MQTT상태 선언\r\n  //-------------------------------------------------------------\r\n\r\n  const [subTopic, setSubTopic] = useState(\"/138010/nurse\");  // 병원코드/간호사\r\n  const [prevSubTopic, setPrevSubTopic] = useState(\"/138010/nurse\"); // 병원코드/간호사\r\n  const [pubMessage, setPubMessage] = useState([\r\n    { topic: \"/138010/nurse\", content: \"refreshRegisters\"}, \r\n    { topic: \"/138010/nurse/doctor\", content: \"addTreatments\"},\r\n    { topic: \"/138010/nurse\", content: \"refreshToDoList\"}\r\n  ]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  //-------------------------------------------------------------\r\n  //MQTT 연결 함수\r\n  //-------------------------------------------------------------\r\n  \r\n  let client = useRef(null);\r\n  const connectMqttBroker = () => {\r\n    // Paho.Mqtt.Client x\r\n    client.current = new Paho.Client(\"kosa3.iptime.org\", 50012, \"client-\" + new Date().getTime());\r\n    //client.current = new Paho.Client(\"localhost\", 61614, \"client-\" + new Date().getTime());\r\n\r\n    client.current.onConnectionLost = () => {\r\n      console.log(\"Mqtt 접속 끊김\");\r\n    };\r\n\r\n    client.current.onMessageArrived = (msg) => {\r\n      console.log(\"메시지 수신\");\r\n      var Jmessage = JSON.parse(msg.payloadString);\r\n      console.log(Jmessage);\r\n      setMessage(() => {\r\n        return Jmessage;\r\n      });\r\n    };\r\n\r\n    client.current.connect({\r\n      \r\n      onSuccess: () => {\r\n        console.log(\"mqtt 들어옴\");\r\n        sendSubTopic();\r\n        console.log(\"Mqtt 접속 성공\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const disconnectMqttBroker = () => {\r\n    client.current.disconnect(); // onConnectionLost 실행됨\r\n  };\r\n  const sendSubTopic = () => {\r\n    client.current.unsubscribe(prevSubTopic);\r\n    client.current.subscribe(subTopic);\r\n    setPrevSubTopic(subTopic);\r\n  };\r\n\r\n  const publishTopic = async (num) => {\r\n    await sendMqttMessage(pubMessage[num]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    //sendSubTopic();\r\n    connectMqttBroker();\r\n  },[]);\r\n\r\n  //-------------------------------------------------------------  \r\n  //상태 선언\r\n  //-------------------------------------------------------------\r\n\r\n  // 접수 DB 컬럼 REGISTERS TABLE\r\n  // REGISTER_ID, REGISTER_PATIENT_ID, REGISTER_USER_ID, \r\n  // REGISTER_REGDATE, REGISTER_DATE, REGISTER_TIME, \r\n  // REGISTER_MEMO, REGISTER_COMMUNICATION, REGISTER_STATE\r\n\r\n  // 공통 날짜\r\n  const [registerDate, setRegisterDate] = useState(new Date());\r\n\r\n  // 접수 내역 배열 \r\n  //const [registerList, setRegisterList] = useState();\r\n\r\n  // 선택된 환자 내용\r\n  const [selectedPatient, setSelectedPatient] = useState({});\r\n\r\n  // 접수 상세 내역 & 접수 수정 체인지\r\n  const [registerRead, setRegisterRead] = useState(true);\r\n\r\n  // 등록된 의사들 배열\r\n  const [doctors, setDoctors] = useState([]);\r\n\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n  \r\n  const changeRegister = (event) => {\r\n    if (registerRead === true) {\r\n      setRegisterRead(false);\r\n    } else {\r\n      setRegisterRead(true);\r\n    }\r\n  };\r\n\r\n  const cancelRegister = (event) => {\r\n    if (registerRead === true) {\r\n      setRegisterRead(false);\r\n    } else {\r\n      setRegisterRead(true);\r\n    }\r\n  };\r\n\r\n  //-------------------------------------------------------------\r\n  //마운트 및 언마운트에 실행할 내용\r\n  //-------------------------------------------------------------\r\n\r\n  const getDoctorLists = async () => {\r\n    try {\r\n      var list = await getDoctorList();\r\n      setDoctors(list.data.doctorList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(()=>{\r\n    getDoctorLists();\r\n  },[]);\r\n\r\n\r\n  //-------------------------------------------------------------\r\n  //렌더링 내용\r\n  //-------------------------------------------------------------\r\n  return (\r\n    <div className=\"Register\">\r\n      {/* 상단 */}\r\n      <div className=\"Register_1\">\r\n        {/* 접수 내역 */}\r\n        <div className=\"RegisterList\">\r\n          <RegisterList\r\n            setSelectedPatient={setSelectedPatient} \r\n            registerDate={registerDate}\r\n            setRegisterDate={setRegisterDate}\r\n            message={message}\r\n            publishTopic={publishTopic}\r\n            />\r\n        </div>\r\n        {/* 접수 상세 내역 or 접수 수정*/}\r\n        <div className=\"RegisterRead\">\r\n          {registerRead ?\r\n            <RegisterRead\r\n              registerRead={registerRead}\r\n              changeRegister={changeRegister}\r\n              registerDate={registerDate}\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n            />\r\n            :\r\n            <RegisterUpdateForm\r\n              registerRead={registerRead}\r\n              changeRegister={changeRegister}\r\n              cancelRegister={cancelRegister}\r\n              selectedPatient={selectedPatient}\r\n              setSelectedPatient={setSelectedPatient}\r\n              doctors={doctors}\r\n              publishTopic={publishTopic}\r\n            />\r\n          }\r\n        </div>\r\n      </div>\r\n      {/* 하단 */}\r\n      <div className=\"Register_2\">\r\n        <div className=\"Register_2_header\">\r\n          진료 예정표\r\n        </div>\r\n        <div className=\"Register_Components border\">\r\n          <div className=\"RegisterTimeSchedule\">\r\n            <RegisterTimeSchedule \r\n              registerDate={registerDate}\r\n              setRegisterDate={setRegisterDate}\r\n              message={message}\r\n              publishTopic={publishTopic}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Register;","import axios from \"axios\";\r\n\r\n\r\nexport function getTreatmentPatientList(date,globalUid,state=\"\") {\r\n  const promise = axios.get(\"/treatment/treatmentlist\", {params: {date, state, globalUid}});\r\n  return promise;\r\n}\r\n\r\nexport function getTreatmentHistoryList(treatment_patient_id) {\r\n  const promise = axios.get(\"/treatment/historyList\", {params: {treatment_patient_id}});\r\n  return promise;\r\n}\r\n\r\nexport function getTreatmentHistoryRead(treatment_id) {\r\n  const promise = axios.get(\"/treatment/historyRead\", {params: {treatment_id}});\r\n  return promise;\r\n  \r\n}\r\n\r\nexport function updateTreatment(treatment) {\r\n  const promise = axios.put(\"/treatment\",treatment);\r\n  return promise;\r\n  \r\n}\r\n\r\nexport function getSearchDurg(keyword=\"\", condition=\"\") {\r\n  const promise = axios.get(\"/treatment/keyword\", {params: {keyword, condition}});\r\n  return promise;\r\n}\r\n\r\nexport function getCategoryInspectionList() {\r\n  const promise = axios.get(\"/treatment/categoryValue\");\r\n  return promise;\r\n}\r\n// drugsInjections 등록하기\r\nexport function createDruglist(selectedDrug){\r\n  const promise = axios.post(\"/treatment/drugsInjections\", selectedDrug);\r\n  return promise;\r\n}\r\n","import axios from \"axios\";\r\n\r\nexport function readPatient(treatmentDate, state=\"\") {\r\n  const promise = axios.get(\"/inspection\", {params:{treatmentDate, state}});\r\n  return promise;\r\n}\r\n\r\nexport function updateIstateW(treatmentId) {\r\n  const promise = axios.put(\"/inspection/istateW\", null, {params:{treatmentId}});\r\n  return promise;\r\n}\r\n\r\nexport function updateIstateI(treatmentId) {\r\n  const promise = axios.put(\"/inspection/istateI\", null, {params:{treatmentId}});\r\n  return promise;\r\n}\r\n\r\nexport function updateIstateC(treatmentId) {\r\n  const promise = axios.put(\"/inspection/istateC\", null, {params:{treatmentId}});\r\n  return promise;\r\n}\r\n\r\nexport function readInspection(treatmentId) {\r\n  const promise = axios.get(\"/inspection/inspections\", {params:{treatmentId}});\r\n  return promise;\r\n}\r\n\r\nexport function updateState(inspectionId, state) {\r\n  const promise = axios.put(\"/inspection/state\", null, {params:{inspectionId, state}});\r\n  return promise;\r\n}\r\n\r\nexport function updateResult(inspectionId, inspectionResult) {\r\n  const promise = axios.put(\"/inspection/result\", null, {params:{inspectionId, inspectionResult}});\r\n  return promise;\r\n}\r\n\r\nexport function selectImgId(inspectionId) {\r\n  const promise = axios.get(\"/inspection/imgId\", {params:{inspectionId}});\r\n  return promise;\r\n}\r\n\r\nexport function downloadImg(inspectionImgId) {\r\n  const promise = axios.get(\"/inspection/images/\" + inspectionImgId, {responseType: \"blob\"});\r\n  return promise;\r\n}\r\n\r\nexport function readImage(inspectionId) {\r\n  const promise = axios.get(\"/inspection/images\", {params:{inspectionId}});\r\n  return promise;\r\n}\r\n\r\nexport function createImage(multipartFormData) {\r\n  const promise = axios.post(\"/inspection/images\", multipartFormData);\r\n  return promise;\r\n}\r\n\r\nexport function deleteImage(inspectionId) {\r\n  const promise = axios.delete(\"/inspection/images\", {params:{inspectionId}});\r\n  return promise;\r\n}","import { useEffect, useState } from \"react\";\r\nimport style from \"./InspectionImgFormModal.module.css\";\r\nimport ImageGallery from \"react-image-gallery\";\r\nimport \"react-image-gallery/styles/css/image-gallery.css\";\r\nimport { readImage, selectImgId, downloadImg } from \"apis/inspections\";\r\n\r\nfunction InspectionImgFormModal(props) {\r\n  //영상검사 이미지 결과\r\n  const [inspectionImgResult, setInspectionImgResult] = useState(props.inspection);\r\n  //모달 열기, 닫기 props\r\n  const { open, close } = props;\r\n  //ImageGallery에 사용될 이미지 배열\r\n  let images = [];\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  //DB Inspection_Imgs에서 해당 검사번호를 가진 검사이미지 목록 가져옴\r\n  const getInspectionImgs = async () => {\r\n    try {\r\n      if (props.id === props.inspection.inspection_id) {\r\n        //해당 검사번호를 가진 검사이미지의 다운로드 url 가져와서 images 배열에 넣음\r\n        const response = await readImage(props.id);\r\n        for (var i = 0; i <= response.data.inspectionImgList.length - 1; i++) {\r\n          images.push({\r\n            original: response.data.inspectionImgList[i].inspection_img_path,\r\n            thumbnail: response.data.inspectionImgList[i].inspection_img_path,\r\n            originalHeight: 600,\r\n          });\r\n        }\r\n\r\n        //해당 검사번호를 가진 검사이미지번호 목록 가져옴\r\n        const responseImgId = await selectImgId(props.id);\r\n\r\n        //검사이미지번호의 이미지 다운로드\r\n        for (var i = 0; i <= responseImgId.data.inspectionImgList.length - 1; i++) {\r\n          await downloadImg(responseImgId.data.inspectionImgList[i].inspection_img_id);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  useEffect(() => {\r\n    if(open === true){\r\n      getInspectionImgs();\r\n    }\r\n  }, [open]);\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <div className={style.InspectionImgModal}>\r\n      <div className={open ? `${style.openModal} ${style.modal}` : `${style.modal}`}>\r\n        {open ? (\r\n          <section>\r\n            <div className={`${style.InspectionImgForm_title} m-2`}>검사 사진</div>\r\n            <div className={`${style.InspectionImgForm_1} border`}>\r\n              <div className={`${style.InspectionImgForm_1_1} m-3`}>\r\n                <div className={`${style.InspectionImgForm_1_1_1} mr-3 ml-3`}>\r\n                  <div className=\"mb-1\">진단검사명 :</div>\r\n                  <div className=\"mb-1\">검사명 :</div>\r\n                  <div className=\"mb-1\">검사번호 :</div>\r\n                  <div className=\"mb-1\">담당의 :</div>\r\n                  <div className=\"mb-1\">검사자 :</div>\r\n                  <div className=\"mb-1\">검사실 :</div>\r\n                </div>\r\n                <div className={style.InspectionImgForm_1_1_2}>\r\n                  <div className=\"mb-1\">{inspectionImgResult.inspection_list_category}</div>\r\n                  <div className=\"mb-1\">{inspectionImgResult.inspection_list_name}</div>\r\n                  <div className=\"mb-1\">{props.id}</div>\r\n                  <div className=\"mb-1\">{inspectionImgResult.inspection_doctor_name}</div>\r\n                  <div className=\"mb-1\">{inspectionImgResult.inspection_inspector_name}</div>\r\n                  <div className=\"mb-1\">{inspectionImgResult.inspection_lab}</div>\r\n                </div>\r\n              </div>\r\n              <div className={`${style.InspectionImgForm_1_2} m-3`}>\r\n                <ImageGallery items={images} />\r\n              </div>\r\n            </div>\r\n            <div className={`${style.InspectionImgForm_2} m-2`}>\r\n              <button className=\"button_team2_fill\" onClick={close}>\r\n                닫기\r\n              </button>\r\n            </div>\r\n          </section>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InspectionImgFormModal;","import React, { useState, useEffect } from \"react\";\r\n\r\nimport style from \"./style.module.css\";\r\nimport { getTreatmentHistoryRead } from \"apis/treatments\";\r\nimport InspectionImgFormModal from \"views/Inspection/components/modal/InspectionImgFormModal\";\r\nimport moment from \"moment\";\r\nimport Spinner from \"components/common/Spinner\";\r\n\r\nfunction TreatmentHistoryRead(props) {\r\n  //historylist에서 클릭한 진료 번호 가져오기\r\n  const { open, close, selectedTreatmentId } = props;\r\n\r\n  //soap 상태\r\n  const [soap, setSoap] = useState([]);\r\n\r\n  //검사 리스트 상태\r\n  const [inspectionlists, setInspectionlists] = useState([]);\r\n\r\n  //약 리스트 상태\r\n  const [druglists, setDrugLists] = useState([]);\r\n\r\n  //true 일때, 이미지 모달 열림\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  // spinner\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //임시 진료 번호\r\n  var tempTreatmentId = \"\";\r\n\r\n  //진료기록리스트에서 선택한 진료번호 가져오기 -> selectedTreatmentId == readTreatmentId\r\n  var readTreatmentId;\r\n  if (selectedTreatmentId) {\r\n    readTreatmentId = selectedTreatmentId;\r\n  } else {\r\n    readTreatmentId = tempTreatmentId;\r\n  }\r\n\r\n  const openModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  //DB treatments 에서 treatment_id에 맞는 해당 진료기록 가져오기(soap, 검사, 처방)\r\n  const getRead = async (treatment_id) => {\r\n    setLoading(true);\r\n    try {\r\n      var list = await getTreatmentHistoryRead(treatment_id);\r\n      setSoap(list.data.treatmentSoaplist);\r\n      setInspectionlists(list.data.treatmentInspectionlist);\r\n      setDrugLists(list.data.treatmentDrugsInjectionlist);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    //console.log(\"asasasas\",checkedPatientlist.treatment_patient_id);\r\n    if(readTreatmentId){\r\n      getRead(readTreatmentId);\r\n    }\r\n  }, [props, readTreatmentId]);\r\n\r\n  return (\r\n    <div className={style.TreatmentHistorymodal}>\r\n      <div className={open ? `${style.openModal} ${style.modal}` : `${style.modal}`}>\r\n        {open ? (\r\n          <section>\r\n            {loading ? (\r\n              <Spinner />\r\n            ) : (\r\n              <>\r\n                <div className={style.TreatmentHistoryRead}>\r\n                  <div className={style.TreatmentHistoryRead_title}> 진료번호 : {readTreatmentId} . 진료상세 </div>\r\n                  <div className={`${style.TreatmentHistoryRead_border} border`}>\r\n                    <div className={style.TreatmentHistoryRead_1}>\r\n                      <table className={`${style.TreatmentHistoryRead_1_table} table table-bordered`}>\r\n                        <tbody>\r\n                          {soap.map((soap) => {\r\n                            return (\r\n                              <tr key={soap.treatment_id}>\r\n                                <th className={`text-center border`} bgcolor=\"lightgrey\">\r\n                                  Subjective\r\n                                </th>\r\n                                {/* <td width=\"80%\">목 아픔</td> */}\r\n                                <td className={`text-left`} width=\"80%\">\r\n                                  {soap.treatment_smemo}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                          {soap.map((soap) => {\r\n                            return (\r\n                              <tr key={soap.treatment_id}>\r\n                                <th className={`text-center border`} bgcolor=\"lightgrey\">\r\n                                  Objective\r\n                                </th>\r\n                                {/* <td width=\"80%\">인후염</td> */}\r\n                                <td className={`text-left`} width=\"80%\">\r\n                                  {soap.treatment_omemo}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                          {soap.map((soap) => {\r\n                            return (\r\n                              <tr key={soap.treatment_id}>\r\n                                <th className={`text-center border`} bgcolor=\"lightgrey\">\r\n                                  Assessment\r\n                                </th>\r\n                                {/* <td width=\"80%\">온열찜질기 실행</td> */}\r\n                                <td className={`text-left`} width=\"80%\">\r\n                                  {soap.treatment_amemo}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                          {soap.map((soap) => {\r\n                            return (\r\n                              <tr key={soap.treatment_id}>\r\n                                <th className={`text-center border`} bgcolor=\"lightgrey\">\r\n                                  {\" \"}\r\n                                  Plan\r\n                                </th>\r\n                                {/* <td width=\"80%\">다음 내원시 Lab test</td> */}\r\n                                <td className={`text-left`} width=\"80%\">\r\n                                  {soap.treatment_pmemo}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                    <div className={style.TreatmentHistoryRead_2}>\r\n                      <div className={style.TreatmentHistoryRead_2_title}>검사목록</div>\r\n                      <div className={`${style.TreatmentHistoryRead_2_Totaltable} border`}>\r\n                        <table className={`${style.TreatmentHistoryRead_2_table} table`}>\r\n                          <thead className={style.TreatmentHistoryRead_2_table_thead}>\r\n                            <tr className={style.TreatmentHistoryRead_2_table_tbody}>\r\n                              <th>진단검사명</th>\r\n                              <th>검사 날짜</th>\r\n                              <th>검사자</th>\r\n                              <th>검사명</th>\r\n                              <th>참고치</th>\r\n                              <th>검사 결과</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {inspectionlists.map((inspections) => {\r\n                              return (\r\n                                <tr key={inspections.inspection_id}>\r\n                                  <td>{inspections.inspection_list_category}</td>\r\n                                  <td>{moment(inspections.inspection_date).format(\"yyyy-MM-DD HH:mm\")}</td>\r\n                                  <td>{inspections.inspection_inspector_name}</td>\r\n                                  <td>{inspections.inspection_list_name}</td>\r\n                                  <td>{inspections.inspection_list_reference}</td>\r\n                                  {/* <td>{inspections.inspection_state}</td> */}\r\n                                  {inspections.inspection_list_category === \"영상검사\" ? (\r\n                                    inspections.inspection_result === \"img\" ? (\r\n                                      <td>\r\n                                        <React.Fragment>\r\n                                          {\" \"}\r\n                                          <button className=\"button_team2_empty\" onClick={openModal}>\r\n                                            보기\r\n                                          </button>\r\n                                          <InspectionImgFormModal id={inspections.inspection_id} open={modalOpen} close={closeModal} inspection={inspections} />\r\n                                        </React.Fragment>\r\n                                      </td>\r\n                                    ) : (\r\n                                      <td></td>\r\n                                    )\r\n                                  ) : (\r\n                                    <td>{inspections.inspection_result}</td>\r\n                                  )}\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                    <div className={style.TreatmentHistoryRead_3}>\r\n                      <div className={style.TreatmentHistoryRead_3_title}>처방목록</div>\r\n                      <div className={`${style.TreatmentHistoryRead_3_Totaltable} border`}>\r\n                        <table className={`${style.TreatmentHistoryRead_3_table} table`}>\r\n                          <thead className={style.TreatmentHistoryRead_3_table_thead}>\r\n                            <tr>\r\n                              <th>처방 날짜</th>\r\n                              <th>담당의</th>\r\n                              <th>약품/주사코드</th>\r\n                              <th>약품/주사명</th>\r\n                              <th>구분</th>\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {druglists.map((drugInjections) => {\r\n                              return (\r\n                                <tr key={drugInjections.drug_injection_drug_injection_list_id}>\r\n                                  <th>{moment(drugInjections.treatment_date).format(\"yyyy-MM-DD HH:mm\")}</th>\r\n                                  <th>{drugInjections.user_name}</th>\r\n                                  <th>{drugInjections.drug_injection_drug_injection_list_id}</th>\r\n                                  <th>{drugInjections.drug_injection_list_name}</th>\r\n                                  <th>{drugInjections.drug_injection_list_category}</th>\r\n                                </tr>\r\n                              );\r\n                            })}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={style.TreatmentHistoryReadClose}>\r\n                    <button className=\"button_team2_fill\" onClick={close}>\r\n                      {\" \"}\r\n                      확인\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              </>\r\n            )}\r\n          </section>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default TreatmentHistoryRead;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { updateTreatment, getSearchDurg, getCategoryInspectionList, createDruglist } from \"apis/treatments\";\r\nimport Spinner from \"components/common/Spinner\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nimport TreatmentHistoryRead from \"./components/modal/TreatmentHistoryReadModal\";\r\nimport { IoGitMerge } from \"react-icons/io5\";\r\nimport Nodata from \"components/common/NoData\";\r\n\r\nfunction TreatmentCreateForm(props) {\r\n  //----------------------\r\n  //상태\r\n  //----------------------\r\n  const { publishTopic } = props;\r\n\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n\r\n  // spinner\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //검사 checkbox 리스트\r\n  const [inspectionlist, setInspectionlist] = useState([]);\r\n\r\n  //검사 checkbox-category\r\n  const [inspectionOption, setInspectionOption] = useState(\"진단 검사 선택\");\r\n\r\n  //검사 선택 저장상태\r\n  const [inspectionForm, setInspectionForm] = useState({\r\n    selectedInspection: [],\r\n    selectedInspection2: []\r\n  });\r\n\r\n  //약 리스트\r\n  const [druglists, setDrugLists] = useState([]);\r\n\r\n  //약 선택 저장상태\r\n  const [drugForm, setDrugForm] = useState({\r\n    selectedDrug: []\r\n  });\r\n\r\n  //선택한 약id 상태\r\n  const [selectDrugId, setSelectDrugId] = useState(\"\");\r\n\r\n  //약 키워드 검색을 위한 상태\r\n  const [searchKeyword, setSearchKeyword] = useState();\r\n\r\n  const [searchFilter, setSearchFilter] = useState();\r\n\r\n  const [treatmentId, setTreatmentId] = useState(\"\");\r\n\r\n  const [selectedTreatmentId, setSelectedTreatmentId] = useState(\"\");\r\n\r\n  //soap - Subjective 상태\r\n  const [smemo, setSmemo] = useState(\"\");\r\n\r\n  //soap - Objective 상태\r\n  const [omemo, setOmemo] = useState(\"\");\r\n\r\n  //soap - Assessment 상태\r\n  const [amemo, setAmemo] = useState(\"\");\r\n\r\n  //soap - Plan 상태\r\n  const [pmemo, setPmemo] = useState(\"\");\r\n\r\n  //soap - 의사소통 메모 상태\r\n  const [cmemo, setCmemo] = useState(\"\");\r\n\r\n  // 모든 약품 리스트 \r\n  const [totalDrug, setTotalDrug] = useState([]);\r\n\r\n  // 약품 카테고리 선택\r\n  const [selectedDrugCategory, setSelectedDrugCategory] = useState(\"검색\");\r\n\r\n  const [keywordDrugList, setKeywordDrugList] = useState([]);\r\n  const [checkDrugList, setCheckDrugList] = useState([]);\r\n\r\n  //임시 환자 리스트\r\n  var tempPatientlist = {\r\n    treatment_register_id: \"\",\r\n    treatment_patient_id: \"\",\r\n    patient_name: \"\",\r\n    patient_ssn: \"\",\r\n    patient_sex: \"\",\r\n    register_communication: \"\",\r\n    treatment_state: \"\",\r\n  };\r\n\r\n  //대기환자리스트에서 체크된 환자 리스트 가져오기 ->props.checkedpatient == checkedPatientlist\r\n  var checkedPatientlist;\r\n  if (props.checkedpatient) {\r\n    checkedPatientlist = props.checkedpatient;\r\n  } else {\r\n    checkedPatientlist = tempPatientlist;\r\n  }\r\n\r\n  //검사 체크박스 관리를 위한 상태\r\n  const [checkList, setCheckList] = useState([{ id: \"\", checked: false, name: \"\" }]);\r\n  //검사 체크박스 관리함수\r\n  const handleCheckClick = (id) => {\r\n    let newChecklist = checkList.map((item) => {\r\n      if (item.id === id) {\r\n        return { ...item, checked: !item.checked };\r\n      } else {\r\n        return item;\r\n      }\r\n    });\r\n    setCheckList(newChecklist);\r\n  };\r\n\r\n  //DB 에서 카테고리별 검사 리스트 가져오기\r\n  const getTotalInspectionsList = async (categoryValue) => {\r\n    try {\r\n      var list = await getCategoryInspectionList(categoryValue);\r\n      // console.log(\"hi\",list.data.inspectionList);\r\n      setInspectionlist(list.data.inspectionList);\r\n      let cList = [];\r\n      for (var iList of list.data.inspectionList) {\r\n        cList.push({ id: iList.inspection_list_id, checked: false, name: iList.inspection_list_name });\r\n      }\r\n      // console.log(\"clist\",cList);\r\n      setCheckList(cList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  //DB 에서 약리스트 가져오기\r\n  const getSearchDurgs = async () => {\r\n    //setLoading(true);\r\n    try {\r\n      var list = await getSearchDurg();\r\n      // console.log(\"dddddi\",list.data.druglist);\r\n\r\n      setDrugLists(list.data.druglist);\r\n\r\n      let totalDrugList = [];\r\n      let indexForDrug = 0;\r\n      for (var drug of list.data.druglist) {\r\n        totalDrugList.push(\r\n          {\r\n            indexId: indexForDrug,\r\n            drug_injection_list_id: drug.drug_injection_list_id,\r\n            drug_injection_list_name: drug.drug_injection_list_name,\r\n            drug_injection_list_category: drug.drug_injection_list_category,\r\n            checked: false,\r\n          }\r\n        );\r\n        indexForDrug++;\r\n      }\r\n      // console.log(\"totalDrugList\", totalDrugList);\r\n      setTotalDrug(totalDrugList);\r\n      setCheckDrugList(totalDrugList);\r\n      setKeywordDrugList(totalDrugList);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleCheckDrugClick = (id) => {\r\n    //console.log(id);\r\n    \r\n    let newCheckDruglist = checkDrugList.map((drug) => {\r\n      if (drug.indexId === id) {\r\n        if (drug.checked === false) {\r\n          setDrugForm((prevDrugForm) => {\r\n            return {\r\n              ...prevDrugForm,\r\n              selectedDrug: prevDrugForm.selectedDrug.concat(drug.drug_injection_list_id),\r\n            };\r\n          });\r\n        } else {\r\n          setDrugForm((prevDrugForm) => {\r\n            return {\r\n              ...prevDrugForm,\r\n              selectedDrug: prevDrugForm.selectedDrug.filter((item) => item !== drug.drug_injection_list_id),\r\n            };\r\n          });\r\n        }\r\n        return { ...drug, checked: !drug.checked };\r\n      } else {\r\n        return drug;\r\n      }\r\n    });\r\n    setCheckDrugList(newCheckDruglist);\r\n    console.log(drugForm);\r\n  };\r\n\r\n  //검사 - 카테고리 바꾸기\r\n  const changeCategory = (event) => {\r\n    setInspectionOption(event.target.value);\r\n  };\r\n\r\n  //약 - 키워드 바꾸기\r\n  const changeKeyword = (event) => {\r\n    setSearchKeyword(event.target.value);\r\n  };\r\n\r\n  //검색 클릭 함수 -> DB에서 키워드에 해당하는 약리스트 가져오기\r\n  const searchClick = async () => {\r\n    setSelectedDrugCategory(\"검색\");\r\n    //setLoading(true);\r\n    try {\r\n      var list = await getSearchDurg(searchKeyword, \"\");\r\n      let searchDrugList = [];\r\n      for (var sDrug of list.data.druglist) {\r\n        for (var drug of totalDrug) {\r\n          if (drug.drug_injection_list_id === sDrug.drug_injection_list_id) {\r\n            searchDrugList.push(drug);\r\n          }\r\n        }\r\n      }\r\n      console.log(\"searchDrugList\", searchDrugList);\r\n      setKeywordDrugList(searchDrugList);\r\n\r\n      //setDrugLists(list.data.druglist);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    // finally {\r\n    //   setLoading(false);\r\n    // }\r\n  };\r\n\r\n  //필터 - 전체\r\n  const totalFilter = async () => {\r\n    setSelectedDrugCategory(\"\");\r\n\r\n  };\r\n  //필터 - 내복약\r\n  const innerFilter = async () => {\r\n    setSelectedDrugCategory(\"약품(내복약)\");\r\n\r\n  };\r\n  //필터 - 외용약\r\n  const outerFilter = async () => {\r\n    setSelectedDrugCategory(\"약품(외용약)\");\r\n\r\n  };\r\n  //필터 - 주사\r\n  const injectionFilter = async () => {\r\n    setSelectedDrugCategory(\"주사\");\r\n\r\n  };\r\n\r\n  //soap , 의사소통메모 상태 바꾸기\r\n  const handleChangeSmemo = (event) => {\r\n    setSmemo(event.target.value);\r\n  };\r\n  const handleChangeOmemo = (event) => {\r\n    setOmemo(event.target.value);\r\n  };\r\n  const handleChangeAmemo = (event) => {\r\n    setAmemo(event.target.value);\r\n  };\r\n  const handleChangePmemo = (event) => {\r\n    setPmemo(event.target.value);\r\n  };\r\n  const handleChangeCmemo = (event) => {\r\n    setCmemo(event.target.value);\r\n  };\r\n\r\n  //진료등록 버튼 클릭 함수 -> 진료 업데이트\r\n  const updateTreatmentBtn = async (event) => {\r\n    // publishTopic();\r\n    // event.preventDefault();\r\n    try {\r\n      let newTreatment = {\r\n        treatment_id: checkedPatientlist.treatment_id,\r\n        treatment_user_id: checkedPatientlist.treatment_user_id,\r\n        treatment_patient_id: checkedPatientlist.treatment_patient_id,\r\n        treatment_smemo: smemo,\r\n        treatment_omemo: omemo,\r\n        treatment_amemo: amemo,\r\n        treatment_pmemo: pmemo,\r\n        treatment_communication: cmemo,\r\n        selectedInspection: inspectionForm.selectedInspection,\r\n        selectedInspection2: inspectionForm.selectedInspection2,\r\n        selectedDrug: drugForm.selectedDrug,\r\n      };\r\n\r\n      if (checkedPatientlist.treatment_state === \"대기\" || checkedPatientlist.treatment_state === \"\") {\r\n        if (newTreatment.treatment_id === \"\" || newTreatment.treatment_patient_id === \"\") {\r\n          // alert(\"진료 아이디를 입력해주세요.\");\r\n          ToastsStore.success(\"환자를 클릭해주세요.\");\r\n        } else if (newTreatment.treatment_smemo === \"\" || newTreatment.treatment_omemo === \"\" || newTreatment.treatment_amemo === \"\" || newTreatment.treatment_pmemo === \"\") {\r\n          // alert(\"soap를 입력해주세요.\");\r\n          ToastsStore.success(\"필수 정보를 입력해주세요.\");\r\n        } else {\r\n          var list = await updateTreatment(newTreatment);\r\n          if (list.data) {\r\n            ToastsStore.success(\"진료 등록 완료\");\r\n            publishTopic(0);\r\n            publishTopic(1);\r\n            // console.log(\"list\", list);\r\n            setSmemo(\"\");\r\n            setOmemo(\"\");\r\n            setAmemo(\"\");\r\n            setPmemo(\"\");\r\n            setCmemo(\"\");\r\n\r\n            let cList = [];\r\n            for (var iList of inspectionlist) {\r\n              cList.push({ id: iList.inspection_list_id, checked: false, name: iList.inspection_list_name });\r\n            }\r\n            setCheckList(cList);\r\n            setSelectedTreatmentId(newTreatment.treatment_id);\r\n            setInspectionForm({ selectedInspection: [], selectedInspection2: [] });\r\n            setDrugForm({ selectedDrug: [] });\r\n\r\n            setModalOpen(true);\r\n \r\n            let totalDrugList = [];\r\n            let indexForDrug = 0;\r\n            for (var drug of totalDrug) {\r\n              totalDrugList.push(\r\n                {\r\n                  indexId: indexForDrug,\r\n                  drug_injection_list_id: drug.drug_injection_list_id,\r\n                  drug_injection_list_name: drug.drug_injection_list_name,\r\n                  drug_injection_list_category: drug.drug_injection_list_category,\r\n                  checked: false,\r\n                }\r\n              );\r\n              indexForDrug++;\r\n            }\r\n            console.log(\"totalDrugList\", totalDrugList);\r\n            setCheckDrugList(totalDrugList);\r\n          }\r\n        }\r\n      } else {\r\n        setSmemo(\"\");\r\n        setOmemo(\"\");\r\n        setAmemo(\"\");\r\n        setPmemo(\"\");\r\n        setCmemo(\"\");\r\n\r\n        let cList = [];\r\n        for (var iList of inspectionlist) {\r\n          cList.push({ id: iList.inspection_list_id, checked: false, name: iList.inspection_list_name });\r\n        }\r\n        setCheckList(cList);\r\n        ToastsStore.success(\"이미 완료된 진료입니다.\");\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const checkedDrugId = (drug_injection_list_id) => {\r\n    setSelectDrugId(drug_injection_list_id);\r\n  };\r\n\r\n\r\n  // Inspection - 혈액검사\r\n  const handleChangeBloodInspections = (event) => {\r\n    if (event.target.checked) {\r\n      //체크되었는지 유무\r\n      setInspectionForm((prevInspectionForm) => {\r\n        return {\r\n          ...prevInspectionForm,\r\n          selectedInspection: prevInspectionForm.selectedInspection.concat(event.target.value),\r\n        };\r\n      });\r\n    } else {\r\n      setInspectionForm((prevInspectionForm) => {\r\n        return {\r\n          ...prevInspectionForm,\r\n          selectedInspection: prevInspectionForm.selectedInspection.filter((item) => item !== event.target.value),\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  // Inspection - 영상검사\r\n  const handleChangeImgInspections = (event) => {\r\n    if (event.target.checked) {\r\n      //체크되었는지 유무\r\n      setInspectionForm((prevInspectionForm) => {\r\n        return {\r\n          ...prevInspectionForm,\r\n          selectedInspection2: prevInspectionForm.selectedInspection2.concat(event.target.value),\r\n        };\r\n      });\r\n    } else {\r\n      setInspectionForm((prevInspectionForm) => {\r\n        return {\r\n          ...prevInspectionForm,\r\n          selectedInspection2: prevInspectionForm.selectedInspection2.filter((item) => item !== event.target.value),\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  const openModal = () => {\r\n    setModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getTotalInspectionsList(inspectionOption);\r\n  }, []);\r\n\r\n  // 마운트될때 전체 출력이 된다\r\n  useEffect(() => {\r\n    getSearchDurgs();\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"TreatmentCreateForm_title\">\r\n        {/* 진료 등록<button type=\"submit\" className=\"button_team2_fill\">진료완료</button> */}\r\n        <div className=\"TreatmentCreateForm_title_1\"> {checkedPatientlist.patient_name} 님 진료 등록 </div>\r\n        <div className=\"TreatmentCreateForm_title_2\">\r\n          <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n          <button type=\"submit\" className=\"button_team2_fill\" onClick={updateTreatmentBtn}>\r\n            진료완료\r\n          </button>\r\n          <React.Fragment>\r\n            {/* TreatmentHistoryRead에 선택한 진료 번호 보내기 selectedTreatmentId */}\r\n            <TreatmentHistoryRead open={modalOpen} close={closeModal} selectedTreatmentId={selectedTreatmentId}></TreatmentHistoryRead>\r\n          </React.Fragment>\r\n        </div>\r\n      </div>\r\n      <div className=\"TreatmentCreateForm_border border\">\r\n        <div className=\"TreatmentCreateForm_1\">\r\n          <div className=\"TreatmentCreateForm_1_border\">\r\n            <div className=\"TreatmentCreateForm_1_1_title\">Subjective</div>\r\n            <textarea className=\"TreatmentCreateForm_1_1_content border\" rows=\"6\" cols=\"40\" onChange={handleChangeSmemo} value={smemo}>\r\n              당일 검사 요청\r\n            </textarea>\r\n            <div className=\"TreatmentCreateForm_1_1_title\">Objective</div>\r\n            <textarea className=\"TreatmentCreateForm_1_1_content border\" rows=\"6\" cols=\"40\" onChange={handleChangeOmemo} value={omemo}>\r\n              당일 검사 요청\r\n            </textarea>\r\n            <div className=\"TreatmentCreateForm_1_1_title\">Assessment</div>\r\n            <textarea className=\"TreatmentCreateForm_1_1_content border\" rows=\"6\" cols=\"40\" onChange={handleChangeAmemo} value={amemo}>\r\n              당일 검사 요청\r\n            </textarea>\r\n            <div className=\"TreatmentCreateForm_1_1_title\">Plan</div>\r\n            <textarea className=\"TreatmentCreateForm_1_1_content border\" rows=\"6\" cols=\"40\" onChange={handleChangePmemo} value={pmemo}>\r\n              당일 검사 요청\r\n            </textarea>\r\n            <div className=\"TreatmentCreateForm_1_1_title\">의사소통 메모</div>\r\n            <textarea className=\"TreatmentCreateForm_1_1_content border\" rows=\"6\" cols=\"40\" onChange={handleChangeCmemo} value={cmemo}>\r\n              당일 검사 요청\r\n            </textarea>\r\n          </div>\r\n        </div>\r\n        <div className=\"TreatmentCreateForm_2\">\r\n          <div className=\"TreatmentCreateForm_2_1_border border\">\r\n            <div className=\"TreatmentCreateForm_2_1_title\">진단 검사</div>\r\n            <div className=\"TreatmentCreateForm_2_1_content\">\r\n              <div className=\"TreatmentCreateForm_select\">\r\n                <select name=\"inspectioncategory\" className=\"TreatmentCreateForm_select_1\" onChange={changeCategory} value={inspectionOption}>\r\n                  <option disabled>진단 검사 선택</option>\r\n                  <option value=\"혈액검사\">혈액검사</option>\r\n                  <option value=\"영상검사\">영상검사</option>\r\n                </select>\r\n              </div>\r\n              {/* 검사별 상태 만들어서 전달, 조건문으로 맵 돌리기 */}\r\n\r\n              <div className=\"TreatmentCreateForm_checkbox\">\r\n                {inspectionlist.map((inspection) => {\r\n                  return (\r\n                    <div key={inspection.inspection_list_id}>\r\n                      {inspection.inspection_list_category === inspectionOption ? (\r\n                        inspection.inspection_list_category === \"혈액검사\" ? (\r\n                          <div className=\"TreatmentCreateForm_checkbox_1\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={checkList[inspection.inspection_list_id - 1].checked}\r\n                              name=\"selectedInspection\"\r\n                              value={inspection.inspection_list_id}\r\n                              onClick={() => handleCheckClick(inspection.inspection_list_id)}\r\n                              onChange={handleChangeBloodInspections}\r\n                            />{\" \"}\r\n                            {inspection.inspection_list_name}\r\n                          </div>\r\n                        ) : (\r\n                          <div className=\"TreatmentCreateForm_checkbox_1\">\r\n                            <input\r\n                              type=\"checkbox\"\r\n                              checked={checkList[inspection.inspection_list_id - 1].checked}\r\n                              name=\"selectedInspection2\"\r\n                              value={inspection.inspection_list_id}\r\n                              onClick={() => handleCheckClick(inspection.inspection_list_id)}\r\n                              onChange={handleChangeImgInspections}\r\n                            />{\" \"}\r\n                            {inspection.inspection_list_name}\r\n                          </div>\r\n                        )\r\n                      ) : (\r\n                        false\r\n                      )}\r\n                    </div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"TreatmentCreateForm_2_2_border border\">\r\n            <div className=\"TreatmentCreateForm_2_2_title\">약품 목록</div>\r\n            <div className=\"TreatmentCreateForm_2_2_content\">\r\n              <div className=\"TreatmentSearch_1\">\r\n                <div className=\"TreatmentSearch_1_1_1\">\r\n                  <input type=\"text\" className=\"TreatmentSearch_1_1\" placeholder=\"약품/주사명을 입력하세요.\" onChange={changeKeyword} value={searchKeyword} />\r\n\r\n                  <button className=\"button_team2_fill\" onClick={searchClick}>\r\n                    검색\r\n                  </button>\r\n\r\n                  <div className=\"TreatmentSearch_1_2_1\" onClick={totalFilter}>\r\n                    전체\r\n                  </div>\r\n                  <div className=\"TreatmentSearch_1_2_2\" onClick={innerFilter}>\r\n                    내복\r\n                  </div>\r\n                  <div className=\"TreatmentSearch_1_2_3\" onClick={outerFilter}>\r\n                    외용\r\n                  </div>\r\n                  <div className=\"TreatmentSearch_1_2_4\" onClick={injectionFilter}>\r\n                    주사\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"TreatmentSearch_2_Totaltable\">\r\n                <table className=\"table TreatmentSearch_2\">\r\n                  <thead className=\"TreatmentSearch_2_2\">\r\n                    <tr>\r\n                      <th></th>\r\n                      <th>약품/주사코드</th>\r\n                      <th>약품/주사명</th>\r\n                      <th>구분</th>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody>\r\n                    {selectedDrugCategory === \"검색\" ?\r\n                      keywordDrugList.map((drug, index) => {\r\n                        return (\r\n                          <tr className=\"TreatmentSearch_2_2_tr\" key={drug.drug_injection_list_id}\r\n                            onClick={() => handleCheckDrugClick(drug.indexId)}\r\n\r\n                          >\r\n                            <td>\r\n                              <input type=\"checkbox\"\r\n                                name=\"selectedDrug\"\r\n                                checked={checkDrugList[drug.indexId].checked}\r\n                                value={drug.drug_injection_list_id}\r\n                                readOnly\r\n                              />\r\n                            </td>\r\n                            <th>{drug.drug_injection_list_id}</th>\r\n                            <th>{drug.drug_injection_list_name}</th>\r\n                            <th>{drug.drug_injection_list_category}</th>\r\n                          </tr>\r\n                        );\r\n                      }\r\n                      )\r\n                      :\r\n                      (selectedDrugCategory === \"\" ?\r\n                        (totalDrug.map((drug, index) => {\r\n                          return (\r\n                            <tr className=\"TreatmentSearch_2_2_tr\" key={drug.drug_injection_list_id}\r\n                              onClick={() => handleCheckDrugClick(drug.indexId)}\r\n                            >\r\n                              <td>\r\n                                <input type=\"checkbox\"\r\n                                  name=\"selectedDrug\"\r\n                                  checked={checkDrugList[drug.indexId].checked}\r\n                                  value={drug.drug_injection_list_id}\r\n                                  readOnly\r\n\r\n                                />\r\n                              </td>\r\n                              <th>{drug.drug_injection_list_id}</th>\r\n                              <th>{drug.drug_injection_list_name}</th>\r\n                              <th>{drug.drug_injection_list_category}</th>\r\n                            </tr>\r\n                          );\r\n                        })\r\n                        )\r\n                        :\r\n                        (\r\n                          totalDrug.map((drug, index) => {\r\n                            if (drug.drug_injection_list_category === selectedDrugCategory) {\r\n                              return (\r\n                                <tr className=\"TreatmentSearch_2_2_tr\" key={drug.drug_injection_list_id}\r\n                                  onClick={() => handleCheckDrugClick(drug.indexId)}\r\n                                >\r\n                                  <td>\r\n                                    <input type=\"checkbox\"\r\n                                      name=\"selectedDrug\"\r\n                                      checked={checkDrugList[drug.indexId].checked}\r\n                                      value={drug.drug_injection_list_id}\r\n                                      readOnly\r\n                                    />\r\n                                  </td>\r\n                                  <th>{drug.drug_injection_list_id}</th>\r\n                                  <th>{drug.drug_injection_list_name}</th>\r\n                                  <th>{drug.drug_injection_list_category}</th>\r\n                                </tr>\r\n                              );\r\n                            }\r\n                          }\r\n                          )\r\n                        )\r\n\r\n\r\n                      )\r\n                    }\r\n                  </tbody>\r\n                </table>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default TreatmentCreateForm;","import React, { useState, useEffect } from \"react\";\r\nimport TreatmentHistoryRead from \"./components/modal/TreatmentHistoryReadModal\";\r\nimport { getTreatmentHistoryList } from \"apis/treatments\";\r\nimport moment from \"moment\";\r\nimport Spinner from \"components/common/Spinner\";\r\nimport Nodata from \"components/common/NoData\";\r\n\r\nfunction TreatmentHistoryList(props) {\r\n//true 일때, 바코드 모달 열림\r\nconst [modalOpen, setModalOpen] = useState(false);\r\n// spinner\r\nconst [loading, setLoading] = useState(false);\r\n\r\n  //임시 환자 리스트\r\n  var tempPatientlist = {\r\n    treatment_register_id: \"\",\r\n    treatment_state: \"\",\r\n    treatment_patient_id: \"\",\r\n    patient_name: \"  \",\r\n    patient_ssn: \"\",\r\n    patient_sex: \"\",\r\n    register_communication: \"\",\r\n    register_starttime: \"\",\r\n  };\r\n\r\n  //대기환자리스트에서 체크된 환자 리스트 가져오기 -> props.checkedpatient == checkedPatientlist\r\n  var checkedPatientlist;\r\n  if (props.checkedpatient) {\r\n    checkedPatientlist = props.checkedpatient;\r\n  } else {\r\n    checkedPatientlist = tempPatientlist;\r\n  }\r\n\r\n  //진료 기록 생성 상태로\r\n  const [historyLists, setHistoryLists] = useState([]);\r\n  //선택된 진료 번호\r\n  const [selectedTreatmentId, setSelectedTreatmentId] = useState(\"\");\r\n\r\n  //선택한 진료 번호를 setSelectedTreatmentId 에 저장\r\n  // 해당 진료 번호 선택 => 해당 진료 상세 열기\r\n  const checkedtreatment = (treatment_id) => {\r\n    setSelectedTreatmentId(treatment_id);\r\n    setModalOpen(true);\r\n \r\n  };\r\n\r\n  //모달 안에서 취소 버튼 클릭\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n \r\n  //DB treatments 에서 환자아이디에 해당하는 진료기록 전부를 가져옴\r\n  const getList = async (treatment_patient_id) => {\r\n    setLoading(true);\r\n    try {\r\n      var list = await getTreatmentHistoryList(treatment_patient_id);\r\n      setHistoryLists(list.data.historylist);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(checkedPatientlist.treatment_patient_id){\r\n      getList(checkedPatientlist.treatment_patient_id);\r\n    }\r\n  }, [checkedPatientlist.treatment_patient_id, props]);\r\n\r\n  useEffect(() => {\r\n    setSelectedTreatmentId();\r\n  }, [checkedPatientlist.treatment_id]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"TreatmentHistoryList_title\">\r\n        {checkedPatientlist.patient_name} 님의 진료기록\r\n        <React.Fragment>\r\n          {/* TreatmentHistoryRead에 선택한 진료 번호 보내기 selectedTreatmentId */}\r\n          <TreatmentHistoryRead open={modalOpen} close={closeModal} selectedTreatmentId={selectedTreatmentId}></TreatmentHistoryRead>\r\n        </React.Fragment>\r\n      </div>\r\n      <div className=\"TreatmentHistoryList_border border\">\r\n        <div className=\"TreatmentHistoryList_Totaltable\">\r\n          <table className=\"table TreatmentHistoryList_table\">\r\n            <thead className=\"TreatmentHistoryList_table_thead\">\r\n              <tr>\r\n                <th></th>\r\n                <th>진료 번호</th>\r\n                <th>진료 날짜</th>\r\n                <th>담당의</th>\r\n                <th>의사소통 메모</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {loading ? (\r\n                <Spinner />\r\n              ) : historyLists.length === 0 ? (\r\n                <td colSpan=\"5\">\r\n                  <React.Fragment>\r\n                    <Nodata />\r\n                  </React.Fragment>\r\n                </td>\r\n              ) : (\r\n                <> \r\n                  {historyLists.map((treatmentHistory) => {\r\n                    return (\r\n                      <tr className=\"TreatmentHistoryList_table_tr\" key={treatmentHistory.treatment_id} onClick={(event) => checkedtreatment(treatmentHistory.treatment_id)}>\r\n                        <td>\r\n                          <input type=\"checkbox\" checked={selectedTreatmentId === treatmentHistory.treatment_id ? true : false} readOnly />\r\n                        </td>\r\n                        <th>{treatmentHistory.treatment_id}</th>\r\n                        <th>{moment(treatmentHistory.treatment_date).format(\"yyyy-MM-DD\")}</th>\r\n                        <th>{treatmentHistory.user_name}</th>\r\n                        <th>{treatmentHistory.treatment_communication}</th>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default TreatmentHistoryList;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { getTreatmentPatientList } from \"apis/treatments\";\r\nimport moment from \"moment\";\r\nimport Spinner from \"components/common/Spinner\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nimport Nodata from \"components/common/NoData\";\r\n\r\nfunction TreatmentPatientList(props) {\r\n  \r\n  /**\r\n   * 상태선언\r\n   */\r\n  //부모에서 생성한 환자 리스트, 체크된환자정보 담을 상태\r\n  const { setCheckedpatient, message } = props;\r\n\r\n  //로그인한 User의 id\r\n  const globalUid = useSelector((state) => state.authReducer.uid);\r\n\r\n  //환자 대기 목록 상태\r\n  const [patientlists, setPatientlists] = useState([]);\r\n\r\n  //처음 받는 날짜\r\n  const [inputdate, setInputdate] = useState(new Date());\r\n\r\n  //선택한 날짜\r\n  const [inputdate2, setInputdate2] = useState(new Date());\r\n\r\n  // 접수아이디 선택 상태\r\n  const [selectedRegisterId, setSelectedRegisterId] = useState(\"\");\r\n\r\n  // const [state, setState] = useState(() => getState(patientlists));\r\n\r\n  //진료 상태(대기,완료)\r\n  const [ready, setReady] = useState(0);\r\n  const [done, setDone] = useState(0);\r\n\r\n  // spinner\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  //실행 함수--------------------------------\r\n\r\n  //DB 에서 선택 날짜와 userid에 맞는 해당 환자 리스트 가져오기\r\n  const getList = async (inputdate2, globalUid) => {\r\n    setLoading(true);\r\n    try {\r\n      const list = await getTreatmentPatientList(moment(inputdate2).format(\"yyyy-MM-DD\"), globalUid,\"\");\r\n      // console.log(list.data.treatmentlist);\r\n      setPatientlists(list.data.treatmentlist);\r\n      getState(list.data.treatmentlist);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //진료 상태 수 계산\r\n  const getState = (patientlists) => {\r\n    var readyState = 0;\r\n    var doneState = 0;\r\n    for (var i = 0; i < patientlists.length; i++) {\r\n      if (patientlists[i].treatment_state === \"대기\") {\r\n        readyState++;\r\n      } else {\r\n        doneState++;\r\n      }\r\n    }\r\n    setReady(readyState);\r\n    setDone(doneState);\r\n  };\r\n\r\n//버튼 이벤트 처리---------------------------------------------------\r\n\r\n  //선택한 날짜 이동 버튼\r\n  const searchDateBtn = (date) => {\r\n    setInputdate2(date);\r\n    // getPatient2(treatmentDate2);\r\n  };\r\n\r\n  //진료대기 환자 선택 함수\r\n  const checkedtreatmentPatient = (treatment_register_id, patientlist) => {\r\n    setSelectedRegisterId(treatment_register_id);\r\n    //선택된 환자 정보 리스트\r\n    setCheckedpatient(patientlist);\r\n  };\r\n\r\n  //필터 - 전체 환자\r\n  const totalFilter = async () => {\r\n    setLoading(true);\r\n    try {\r\n      var list = await getTreatmentPatientList(moment(inputdate2).format(\"yyyy-MM-DD\"), globalUid, \"\");\r\n      setPatientlists(list.data.treatmentlist);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n //필터 - 대기 환자\r\n  const readyFilter = async () => {\r\n    setLoading(true);\r\n    try {\r\n      var list = await getTreatmentPatientList(moment(inputdate2).format(\"yyyy-MM-DD\"), globalUid, \"대기\");\r\n      setPatientlists(list.data.treatmentlist);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n //필터 - 완료 환자\r\n  const finishFilter = async () => {\r\n    setLoading(true);\r\n    try {\r\n      var list = await getTreatmentPatientList(moment(inputdate2).format(\"yyyy-MM-DD\"), globalUid, \"완료\");\r\n      setPatientlists(list.data.treatmentlist);\r\n    } catch (e) {\r\n      console.log(e);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 마운트 및 언마운트에 실행할 내용------------------------------------\r\n\r\n  useEffect(() => {\r\n    const work = async () => {\r\n      setLoading(true);\r\n      try {\r\n        var list = await getTreatmentPatientList(moment(inputdate2).format(\"yyyy-MM-DD\"), globalUid, \"\");\r\n        setPatientlists(list.data.treatmentlist);\r\n        getState(list.data.treatmentlist);\r\n        //getList(inputdate2,globalUid);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    work();\r\n  }, [inputdate2]);\r\n\r\n  useEffect(() => {\r\n    getList(inputdate2,globalUid);\r\n  }, [inputdate2]);\r\n\r\n  useEffect(() => {\r\n    const work = async () => {\r\n      setLoading(true);\r\n      try {\r\n        var list = await getTreatmentPatientList(moment(inputdate2).format(\"yyyy-MM-DD\"), globalUid, \"\");\r\n        setPatientlists(list.data.treatmentlist);\r\n        getState(list.data.treatmentlist);\r\n      } catch (error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    if (message.content === \"addTreatments\") {\r\n      ToastsStore.success(\"접수 완료\");\r\n      work();\r\n    } else if (message.content === \"refreshTreatments\") {\r\n      // ToastsStore.success(\"업데이트 완료\");\r\n      work();\r\n    } else {\r\n    }\r\n  }, [message]);\r\n\r\n  \r\n  return (\r\n    <div>\r\n      <div className=\"TreatmentPatientList_title\">진료대기환자</div>\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n      <div className=\"TreatmentPatientList_border border\">\r\n        <div className=\"TreatmentPatientList_search\">\r\n          {/* <input type=\"date\" DatePicker selected={inputdate} onChange={(date) => setInputdate(date)} /> */}\r\n          <DatePicker locale=\"ko\" dateFormat=\"yyyy.MM.dd\" selected={inputdate} onChange={(date) => setInputdate(date)} />\r\n          <button className=\"button_team2_fill\" onClick={() => searchDateBtn(inputdate)}>\r\n            이동\r\n          </button>\r\n          <div className=\"row_1\" onClick={totalFilter}>\r\n            전체:{ready + done}명\r\n          </div>\r\n          <div className=\"row_2\" onClick={readyFilter}>\r\n            대기:{ready}명\r\n          </div>\r\n          <div className=\"row_3\" onClick={finishFilter}>\r\n            완료:{done}명\r\n          </div>\r\n        </div>\r\n        <div className=\"TreatmentPatientList_Totaltable\">\r\n          <table className=\"table TreatmentPatientList_table\">\r\n            <thead className=\"TreatmentPatientList_table_thead\">\r\n              <tr>\r\n                <th width=\"1%\"></th>\r\n                <th width=\"5%\">번호</th>\r\n                <th width=\"10%\">환자명</th>\r\n                <th width=\"10%\">생년월일</th>\r\n                <th width=\"6%\">성별</th>\r\n                <th width=\"10%\">진료번호</th>\r\n                <th width=\"15%\">의사소통 메모</th>\r\n                <th width=\"15%\">접수 날짜</th>\r\n                <th width=\"7%\">상태</th>\r\n              </tr>\r\n            </thead>\r\n\r\n            <tbody>\r\n              {loading ? (\r\n                <Spinner />\r\n              ) : patientlists.length === 0 ? (\r\n                <td colSpan=\"9\">\r\n                  <React.Fragment>\r\n                    <Nodata />\r\n                  </React.Fragment>\r\n                </td>\r\n              ) : (\r\n                <>\r\n                  {patientlists.map((patientlist) => {\r\n                    return (\r\n                      <tr\r\n                        className=\"TreatmentPatientList_table_tr\"\r\n                        key={patientlist.treatment_register_id}\r\n                        onClick={(event) => checkedtreatmentPatient(patientlist.treatment_register_id, patientlist)}\r\n                      >\r\n                        <td>\r\n                          <input type=\"checkbox\" checked={selectedRegisterId === patientlist.treatment_register_id ? true : false} readOnly />\r\n                        </td>\r\n                        <td>{patientlist.treatment_register_id}</td>\r\n                        <td>{patientlist.patient_name}</td>\r\n                        <td>{patientlist.patient_ssn}</td>\r\n                        <td>{patientlist.patient_sex}</td>\r\n                        <td>{patientlist.treatment_id}</td>\r\n                        <td>{patientlist.register_communication}</td>\r\n                        <td>{moment(patientlist.register_starttime).format(\"yyyy-MM-DD\")}</td>\r\n                        {patientlist.treatment_state === \"대기\" ? <td className=\"row_2\">{patientlist.treatment_state}</td> : <td className=\"row_3\">{patientlist.treatment_state}</td>}\r\n                      </tr>\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default TreatmentPatientList;\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport \"./Treatment.css\";\r\nimport TreatmentCreateForm from \"./TreatmentCreateForm\";\r\nimport TreatmentHistoryList from \"./TreatmentHistoryList\";\r\nimport TreatmentPatientList from \"./TreatmentPatientList\";\r\nimport Paho from \"paho-mqtt\";\r\nimport { sendMqttMessage } from \"apis/mqtt\";\r\n\r\nfunction Treatment(props) {\r\n  // -------------------------------------------------------------\r\n  // MQTT 설정 : 메시지 종류\r\n  // -------------------------------------------------------------\r\n\r\n  // 1. 리스트 호출 - nurse -> docter\r\n  // { topic: \"/138010/docter\", content: \"refreshTreatments\"}\r\n  // 2. 검사 추가   - doctor -> inspector\r\n  // { topic: \"/138010/inspector\", content: \"addInspections\"}\r\n  // 3.  추가\r\n  // { topic: \"/138010/doctor\", content: \"refreshToDoList\"}\r\n\r\n  //-------------------------------------------------------------\r\n  //MQTT 설정 : 상태 선언\r\n  //-------------------------------------------------------------\r\n  const [subTopic, setSubTopic] = useState([\"/138010/nurse/doctor\"]); // 병원코드/간호사/의사\r\n  const [prevSubTopic, setPrevSubTopic] = useState(\"/138010/nurse\"); // 병원코드/간호사\r\n  const [pubMessage, setPubMessage] = useState([\r\n    {\r\n      topic: \"/138010/nurse/doctor\",\r\n      content: \"refreshTreatments\",\r\n    },\r\n    {\r\n      topic: \"/138010/nurse/doctor/inspector\",\r\n      content: \"addInspections\",\r\n    },\r\n  ]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  //-------------------------------------------------------------\r\n  //버튼 이벤트 처리\r\n  //-------------------------------------------------------------\r\n  let client = useRef(null);\r\n  const connectMqttBroker = () => {\r\n    // Paho.Mqtt.Client x\r\n    client.current = new Paho.Client(\"kosa3.iptime.org\", 50012, \"client-\" + new Date().getTime());\r\n    // client.current = new Paho.Client(\"localhost\", 61614, \"client-\" + new Date().getTime());\r\n\r\n    client.current.onConnectionLost = () => {\r\n      console.log(\"Mqtt 접속 끊김\");\r\n    };\r\n\r\n    client.current.onMessageArrived = (msg) => {\r\n      //  console.log(\"메시지 수신\");\r\n      var Jmessage = JSON.parse(msg.payloadString);\r\n      console.log(Jmessage);\r\n      setMessage(() => {\r\n        return Jmessage;\r\n      });\r\n    };\r\n\r\n    client.current.connect({\r\n      onSuccess: () => {\r\n        console.log(\"mqtt 들어옴\");\r\n        sendSubTopic();\r\n        //client.current.subscribe(subTopic[0]);\r\n        console.log(\"Mqtt 접속 성공\");\r\n      },\r\n    });\r\n  };\r\n\r\n  const disconnectMqttBroker = () => {\r\n    client.current.disconnect(); // onConnectionLost 실행됨\r\n  };\r\n\r\n  const sendSubTopic = () => {\r\n    client.current.unsubscribe(prevSubTopic);\r\n    client.current.subscribe(subTopic);\r\n    setPrevSubTopic(subTopic);\r\n  };\r\n\r\n  const publishTopic = async (num) => {\r\n    await sendMqttMessage(pubMessage[num]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectMqttBroker();\r\n    // console.log(\"MESSAGE\",message);\r\n  }, []);\r\n\r\n  //진료 대기리스트에서 체크된 환자 정보\r\n  const [checkedpatient, setCheckedpatient] = useState(\"\");\r\n\r\n  return (\r\n    <div className=\"Treatment\">\r\n      <div className=\"TreatmentLeft\">\r\n        {/* 진료 대기 환자 */}\r\n        <div className=\"TreatmentPatientList\">\r\n          <TreatmentPatientList setCheckedpatient={setCheckedpatient} message={message} />\r\n        </div>\r\n        {/* 진료 기록 */}\r\n        <div className=\"TreatmentHistoryList\">\r\n          <TreatmentHistoryList checkedpatient={checkedpatient} />\r\n        </div>\r\n      </div>\r\n      <div className=\"TreatmentRight\">\r\n        {/* 진료 등록*/}\r\n        <div className=\"TreatmentCreateForm\">\r\n          <TreatmentCreateForm checkedpatient={checkedpatient} publishTopic={publishTopic} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Treatment;\r\n","import { useEffect } from \"react\";\r\nimport { updateIstateI, updateIstateC, updateIstateW } from \"apis/inspections\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\n\r\nfunction InspectionPatientListItem(props) {\r\n  \r\n  ////////////////////////////////////////////////////////////\r\n\r\n  //총검사상태: 대기~>검사 변경\r\n  const changeIStateInspection = async () => {\r\n    try {\r\n      if (props.patient.treatment_id === props.id) {\r\n        if (props.patient.treatment_istate === \"대기\") {\r\n          //props.patient.treatment_istate = \"검사\";\r\n          await updateIstateI(props.id);\r\n        }\r\n      }\r\n      props.handleIStateInspectionFalse();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //총검사상태: 검사~>완료 변경\r\n  const changeIStateFinish = async () => {\r\n    try {\r\n      if (props.patient.treatment_id === props.id) {\r\n        if (props.patient.treatment_istate === \"검사\") {\r\n          //props.patient.treatment_istate = \"완료\";\r\n          await updateIstateC(props.id);\r\n          props.handleIStateFinishFalse();\r\n          props.publishTopic(1);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //총검사상태: 검사~>대기 변경\r\n  const changeIStateWait = async () => {\r\n    try {\r\n      if (props.patient.treatment_id === props.id) {\r\n        if (props.patient.treatment_istate === \"검사\") {\r\n          //props.patient.treatment_istate = \"대기\";\r\n          await updateIstateW(props.id);\r\n        }\r\n      }\r\n      props.handleIStateWaitFalse();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  useEffect(() => {\r\n    if (props.iStateInspection === true) {\r\n      changeIStateInspection();\r\n    }\r\n  }, [props.iStateInspection]);\r\n\r\n  useEffect(() => {\r\n    if (props.iStateFinish === true && props.message.content === \"updateInspects\") {\r\n      changeIStateFinish();\r\n    }\r\n  }, [props.iStateFinish]);\r\n\r\n  useEffect(() => {\r\n    if (props.iStateWait === true) {\r\n      changeIStateWait();\r\n    }\r\n  }, [props.iStateWait]);\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <>\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n      <tr\r\n        className=\"InspectionPatientListItem\"\r\n        key={props.patient.treatment_id}\r\n        onClick={() => {props.handleChecked(props.patient.treatment_id);}}\r\n      >\r\n        <td>\r\n          <input type=\"checkbox\" name=\"treatmentCheck\" checked={props.id === props.patient.treatment_id ? true : false} readOnly />\r\n        </td>\r\n        <td>{props.patient.treatment_id}</td>\r\n        <td>{props.patient.patient_name}</td>\r\n        <td>{props.patient.patient_ssn.split(\"-\")[0]}</td>\r\n        <td>{props.patient.patient_sex}</td>\r\n        {props.patient.treatment_istate === \"대기\" ? (\r\n          <td style={{ color: \"#009900\" }}>{props.patient.treatment_istate}</td>\r\n        ) : props.patient.treatment_istate === \"검사\" ? (\r\n          <td style={{ color: \"#ff6600\" }}>{props.patient.treatment_istate}</td>\r\n        ) : (\r\n          <td style={{ color: \"#00AAF0\" }}>{props.patient.treatment_istate}</td>\r\n        )}\r\n\r\n        <td>{props.patient.treatment_communication}</td>\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InspectionPatientListItem;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport moment from \"moment\";\r\nimport InspectionPatientListItem from \"./InspectionPatientListItem\";\r\nimport { readPatient } from \"apis/inspections\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nimport Nodata from \"components/common/NoData\";\r\n\r\nlet patientsList = [];\r\n\r\nfunction InspectionPatientList(props) {\r\n  //DatePicker 날짜\r\n  const [treatmentDate, setTreatmentDate] = useState(new Date());\r\n  //이동 버튼 누를 때의 날짜\r\n  const [treatmentDate2, setTreatmentDate2] = useState(new Date());\r\n  //검사 대기 환자 목록\r\n  const [patients, setPatients] = useState(patientsList);\r\n  //총검사상태 대기 명 수\r\n  const [istateWaiting, setIstateWaiting] = useState(getIstateWaiting(patients));\r\n  //총검사상태 검사 명 수\r\n  const [istateInspection, setIstateInspection] = useState(getIstateInspection(patients));\r\n  //총검사상태 완료 명 수\r\n  const [istateCompletion, setIstateCompletion] = useState(getIstateCompletion(patients));\r\n  // 진료번호 비교를 위한 상태\r\n  const [id, setId] = useState(\"\");\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  //DB Treatments 에서 해당 진료날짜에 진료완료된 환자 목록 가져옴\r\n  const getPatient = async (treatmentDate2) => {\r\n    try {\r\n      const response = await readPatient(moment(treatmentDate2).format(\"yyyy-MM-DD HH:mm\"), \"\");\r\n      patientsList = response.data.treatmentList;\r\n      setPatients(patientsList);\r\n      checkIState(patientsList);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //날짜 이동 버튼\r\n  const searchDateBtn = (treatmentDate) => {\r\n    setTreatmentDate2(treatmentDate);\r\n  };\r\n\r\n  //진료완료된 환자 체크(선택)\r\n  const handleChecked = (treatmentId) => {\r\n    setId(treatmentId);\r\n    props.checkedtId(treatmentId);\r\n  };\r\n\r\n  //총검사상태 (대기, 검사, 완료) 명 수 세기\r\n  const checkIState = (patients) => {\r\n    setIstateWaiting(getIstateWaiting(patients));\r\n    setIstateInspection(getIstateInspection(patients));\r\n    setIstateCompletion(getIstateCompletion(patients));\r\n  };\r\n\r\n  function getIstateWaiting(patients) {\r\n    let countWaiting = 0;\r\n    for (var i = 0; i < patients.length; i++) {\r\n      if (patients[i].treatment_istate === \"대기\") {\r\n        countWaiting++;\r\n      }\r\n    }\r\n    return countWaiting;\r\n  }\r\n\r\n  function getIstateInspection(patients) {\r\n    let countInspection = 0;\r\n    for (var i = 0; i < patients.length; i++) {\r\n      if (patients[i].treatment_istate === \"검사\") {\r\n        countInspection++;\r\n      }\r\n    }\r\n    return countInspection;\r\n  }\r\n\r\n  function getIstateCompletion(patients) {\r\n    let countCompletion = 0;\r\n    for (var i = 0; i < patients.length; i++) {\r\n      if (patients[i].treatment_istate === \"완료\") {\r\n        countCompletion++;\r\n      }\r\n    }\r\n    return countCompletion;\r\n  }\r\n\r\n  //전체 명수 클릭 시, 해당 진료날짜에 진료완료된 모든 환자 목록 가져옴\r\n  const showTotal = async (treatmentDate2) => {\r\n    try {\r\n      const response = await readPatient(moment(treatmentDate2).format(\"yyyy-MM-DD HH:mm\"), \"\");\r\n      patientsList = response.data.treatmentList;\r\n      setPatients(patientsList);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //대기 명수 클릭 시, 해당 진료날짜에 진료완료된 환자들 중 총검사상태가 대기인 환자 목록 가져옴\r\n  const showReady = async (treatmentDate2) => {\r\n    try {\r\n      const response = await readPatient(moment(treatmentDate2).format(\"yyyy-MM-DD HH:mm\"), \"대기\");\r\n      patientsList = response.data.treatmentList;\r\n      setPatients(patientsList);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //검사 명수 클릭 시, 해당 진료날짜에 진료완료된 환자들 중 총검사상태가 검사인 환자 목록 가져옴\r\n  const showInspection = async (treatmentDate2) => {\r\n    try {\r\n      const response = await readPatient(moment(treatmentDate2).format(\"yyyy-MM-DD HH:mm\"), \"검사\");\r\n      patientsList = response.data.treatmentList;\r\n      setPatients(patientsList);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //완료 명수 클릭 시, 해당 진료날짜에 진료완료된 환자들 중 총검사상태가 대기인 완료 목록 가져옴\r\n  const showFinish = async (treatmentDate2) => {\r\n    try {\r\n      const response = await readPatient(moment(treatmentDate2).format(\"yyyy-MM-DD HH:mm\"), \"완료\");\r\n      patientsList = response.data.treatmentList;\r\n      setPatients(patientsList);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  useEffect(() => {\r\n    getPatient(treatmentDate2);\r\n  }, [props]);\r\n\r\n  useEffect(() => {\r\n    getPatient(treatmentDate2);\r\n  }, [treatmentDate2]);\r\n\r\n  useEffect(() => {\r\n    if (props.message.content === \"iStateInspections\") {\r\n      ToastsStore.success(\"검사가 완료 되었습니다.\");\r\n      getPatient(treatmentDate2);\r\n    }\r\n\r\n    if (props.message.content === \"addInspections\") {\r\n      ToastsStore.success(\"검사 대기 환자가 추가 되었습니다.\");\r\n      getPatient(treatmentDate2);\r\n    }\r\n  }, [props.message]);\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <div className=\"InspectionPatientList\">\r\n      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n      <div className=\"InspectionPatientList_title\">검사 대기 환자</div>\r\n      <div className=\"InspectionPatientList_1 border\">\r\n        <div className=\"InspectionPatientList_1_1 mb-2\">\r\n          <div className=\"InspectionPatientList_1_2_1 p-0\">\r\n            <DatePicker locale=\"ko\" dateFormat=\"yyyy.MM.dd\" selected={treatmentDate} onChange={(date) => setTreatmentDate(date)} />\r\n          </div>\r\n          <div className=\"InspectionPatientList_1_2_2\">\r\n            <button className=\"button_team2_fill\" onClick={() => searchDateBtn(treatmentDate)}>\r\n              이동\r\n            </button>\r\n          </div>\r\n          <div className=\"InspectionPatientList_1_2_3 p-0\">\r\n            <div className=\"InspectionPatientList_1_3_0\" onClick={() => showTotal(treatmentDate2)}>\r\n              전체:{istateWaiting + istateInspection + istateCompletion}명\r\n            </div>\r\n            <div className=\"InspectionPatientList_1_3_1\" onClick={() => showReady(treatmentDate2)}>\r\n              대기:{istateWaiting}명\r\n            </div>\r\n            <div className=\"InspectionPatientList_1_3_2\" onClick={() => showInspection(treatmentDate2)}>\r\n              검사:{istateInspection}명\r\n            </div>\r\n            <div className=\"InspectionPatientList_1_3_3\" onClick={() => showFinish(treatmentDate2)}>\r\n              완료:{istateCompletion}명\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"InspectionPatientList_list\">\r\n          <table className=\"table InspectionPatientList_2_1\" style={{ height: \"10px\" }}>\r\n            <thead className=\"InspectionPatientList_2_2\">\r\n              <tr>\r\n                <th></th>\r\n                <th>진료 번호</th>\r\n                <th>환자명</th>\r\n                <th>생년월일</th>\r\n                <th>성별</th>\r\n                <th>상태</th>\r\n                <th>의사소통메모</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {patients.length === 0 ? (\r\n                <td colSpan=\"7\">\r\n                  <React.Fragment>\r\n                    <Nodata />\r\n                  </React.Fragment>\r\n                </td>\r\n              ) : (\r\n                <>\r\n                  {patients.map((patient) => {\r\n                    return (\r\n                      <InspectionPatientListItem\r\n                        key={patient.treatment_id}\r\n                        patient={patient}\r\n                        id={id}\r\n                        handleChecked={(treatmentId) => handleChecked(treatmentId)}\r\n                        iStateInspection={props.iStateInspection}\r\n                        handleIStateInspectionFalse={props.handleIStateInspectionFalse}\r\n                        iStateFinish={props.iStateFinish}\r\n                        handleIStateFinishFalse={props.handleIStateFinishFalse}\r\n                        iStateWait={props.iStateWait}\r\n                        handleIStateWaitFalse={props.handleIStateWaitFalse}\r\n                        message={props.message}\r\n                        publishTopic={props.publishTopic}\r\n                      />\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InspectionPatientList;\r\n","import React from \"react\";\r\nimport style from \"./InspectionBarcodeModal.module.css\";\r\nimport Barcode from \"react-barcode\";\r\n\r\nfunction InspectionBarcodeModal(props) {\r\n  const { open, closeCheck, closeCancel, inspectionListName, patientName, inspectionInspectorName } = props;\r\n\r\n  const barcode = props.tid + props.inspectionListSpecimen + props.id + props.inspectionListContainer;\r\n\r\n  return (\r\n    <div className={style.InspectionModal}>\r\n      <div className={open ? `${style.openModal} ${style.modal}` : `${style.modal}`}>\r\n        {open ? (\r\n          <section>\r\n            <div className={style.InspectionBarcodePop}>\r\n              <div className={style.InspectionBarcodePop_title}>바코드 출력</div>\r\n              <div className={`${style.InspectionBarcodePop_1} border`}>\r\n                <div className={`${style.InspectionBarcodePop_1_1} m-3`}>\r\n                  <Barcode value={barcode} renderer={\"img\"} />\r\n                </div>\r\n                <div className={`${style.InspectionBarcodePop_1_2} border`}>\r\n                  <div className=\"mr-3 ml-3\">\r\n                    <div className=\"mb-3\">검사번호 :</div>\r\n                    <div className=\"mb-3\">검사명 :</div>\r\n                    <div className=\"mb-3\">피검사자 :</div>\r\n                    <div>검사자 :</div>\r\n                  </div>\r\n                  <div>\r\n                    <div className=\"mb-3\">{props.id}</div>\r\n                    <div className=\"mb-3\">{inspectionListName}</div>\r\n                    <div className=\"mb-3\">{patientName}</div>\r\n                    <div>{inspectionInspectorName}</div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className={`${style.InspectionBarcodePop_1_3} mb-3 mt-3`}>\r\n                <button className=\"button_team2_fill\" onClick={closeCheck}>\r\n                  확인\r\n                </button>\r\n                <button className=\"button_team2_empty\" onClick={closeCancel}>\r\n                  취소\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InspectionBarcodeModal;\r\n","import { useRef, useState } from \"react\";\r\nimport style from \"./InspectionImgCreateFormModal.module.css\";\r\nimport { deleteImage, createImage } from \"apis/inspections\";\r\n\r\nfunction InspectionImgCreateFormModal(props) {\r\n  //영상검사 이미지 결과\r\n  const [inspectionImgResult, setInspecctionImgResult] = useState(props.inspection);\r\n  //모달 열기, 등록, 닫기 props\r\n  const { open, closeR, close } = props;\r\n  //첨부파일\r\n  const inputFile = useRef();\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  //등록 버튼\r\n  //유효성검사 후, DB Inspection_Imgs 에서 해당 검사번호를 가진 검사이미지 생성\r\n  const inspectionImgResultBtn = async (event) => {\r\n    event.preventDefault();\r\n\r\n    var maxSize = 1 * 1024 * 1024;\r\n    var sizeIndex = 0;\r\n    var size = true;\r\n\r\n    var typeIndex = 0;\r\n    var type = true;\r\n\r\n    //첨부파일들이 이미지파일인지, 파일사이즈가 1MB를 넘지 않는지 체크 \r\n    for (var i = 0; i <= inputFile.current.files.length - 1; i++) {\r\n      if (inputFile.current.files[i].type.substring(0, inputFile.current.files[i].type.lastIndexOf(\"/\")) !== \"image\") {\r\n        type = false;\r\n        typeIndex = i;\r\n        break;\r\n      }\r\n\r\n      if (inputFile.current.files[i].size >= maxSize) {\r\n        size = false;\r\n        sizeIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (inputFile.current.files.length === 0) {\r\n      alert(\"첨부파일이 없습니다.\");\r\n    } else if (!type) {\r\n      alert(typeIndex + 1 + \"번째 첨부파일이 이미지파일이 아닙니다.\");\r\n    } else if (inputFile.current.files.length >= 5) {\r\n      alert(\"첨부파일은 최대 4개까지 선택할 수 있습니다.\");\r\n    } else if (!size) {\r\n      alert(sizeIndex + 1 + \"번째 첨부파일의 크기가 1MB를 초과했습니다.\");\r\n    } else {\r\n      try {\r\n        //삭제\r\n        await deleteImage(inspectionImgResult.inspection_id);\r\n        const formData = new FormData();\r\n        formData.append(\"inspection_img_inspection_id\", inspectionImgResult.inspection_id);\r\n        for (var i = 0; i <= inputFile.current.files.length - 1; i++) {\r\n          formData.append(\"inspection_img_attach\", inputFile.current.files[i]);\r\n        }\r\n        //생성\r\n        await createImage(formData);\r\n        // formData 콘솔 찍는 법\r\n        // for (let value of formData.values()) {\r\n        //   console.log(value);\r\n        // }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n      closeR();\r\n    }\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <div className={style.InspectionImgCreateModal}>\r\n      <div className={open ? `${style.openModal} ${style.modal}` : `${style.modal}`}>\r\n        {open ? (\r\n          <section>\r\n            <div className={style.InspectionImgCreateForm}>\r\n              <div className={`${style.InspectionImgCreateForm_title} m-2`}>검사 결과 등록</div>\r\n              <div className={`${style.InspectionImgCreateForm_1} border`}>\r\n                <form encType=\"multipartFormData\">\r\n                  <div className={`${style.InspectionImgCreateForm_1_1} mt-3 mb-3`}>\r\n                    <div className={`${style.InspectionImgCreateForm_1_1_1} mr-3`}>\r\n                      <div className=\"mb-1\">진단검사명 :</div>\r\n                      <div className=\"mb-1\">검사명 :</div>\r\n                      <div className=\"mb-1\">검사번호 :</div>\r\n                      <div className=\"mb-1\">담당의 :</div>\r\n                      <div className=\"mb-1\">검사자 :</div>\r\n                      <div className=\"mb-1\">검사실 :</div>\r\n                      <div>첨부파일 : </div>\r\n                      <div></div>\r\n                      <div></div>\r\n                    </div>\r\n                    <div className={style.InspectionImgCreateForm_1_1_2}>\r\n                      <div className=\"mb-1\">{inspectionImgResult.inspection_list_category}</div>\r\n                      <div className=\"mb-1\">{inspectionImgResult.inspection_list_name}</div>\r\n                      <div className=\"mb-1\">{props.id}</div>\r\n                      <div className=\"mb-1\">{inspectionImgResult.inspection_doctor_name}</div>\r\n                      <div className=\"mb-1\">{inspectionImgResult.inspection_inspector_name}</div>\r\n                      <div className=\"mb-1\">{inspectionImgResult.inspection_lab}</div>\r\n                      <div className=\"mb-1\">\r\n                        <input name=\"iattach\" type=\"file\" multiple style={{ width: \"100%\" }} ref={inputFile} accept=\"image/*\" />\r\n                      </div>\r\n                      <div className={`font-weight-lighter font-italic`}>\r\n                        <small>※최대 4개까지 선택 가능</small>\r\n                      </div>\r\n                      <div className={`font-weight-lighter font-italic`}>\r\n                        <small>※이미지파일 크기는 1MB 초과 불과</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={`${style.InspectionImgCreateForm_1_2} mb-3`}>\r\n                    <button type=\"submit\" className=\"button_team2_fill m-0\" onClick={inspectionImgResultBtn}>\r\n                      등록\r\n                    </button>\r\n                    <button className=\"button_team2_empty\" onClick={close}>\r\n                      닫기\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InspectionImgCreateFormModal;\r\n","import { useRef, useState } from \"react\";\r\nimport style from \"./InspectionImgModifyModal.module.css\";\r\nimport { createImage, deleteImage } from \"apis/inspections\";\r\n\r\nfunction InspectionImgCreateFormModal(props) {\r\n  //영상검사 이미지 결과\r\n  const [inspectionImgResult, setInspecctionImgResult] = useState(props.inspection);\r\n  //모달 열기, 수정, 닫기 props\r\n  const { open, closeM, close } = props;\r\n  //첨부파일\r\n  const inputFile = useRef();\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  //수정 버튼\r\n  //유효성검사 후, DB Inspection_Imgs 에서 해당 검사번호를 가진 검사이미지 삭제 + 새로운 검사이미지 생성\r\n  const inspectionImgResultBtn = async (event) => {\r\n    event.preventDefault();\r\n\r\n    var maxSize = 1 * 1024 * 1024;\r\n    var sizeIndex = 0;\r\n    var size = true;\r\n\r\n    var typeIndex = 0;\r\n    var type = true;\r\n\r\n    //첨부파일들이 이미지파일인지, 파일사이즈가 1MB를 넘지 않는지 체크\r\n    for (var i = 0; i <= inputFile.current.files.length - 1; i++) {\r\n      if (inputFile.current.files[i].type.substring(0, inputFile.current.files[i].type.lastIndexOf(\"/\")) !== \"image\") {\r\n        type = false;\r\n        typeIndex = i;\r\n        break;\r\n      }\r\n\r\n      if (inputFile.current.files[i].size >= maxSize) {\r\n        size = false;\r\n        sizeIndex = i;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (inputFile.current.files.length === 0) {\r\n      alert(\"첨부파일이 없습니다.\");\r\n    } else if (!type) {\r\n      alert(typeIndex + 1 + \"번째 첨부파일이 이미지파일이 아닙니다.\");\r\n    } else if (inputFile.current.files.length >= 5) {\r\n      alert(\"첨부파일은 최대 4개까지 선택할 수 있습니다.\");\r\n    } else if (!size) {\r\n      alert(sizeIndex + 1 + \"번째 첨부파일의 크기가 1MB를 초과했습니다.\");\r\n    } else {\r\n      try {\r\n        //삭제\r\n        await deleteImage(inspectionImgResult.inspection_id);\r\n        const formData = new FormData();\r\n        formData.append(\"inspection_img_inspection_id\", inspectionImgResult.inspection_id);\r\n        for (var i = 0; i <= inputFile.current.files.length - 1; i++) {\r\n          formData.append(\"inspection_img_attach\", inputFile.current.files[i]);\r\n        }\r\n        //생성\r\n        await createImage(formData);\r\n        // formData 콘솔 찍는 법\r\n        // for (let value of formData.values()) {\r\n        //   console.log(value);\r\n        // }\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n\r\n      closeM();\r\n    }\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <div className={style.InspectionImgModifyModal}>\r\n      <div className={open ? `${style.openModal} ${style.modal}` : `${style.modal}`}>\r\n        {open ? (\r\n          <section>\r\n            <div className={style.InspectionImgCreateForm}>\r\n              <div className={`${style.InspectionImgCreateForm_title} m-2`}>검사 결과 수정</div>\r\n              <div className={`${style.InspectionImgCreateForm_1} border`}>\r\n                <form encType=\"multipartFormData\">\r\n                  <div className={`${style.InspectionImgCreateForm_1_1} row m-3`}>\r\n                    <div className={`${style.InspectionImgCreateForm_1_1_1} mr-3`}>\r\n                      <div className=\"mb-1\">진단검사명 :</div>\r\n                      <div className=\"mb-1\">검사명 :</div>\r\n                      <div className=\"mb-1\">검사번호 :</div>\r\n                      <div className=\"mb-1\">담당의 :</div>\r\n                      <div className=\"mb-1\">검사자 :</div>\r\n                      <div className=\"mb-1\">검사실 :</div>\r\n                      <div>첨부파일 : </div>\r\n                      <div></div>\r\n                      <div></div>\r\n                    </div>\r\n                    <div className={style.InspectionImgCreateForm_1_1_2}>\r\n                      <div className=\"mb-1\">{inspectionImgResult.inspection_list_category}</div>\r\n                      <div className=\"mb-1\">{inspectionImgResult.inspection_list_name}</div>\r\n                      <div className=\"mb-1\">{props.id}</div>\r\n                      <div className=\"mb-1\">{inspectionImgResult.inspection_doctor_name}</div>\r\n                      <div className=\"mb-1\">{inspectionImgResult.inspection_inspector_name}</div>\r\n                      <div className=\"mb-1\">{inspectionImgResult.inspection_lab}</div>\r\n                      <div className=\"mb-1\">\r\n                        <input name=\"iattach\" type=\"file\" multiple style={{ width: \"100%\" }} ref={inputFile} accept=\"image/*\" />\r\n                      </div>\r\n                      <div className={`font-weight-lighter font-italic`}>\r\n                        <small>※최대 4개까지 선택 가능</small>\r\n                      </div>\r\n                      <div className={`font-weight-lighter font-italic`}>\r\n                        <small>※이미지파일 크기는 1MB 초과 불과</small>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className={`${style.InspectionImgCreateForm_1_2} mb-3`}>\r\n                    <button type=\"submit\" className=\"button_team2_fill m-0\" onClick={inspectionImgResultBtn}>\r\n                      수정\r\n                    </button>\r\n                    <button className=\"button_team2_empty\" onClick={close}>\r\n                      닫기\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </section>\r\n        ) : null}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InspectionImgCreateFormModal;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport InspectionImgFormModal from \"./components/modal/InspectionImgFormModal\";\r\nimport InspectionImgCreateFormModal from \"./components/modal/InspectionImgCreateFormModal\";\r\nimport InspectionImgModifyFormModal from \"./components/modal/InspectionImgModifyFormModal\";\r\nimport moment from \"moment\";\r\nimport { updateState, updateResult } from \"apis/inspections\";\r\n\r\nfunction InspectionListItem(props) {\r\n  //검사 결과\r\n  const [inspectionR, setInspectionR] = useState(props.inspection.inspection_result);\r\n  //true 일때, 영상검사 보기 모달 열림\r\n  const [imgModalOpen, setImgModalOpen] = useState(false);\r\n  //true 일때, 영상검사 수정 모달 열림\r\n  const [imgModifyModalOpen, setImgModifyModalOpen] = useState(false);\r\n  //true 일때, 영상검사 등록 모달 열림\r\n  const [imgCreateModalOpen, setImgCreateModalOpen] = useState(false);\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  //혈액검사 검사결과 입력\r\n  const handleResultChange = (event) => {\r\n    setInspectionR(event.target.value);\r\n  };\r\n\r\n  //혈액검사 등록 버튼\r\n  //DB Inspections 에서 해당 검사번호의 검사결과 수정\r\n  const inspectionRRegister = async (event) => {\r\n    if (inspectionR === \"\") {\r\n      alert(\"검사결과를 입력해주세요.\");\r\n    } else {\r\n      try {\r\n        props.inspection.inspection_result = inspectionR;\r\n        await updateResult(props.id, inspectionR);\r\n        setInspectionR();\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  //혈액검사 수정 버튼\r\n  //DB Inspections 에서 해당 검사번호의 검사결과 수정\r\n  const inspectionRModify = async (event) => {\r\n    if (inspectionR === \"\") {\r\n      alert(\"검사결과를 입력해주세요.\");\r\n    } else {\r\n      try {\r\n        props.inspection.inspection_result = inspectionR;\r\n        await updateResult(props.id, inspectionR);\r\n      } catch (error) {\r\n        console.log(error);\r\n      }\r\n    }\r\n  };\r\n\r\n  //영상검사 보기 버튼\r\n  const openImgModal = (event) => {\r\n    setImgModalOpen(true);\r\n  };\r\n  //영상검사 보기 모달 안에서 닫기 버튼 클릭\r\n  const closeImgModal = (event) => {\r\n    setImgModalOpen(false);\r\n  };\r\n\r\n  //영상검사 수정 버튼\r\n  const openImgModifyModal = (event) => {\r\n    setImgModifyModalOpen(true);\r\n  };\r\n  //영상검사 수정 모달 안에서 수정 버튼 클릭\r\n  const closeMImgModifyModal = (event) => {\r\n    setImgModifyModalOpen(false);\r\n  };\r\n  //영상검사 수정 모달 안에서 닫기 버튼 클릭\r\n  const closeImgModifyModal = (event) => {\r\n    event.preventDefault();\r\n    setImgModifyModalOpen(false);\r\n  };\r\n\r\n  //영상검사 등록 버튼\r\n  const openImgCreateModal = (event) => {\r\n    setImgCreateModalOpen(true);\r\n  };\r\n  //영사검사 등록 모달 안에서 등록 버튼 클릭\r\n  //영상검사의 경우, 등록 시 검사결과를 img로 수정 \r\n  const closeRImgCreateModal = async (event) => {\r\n    try {\r\n      setImgCreateModalOpen(false);\r\n      props.inspection.inspection_result = \"img\";\r\n      await updateResult(props.id, \"img\");\r\n      setInspectionR();\r\n      props.publishTopic(0);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //영상검사 등록 모달 안에서 닫기 버튼 클릭\r\n  const closeImgCreateModal = (event) => {\r\n    event.preventDefault();\r\n    setImgCreateModalOpen(false);\r\n  };\r\n\r\n  //검사상태(대기~>검사) 변경\r\n  //DB Inspections 에서 해당 검사번호의 검사결과 수정\r\n  const changeStateInspection = async () => {\r\n    try {\r\n      if (props.inspection.inspection_id === props.id) {\r\n        if (props.inspection.inspection_state === \"대기\") {\r\n          //props.inspection.inspection_state = \"검사\";\r\n          await updateState(props.id, \"검사\");\r\n          props.handleStateInspectionFalse();\r\n          props.publishTopic(0);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //검사상태(검사~>대기) 변경\r\n  //DB Inspections 에서 해당 검사번호의 검사결과 수정\r\n  const changeStateWait = async () => {\r\n    try {\r\n      if (props.inspection.inspection_id === props.id) {\r\n        if (props.inspection.inspection_state === \"검사\") {\r\n          //props.inspection.inspection_state = \"대기\";\r\n          props.inspection.inspection_result = \"\";\r\n          props.inspection.inspection_state = \"대기\";\r\n          await updateResult(props.id, \"\");\r\n          await updateState(props.id, \"대기\");\r\n          setInspectionR();\r\n          props.handleStateWaitFalse();\r\n          props.publishTopic(0);\r\n          props.plusStateWaitCount();\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //검사상태(검사~>완료) 변경\r\n  //DB Inspections 에서 해당 검사번호의 검사결과 수정\r\n  const changeStateFinish = async () => {\r\n    try {\r\n      if (props.inspection.inspection_id === props.id) {\r\n        if (props.inspection.inspection_state === \"검사\") {\r\n          if (inspectionR === \"\") {\r\n            alert(\"검사결과를 입력해주세요.\");\r\n          } else {\r\n            //props.inspection.inspection_state = \"완료\";\r\n            await updateState(props.id, \"완료\");\r\n            props.handleStateFinishFalse();\r\n            props.publishTopic(0);\r\n            props.plusStateFinishCount();\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  useEffect(() => {\r\n    if (props.stateInspection === true) {\r\n      changeStateInspection();\r\n    }\r\n    if (props.stateWait === true) {\r\n      changeStateWait();\r\n    }\r\n    if (props.stateFinish === true) {\r\n      changeStateFinish();\r\n    }\r\n  }, [props]);\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <>\r\n      <tr\r\n        className=\"InspectionListItem\"\r\n        key={props.inspection.inspection_id}\r\n        onClick={() => {\r\n          props.handleChecked(props.inspection.inspection_id);\r\n        }}\r\n      >\r\n        <td className=\"align-middle\">\r\n          <input type=\"checkbox\" name=\"inspectionCheck\" checked={props.id === props.inspection.inspection_id ? true : false} readOnly />\r\n        </td>\r\n        <td className=\"align-middle\">{props.inspection.inspection_list_category}</td>\r\n        <td className=\"align-middle\">{props.inspection.inspection_list_specimen}</td>\r\n        <td className=\"align-middle\">{props.inspection.inspection_list_name}</td>\r\n\r\n        {props.inspection.inspection_list_category === \"혈액검사\" ? (\r\n          props.inspection.inspection_result === \"\" ? (\r\n            props.inspection.inspection_state === \"대기\" ? (\r\n              <td></td>\r\n            ) : props.inspection.inspection_state === \"완료\" ? (\r\n              <td></td>\r\n            ) : (\r\n              <td className=\"align-middle\">\r\n                <div>\r\n                  <input type=\"text\" value={inspectionR} onChange={handleResultChange} style={{ width: \"70px\" }} />\r\n                  <button className=\"button_team2_fill\" onClick={inspectionRRegister}>\r\n                    등록\r\n                  </button>\r\n                </div>\r\n              </td>\r\n            )\r\n          ) : props.inspection.inspection_state === \"완료\" ? (\r\n            <td className=\"align-middle\">{props.inspection.inspection_result}</td>\r\n          ) : (\r\n            <td className=\"align-middle\">\r\n              <div>\r\n                <input type=\"text\" value={inspectionR} onChange={handleResultChange} style={{ width: \"70px\" }} />\r\n                <button className=\"button_team2_fill\" onClick={inspectionRModify}>\r\n                  수정\r\n                </button>\r\n              </div>\r\n            </td>\r\n          )\r\n        ) : props.inspection.inspection_result === \"\" ? (\r\n          props.inspection.inspection_state === \"대기\" ? (\r\n            <td></td>\r\n          ) : props.inspection.inspection_state === \"완료\" ? (\r\n            <td></td>\r\n          ) : (\r\n            <td className=\"InspectionListItem_1 align-middle\">\r\n              <div>\r\n                <React.Fragment>\r\n                  <button className=\"button_team2_empty\" onClick={openImgCreateModal}>\r\n                    등록\r\n                  </button>\r\n                  <InspectionImgCreateFormModal id={props.id} open={imgCreateModalOpen} closeR={closeRImgCreateModal} close={closeImgCreateModal} inspection={props.inspection} />\r\n                </React.Fragment>\r\n              </div>\r\n            </td>\r\n          )\r\n        ) : props.inspection.inspection_state === \"완료\" ? (\r\n          <td className=\"align-middle\">\r\n            <React.Fragment>\r\n              <button className=\"button_team2_fill\" onClick={openImgModal}>\r\n                보기\r\n              </button>\r\n              <InspectionImgFormModal id={props.id} open={imgModalOpen} close={closeImgModal} inspection={props.inspection} />\r\n            </React.Fragment>\r\n          </td>\r\n        ) : (\r\n          <td className=\"align-middle\">\r\n            <div className=\"InspectionListItem_1\">\r\n              <React.Fragment>\r\n                <button className=\"button_team2_fill\" onClick={openImgModal}>\r\n                  보기\r\n                </button>\r\n                <InspectionImgFormModal id={props.id} open={imgModalOpen} close={closeImgModal} inspection={props.inspection} />\r\n                <button className=\"button_team2_empty\" onClick={openImgModifyModal}>\r\n                  수정\r\n                </button>\r\n                <InspectionImgModifyFormModal id={props.id} open={imgModifyModalOpen} closeM={closeMImgModifyModal} close={closeImgModifyModal} inspection={props.inspection} />\r\n              </React.Fragment>\r\n            </div>\r\n          </td>\r\n        )}\r\n\r\n        <td className=\"align-middle\">{props.inspection.inspection_list_reference}</td>\r\n        <td className=\"align-middle\">{props.inspection.inspection_date !== undefined ? moment(props.inspection.inspection_date).format(\"HH:mm\") : \"\"}</td>\r\n        {props.inspection.inspeciton_list_container === \"EDTA\" ? (\r\n          <td className=\"align-middle\" style={{ color: \"#8041D9\" }}>\r\n            ●{props.inspection.inspeciton_list_container}\r\n          </td>\r\n        ) : props.inspection.inspeciton_list_container === \"SST\" ? (\r\n          <td className=\"align-middle\" style={{ color: \"#FFE400\" }}>\r\n            ●{props.inspection.inspeciton_list_container}\r\n          </td>\r\n        ) : (\r\n          <td className=\"align-middle\">{props.inspection.inspeciton_list_container}</td>\r\n        )}\r\n        <td className=\"align-middle\">{props.inspection.inspection_doctor_name}</td>\r\n        <td className=\"align-middle\">{props.inspection.inspection_inspector_name}</td>\r\n        <td className=\"align-middle\">{props.inspection.inspection_lab}</td>\r\n        {props.inspection.inspection_state === \"대기\" ? (\r\n          <td className=\"align-middle\" style={{ color: \"#009900\" }}>\r\n            {props.inspection.inspection_state}\r\n          </td>\r\n        ) : props.inspection.inspection_state === \"검사\" ? (\r\n          <td className=\"align-middle\" style={{ color: \"#ff6600\" }}>\r\n            {props.inspection.inspection_state}\r\n          </td>\r\n        ) : (\r\n          <td className=\"align-middle\" style={{ color: \"#00AAF0\" }}>\r\n            {props.inspection.inspection_state}\r\n          </td>\r\n        )}\r\n      </tr>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default InspectionListItem;\r\n","import InspectionBarcodeModal from \"./components/modal/InspectionBarcodeModal\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport ReactExport from \"react-export-excel\";\r\nimport InspectionListItem from \"./InspectionListItem\";\r\nimport { readInspection } from \"apis/inspections\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Nodata from \"components/common/NoData\";\r\n\r\nlet inspectionsList = [];\r\n\r\nfunction InspectionList(props) {\r\n  //검사 상세 내역 전체 목록\r\n  const [inspections, setInspections] = useState(inspectionsList);\r\n  //검사 상세 내역 필터된(로그인한 검사자만) 목록\r\n  const [filterInspections, setFilterInspections] = useState([]);\r\n  //true 일때, 검사상태: 대기~>검사\r\n  const [stateInspection, setStateInspection] = useState(false);\r\n  //true 일때, 검사상태: 검사~>대기\r\n  const [stateWait, setStateWait] = useState(false);\r\n  //true 일때, 검사상태: ~>완료\r\n  const [stateFinish, setStateFinish] = useState(false);\r\n  //검사상태가 완료인 검사의 갯수\r\n  const [stateFinishCount, setStateFinishCount] = useState(0);\r\n  //검사상태가 대기인 검사의 갯수\r\n  const [stateWaitCount, setStateWaitCount] = useState(0);\r\n  //true 일때, 바코드 모달 열림\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  //검사번호\r\n  const [id, setId] = useState(\"\");\r\n  //Spinner\r\n  const [loading, setLoading] = useState(false);\r\n  //로그인한 User의 id\r\n  const globalUid = useSelector((state) => state.authReducer.uid);\r\n  //로그인한 User의 권한\r\n  const authorityRole = useSelector((state) => state.authReducer.uauthority);\r\n\r\n  ////////////////////////////////////////////////////////////\r\n  //엑셀 저장\r\n  ////////////////////////////////////////////////////////////\r\n  const ExcelFile = ReactExport.ExcelFile;\r\n  const ExcelSheet = ReactExport.ExcelFile.ExcelSheet;\r\n  const ExcelColumn = ReactExport.ExcelFile.ExcelColumn;\r\n  let dataSet = [];\r\n  //{\r\n  //   columns: [{title:\"\"}],\r\n  //   data: [],\r\n  // };\r\n  function getDataSet() {\r\n    // dataSet.columns.push({title:\"진단검사명\"});\r\n    // dataSet.columns.push({title:\"검체명\"});\r\n    // dataSet.columns.push({title:\"검사명\"});\r\n    // dataSet.columns.push({title:\"결과\"});\r\n    // dataSet.columns.push({title:\"참고치\"});\r\n    // dataSet.columns.push({title:\"검사시간\"});\r\n    // dataSet.columns.push({title:\"용기\"});\r\n    // dataSet.columns.push({title:\"담당의\"});\r\n    // dataSet.columns.push({title:\"검사자\"});\r\n    // dataSet.columns.push({title:\"검사실\"});\r\n    for (var i = 0; i <= inspections.length - 1; i++) {\r\n      dataSet.push({\r\n        category: inspections[i].inspection_list_category,\r\n        specimen: inspections[i].inspection_list_specimen,\r\n        name: inspections[i].inspection_list_name,\r\n        result: inspections[i].inspection_result,\r\n        reference: inspections[i].inspection_list_reference,\r\n        date: inspections[i].inspection_date,\r\n        container: inspections[i].inspeciton_list_container,\r\n        doctor: inspections[i].inspection_doctor_name,\r\n        inspector: inspections[i].inspeciton_list_container,\r\n        lab: inspections[i].inspection_lab,\r\n      });\r\n    }\r\n    return dataSet;\r\n  }\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  //DB Inspections 에서 해당 진료번호를 가지고, 전체 검사 목록 가져옴\r\n  //로그인한 검사자의 검사 목록만 filter, 권한이 master일때는 전체 목록\r\n  const getInspections = async (treatmentId) => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await readInspection(treatmentId);\r\n      inspectionsList = response.data.inspectionList;\r\n      if(authorityRole !== \"ROLE_MASTER\"){\r\n      const iList = inspectionsList.filter((inspection) => {\r\n        if(inspection.inspection_inspector_id === globalUid){\r\n          return inspection;\r\n        }\r\n      });\r\n      setFilterInspections(iList);\r\n      } else {\r\n        setFilterInspections(inspectionsList);\r\n      }\r\n      setInspections(inspectionsList);\r\n    } catch (error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  //검사상태가 바뀔 때(검사시작, 검사취소, 검사완료)\r\n  //DB Inspections 에서 해당 진료번호를 가지고, 전체 검사 목록 가져옴\r\n  //로그인한 검사자의 검사 목록만 filter, 권한이 master일때는 전체 목록\r\n  const getInspectionsWhenStateChange = async (treatmentId) => {\r\n    try {\r\n      const response = await readInspection(treatmentId);\r\n      inspectionsList = response.data.inspectionList;\r\n      if(authorityRole !== \"ROLE_MASTER\"){\r\n      const iList = inspectionsList.filter((inspection) => {\r\n        if(inspection.inspection_inspector_id === globalUid){\r\n          return inspection;\r\n        }\r\n      });\r\n      setFilterInspections(iList);\r\n      } else {\r\n        setFilterInspections(inspectionsList);\r\n      }\r\n      setInspections(inspectionsList);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //검사들의 검사상태가 완료인 갯수를 센 후, stateFinishCount상태에 저장\r\n  function getStateFinishCount() {\r\n    let finishCount = 0;\r\n    for (var i = 0; i <= inspections.length - 1; i++) {\r\n      if (inspections[i].inspection_state === \"완료\") {\r\n        finishCount++;\r\n      }\r\n    }\r\n    setStateFinishCount(finishCount);\r\n  }\r\n\r\n  function getStateWaitCount() {\r\n    let waitCount = 0;\r\n    for (var i = 0; i <= inspections.length - 1; i++) {\r\n      if (inspections[i].inspection_state === \"대기\") {\r\n        waitCount++;\r\n      }\r\n    }\r\n    setStateWaitCount(waitCount);\r\n  }\r\n\r\n  //검사취소 버튼 클릭 (검사결과: 검사 ~> 대기)\r\n  const cancelBtn = () => {\r\n    setStateWait(true);\r\n    getStateWaitCount();\r\n  };\r\n\r\n  //엑셀저장 버튼 클릭\r\n  const excelBtn = () => {\r\n    dataSet = [];\r\n  };\r\n\r\n  //검사완료 버튼 클릭 (검사결과: 검사 ~> 완료)\r\n  const completeBtn = () => {\r\n    if (window.confirm(\"검사완료 시, 결과 수정이 불가합니다\")) {\r\n      setStateFinish(true);\r\n      getStateFinishCount();\r\n    } else {\r\n      return;\r\n    }\r\n  };\r\n\r\n  //검사상태를 완료로 바꾼 후, stateFinishCount + 1\r\n  const plusStateFinishCount = () => {\r\n    getStateFinishCount();\r\n    setStateFinishCount(stateFinishCount + 1);\r\n  };\r\n\r\n  //검사상태를 대기로 바꾼 후, stateWaitCount + 1\r\n  const plusStateWaitCount = () => {\r\n    getStateWaitCount();\r\n    setStateWaitCount(stateWaitCount + 1);\r\n    setStateWaitCount(stateWaitCount - 1);\r\n  };\r\n\r\n  //검사시작 버튼 클릭 시,\r\n  //혈액검사면 바코드 모달 열림, 영상검사면 검사상태 검사로 바뀜 + 총검사상태 검사로 바뀜\r\n  const openModal = () => {\r\n    inspections.find((ins) => {\r\n      if (ins.inspection_id === id) {\r\n        if (ins.inspection_list_category === \"혈액검사\") {\r\n          setModalOpen(true);\r\n          return ins;\r\n        } else {\r\n          setStateInspection(true);\r\n          props.handleIStateInspectionTrue();\r\n          props.publishTopic(0);\r\n          return false;\r\n        }\r\n      }\r\n    });\r\n  };\r\n  //바코드 모달 안에서 확인 버튼 클릭\r\n  const closeCheckModal = () => {\r\n    setModalOpen(false);\r\n    setStateInspection(true);\r\n    props.handleIStateInspectionTrue();\r\n  };\r\n  //바코드 모달 안에서 취소 버튼 클릭\r\n  const closeCancelModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n\r\n  //검사 체크(선택)\r\n  const handleChecked = (inspectionId) => {\r\n    setId(inspectionId);\r\n  };\r\n\r\n  //검사시작 후(검사상태: 대기~>검사)\r\n  const handleStateInspectionFalse = () => {\r\n    setStateInspection(false);\r\n  };\r\n\r\n  //검사취소 후(검사상태: 검사~>대기)\r\n  const handleStateWaitFalse = () => {\r\n    setStateWait(false);\r\n  };\r\n\r\n  //검사완료 후(검사상태: 검사~>완료)\r\n  const handleStateFinishFalse = () => {\r\n    setStateFinish(false);\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  useEffect(() => {\r\n    if (props.treatmentId) {\r\n      getInspections(props.treatmentId);\r\n    } else {\r\n      setInspections([]);\r\n      setFilterInspections([]);\r\n    }\r\n    getStateFinishCount();\r\n    getStateWaitCount();\r\n  }, [props.treatmentId]);\r\n\r\n  useEffect(() => {\r\n    if (props.treatmentId) {\r\n      getInspectionsWhenStateChange(props.treatmentId);\r\n    }\r\n    getStateFinishCount();\r\n    getStateWaitCount();\r\n  }, [props]);\r\n\r\n  //진료번호가 바뀔 때,\r\n  //stateFinishCount를 0으로 바꿔 누적되지 않고, 다시 세도록 함\r\n  useEffect(() => {\r\n    setStateFinishCount(0);\r\n    setStateWaitCount(0);\r\n  }, [props.treatmentId]);\r\n\r\n  //stateFinishCount 바뀔 때,\r\n  //검사목록 갯수와 검사상태가 완료인 갯수가 같으면\r\n  //총검사결과: 검사~>완료 true\r\n  useEffect(() => {\r\n    if (inspections.length !== 0 && inspections.length === stateFinishCount) {\r\n      props.handleIStateFinishTrue();\r\n    } else {\r\n      props.handleIStateFinishFalse();\r\n    }\r\n  }, [stateFinishCount]);\r\n\r\n  //stateWaitCount 바뀔 때,\r\n  //검사목록 갯수와 검사상태가 대기인 갯수가 같으면\r\n  //총검사결과: 검사~>대기 true\r\n  useEffect(() => {\r\n    if (inspections.length !== 0 && inspections.length === stateWaitCount) {\r\n      props.handleIStateWaitTrue();\r\n    } else {\r\n      props.handleIStateWaitFalse();\r\n    }\r\n  }, [stateWaitCount]);\r\n\r\n  ////////////////////////////////////////////////////////////\r\n  //바코드 모달에 props으로 전달할 검사 정보\r\n  ////////////////////////////////////////////////////////////\r\n  var inspection_list_specimen = \" \";\r\n  var inspeciton_list_container = \" \";\r\n  var inspection_list_name = \" \";\r\n  var patient_name = \" \";\r\n  var inspection_inspector_name = \" \";\r\n  inspections.find((ins) => {\r\n    if (ins.inspection_id === id) {\r\n      inspection_list_specimen = ins.inspection_list_specimen;\r\n      inspeciton_list_container = ins.inspeciton_list_container;\r\n      inspection_list_name = ins.inspection_list_name;\r\n      patient_name = ins.patient_name;\r\n      inspection_inspector_name = ins.inspection_inspector_name;\r\n    }\r\n  });\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <div className=\"InspectionList\">\r\n      <div className=\"InspectionList_title\">검사 상세 내역</div>\r\n      <div className=\"InspectionList_1 border\">\r\n        <div className=\"InspectionList_1_1\">\r\n          <React.Fragment>\r\n            <button className=\"button_team2_fill InspectionList_1_2\" onClick={openModal}>\r\n              검사 시작\r\n            </button>\r\n            <InspectionBarcodeModal\r\n              id={id}\r\n              tid={props.treatmentId}\r\n              open={modalOpen}\r\n              closeCheck={closeCheckModal}\r\n              closeCancel={closeCancelModal}\r\n              inspectionListSpecimen={inspection_list_specimen}\r\n              inspectionListContainer={inspeciton_list_container}\r\n              inspectionListName={inspection_list_name}\r\n              patientName={patient_name}\r\n              inspectionInspectorName={inspection_inspector_name}\r\n            />\r\n          </React.Fragment>\r\n          <button className=\"button_team2_empty InspectionList_1_2\" onClick={cancelBtn}>\r\n            검사 취소\r\n          </button>\r\n\r\n          <ExcelFile\r\n            filename={props.treatmentId+\" 검사 상세 내역\"}\r\n            element={\r\n              <button className=\"button_team2_fill InspectionList_1_2\" onClick={excelBtn}>\r\n                엑셀 저장\r\n              </button>\r\n            }\r\n          >\r\n            <ExcelSheet data={getDataSet} name=\"inspectionsExcel\">\r\n              <ExcelColumn label=\"진단검사명\" value=\"category\"/>\r\n              <ExcelColumn label=\"검체명\" value=\"specimen\" />\r\n              <ExcelColumn label=\"검사명\" value=\"name\" />\r\n              <ExcelColumn label=\"결과\" value=\"result\" />\r\n              <ExcelColumn label=\"참고치\" value=\"reference\" />\r\n              <ExcelColumn label=\"검사시간\" value=\"date\" />\r\n              <ExcelColumn label=\"용기\" value=\"container\" />\r\n              <ExcelColumn label=\"담당의\" value=\"doctor\" />\r\n              <ExcelColumn label=\"검사자\" value=\"inspector\" />\r\n              <ExcelColumn label=\"검사실\" value=\"lab\" />\r\n            </ExcelSheet>\r\n          </ExcelFile>\r\n\r\n          <button className=\"button_team2_empty InspectionList_1_2\" onClick={completeBtn}>\r\n            검사 완료\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"InspectionList_list \">\r\n          <table className=\"table InspectionList_2_1\" style={{ height: \"10px\" }}>\r\n            <thead className=\"InspectionList_2_2\">\r\n              <tr>\r\n                <th style={{ width: \"1%\" }}></th>\r\n                <th style={{ width: \"9%\" }}>진단검사명</th>\r\n                <th style={{ width: \"10%\" }}>검체명</th>\r\n                <th style={{ width: \"10%\" }}>검사명</th>\r\n                <th style={{ width: \"15%\" }}>결과</th>\r\n                <th style={{ width: \"10\" }}>참고치</th>\r\n                <th style={{ width: \"9%\" }}>검사 시간</th>\r\n                <th style={{ width: \"7%\" }}>용기</th>\r\n                <th style={{ width: \"7%\" }}>담당의</th>\r\n                <th style={{ width: \"7%\" }}>검사자</th>\r\n                <th style={{ width: \"8%\" }}>검사실</th>\r\n                <th style={{ width: \"7%\" }}>상태</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {loading ? (\r\n                <div className=\"spinner2\">\r\n                  <div className={`spinner-border text-primary`} role=\"status\">\r\n                    <span className=\"sr-only\">loading...</span>\r\n                  </div>\r\n                </div>\r\n              ) : filterInspections.length === 0 ? (\r\n                <td colSpan=\"12\">\r\n                  <React.Fragment>\r\n                    <Nodata />\r\n                  </React.Fragment>\r\n                </td>\r\n              ) : (\r\n                <>\r\n                  {filterInspections.map((inspection) => {\r\n                    return (\r\n                      <InspectionListItem\r\n                        key={inspection.inspection_id}\r\n                        inspection={inspection}\r\n                        id={id}\r\n                        handleChecked={(inspectionId) => handleChecked(inspectionId)}\r\n                        stateInspection={stateInspection}\r\n                        handleStateInspectionFalse={handleStateInspectionFalse}\r\n                        stateWait={stateWait}\r\n                        handleStateWaitFalse={handleStateWaitFalse}\r\n                        stateFinish={stateFinish}\r\n                        handleStateFinishFalse={handleStateFinishFalse}\r\n                        plusStateFinishCount={plusStateFinishCount}\r\n                        plusStateWaitCount={plusStateWaitCount}\r\n                        publishTopic={props.publishTopic}\r\n                        iStateFinish={props.iStateFinish}\r\n                        iStateWait={props.iStateWait}\r\n                        message={props.message}\r\n                      />\r\n                    );\r\n                  })}\r\n                </>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InspectionList;\r\n","import \"./Inspection.css\";\r\nimport InspectionPatientList from \"./InspectionPatientList\";\r\nimport InspectionList from \"./InspectionList\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\nimport Paho from \"paho-mqtt\";\r\nimport { sendMqttMessage } from \"apis/mqtt\";\r\n\r\nfunction Inspection(props) {\r\n  ////////////////////////////////////////////////////////////\r\n  //MQTT\r\n  // 1. 검사 대기 추가   - doctor -> inspector\r\n  // { topic: \"/138010/nurse/doctor/inspector\", content: \"addInspections\"}\r\n  // 2. 검사 수정   - inspector -> inspector\r\n  // { topic: \"/138010/nurse/doctor/inspector\", content: \"updateInspects\"}\r\n  // 3. 총검사 상태 완료   - inspector -> inspector\r\n  // { topic: \"/138010/nurse/doctor/inspector\", content: \"iStateInspections\"}\r\n  ////////////////////////////////////////////////////////////\r\n  const [subTopic, setSubTopic] = useState(\"/138010/nurse/doctor/inspector\"); // 병원코드/검사자\r\n  const [pubMessage, setPubMessage] = useState([\r\n    {\r\n      topic: \"/138010/nurse/doctor/inspector\",\r\n      content: \"updateInspects\",\r\n    },\r\n    {\r\n      topic: \"/138010/nurse/doctor/inspector\",\r\n      content: \"iStateInspections\",\r\n    },\r\n  ]);\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  let client = useRef(null);\r\n\r\n  const connectMqttBroker = () => {\r\n    client.current = new Paho.Client(\"kosa3.iptime.org\", 50012, \"client-\" + new Date().getTime());\r\n    // client.current = new Paho.Client(\"localhost\", 61614, \"client-\" + new Date().getTime());\r\n\r\n    client.current.onConnectionLost = () => {\r\n      console.log(\"Mqtt 접속 끊김\");\r\n    };\r\n\r\n    client.current.onMessageArrived = (msg) => {\r\n      //console.log(\"메시지 수신\");\r\n      var Jmessage = JSON.parse(msg.payloadString);\r\n      setMessage(() => {\r\n        return Jmessage;\r\n      });\r\n    };\r\n\r\n    client.current.connect({\r\n      onSuccess: () => {\r\n        client.current.subscribe(subTopic);\r\n        console.log(\"Mqtt 접속 성공\");\r\n      },\r\n    });\r\n  };\r\n  const disconnectMqttBroker = () => {\r\n    client.current.disconnect(); // onConnectionLost 실행됨\r\n  };\r\n\r\n  const publishTopic = async (num) => {\r\n    await sendMqttMessage(pubMessage[num]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectMqttBroker();\r\n  }, []);\r\n\r\n  ////////////////////////////////////////////////////////////\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  //진료번호\r\n  const [treatmentId, setTreatmentId] = useState(\"\");\r\n  //true 일때, 총검사상태: 대기~>검사\r\n  const [iStateInspection, setIStateInspection] = useState(false);\r\n  //true 일때, 총검사상태: 검사~>대기\r\n  const [iStateWait, setIStateWait] = useState(false);\r\n  //true 일때, 총검사상태: 검사~>완료\r\n  const [iStateFinish, setIStateFinish] = useState(false);\r\n\r\n  //검사대기 목록에서 체크된 진료번호\r\n  const checkedtId = (id) => {\r\n    setTreatmentId(id);\r\n  };\r\n\r\n  //검사시작 시(총검사상태: 대기~>검사)\r\n  const handleIStateInspectionTrue = () => {\r\n    setIStateInspection(true);\r\n  };\r\n\r\n  //검사시작 후(총검사상태: 대기~>검사)\r\n  const handleIStateInspectionFalse = () => {\r\n    setIStateInspection(false);\r\n  };\r\n\r\n  //모든 검사상태가 대기 시(총검사상태: 검사~>대기)\r\n  const handleIStateWaitTrue = () => {\r\n    setIStateWait(true);\r\n  };\r\n\r\n  //모든 검사상태가 대기 후(총검사상태: 검사~>대기)\r\n  const handleIStateWaitFalse = () => {\r\n    setIStateWait(false);\r\n  };\r\n\r\n  //모든 검사상태가 완료 시(총검사상태: 검사~>완료)\r\n  const handleIStateFinishTrue = () => {\r\n    setIStateFinish(true);\r\n  };\r\n\r\n  //모든 검사상태가 완료 후(총검사상태: 검사~>완료)\r\n  const handleIStateFinishFalse = () => {\r\n    setIStateFinish(false);\r\n  };\r\n\r\n  ////////////////////////////////////////////////////////////\r\n\r\n  return (\r\n    <>\r\n      <div className=\"Inspection\">\r\n        <div className=\"Inspection_1\">\r\n          {/* 검사대기환자 */}\r\n          <InspectionPatientList\r\n            treatmentId={treatmentId}\r\n            checkedtId={(id) => checkedtId(id)}\r\n            iStateInspection={iStateInspection}\r\n            handleIStateInspectionFalse={handleIStateInspectionFalse}\r\n            iStateFinish={iStateFinish}\r\n            handleIStateFinishFalse={handleIStateFinishFalse}\r\n            iStateWait={iStateWait}\r\n            handleIStateWaitFalse={handleIStateWaitFalse}\r\n            message={message}\r\n            publishTopic={publishTopic}\r\n          />\r\n        </div>\r\n        <div className=\"Inspection_2\">\r\n          {/* 검사상세내역 */}\r\n          <InspectionList\r\n            treatmentId={treatmentId}\r\n            handleIStateInspectionTrue={handleIStateInspectionTrue}\r\n            iStateFinish={iStateFinish}\r\n            handleIStateFinishTrue={handleIStateFinishTrue}\r\n            handleIStateFinishFalse={handleIStateFinishFalse}\r\n            iStateWait={iStateWait}\r\n            handleIStateWaitTrue={handleIStateWaitTrue}\r\n            handleIStateWaitFalse={handleIStateWaitFalse}\r\n            publishTopic={publishTopic}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Inspection;\r\n","//상태 조건값 선언\r\nconst initialState = {\r\n  uid: \"\",\r\n  authToken: \"\",\r\n  uauthority: \"\"\r\n};\r\n\r\n//액션 타입 선언\r\nconst SET_UID = \"auth/setUid\";\r\nconst SET_AUTH_TOKEN = \"auth/setAuthToken\";\r\nconst SET_UAUTHORITY = \"auth/setUauthority\";\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetUidAction = (uid) => {\r\n  return {\r\n    type: SET_UID,\r\n    uid: uid,\r\n  };\r\n};\r\n\r\nexport const createSetAuthTokenAction = (authToken) => {\r\n  return {\r\n    type: SET_AUTH_TOKEN,\r\n    authToken: authToken,\r\n  };\r\n};\r\n\r\nexport const cresteSetUauthorityAction = (uauthority) => {\r\n  return {\r\n    type: SET_UAUTHORITY,\r\n    uauthority: uauthority\r\n  };\r\n};\r\n\r\n//리듀스 선언\r\nconst authReducer = (state = initialState, action) => { //default값 넣어줌 initialState\r\n  if (action.type === SET_UID) {\r\n    return { ...state, uid: action.uid };\r\n  } else if (action.type === SET_AUTH_TOKEN){\r\n    return { ...state, authToken: action.authToken };\r\n  } else if (action.type === SET_UAUTHORITY) {\r\n    return { ...state, uauthority: action.uauthority }\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default authReducer;","import \"./Help.css\";\r\nimport { RiCustomerServiceLine } from \"react-icons/ri\";\r\n\r\nfunction Help(props) {\r\n  return (\r\n    <div className={`Help`}>\r\n      <div className={`user_guide`}>\r\n        <a  className=\"user_guide_a\" href=\"/resources/pdf/사용자가이드.pdf\" download>\r\n        <div>사용자 가이드</div>\r\n        <div className={`icon mt-3`}><i className=\"bi bi-question-circle\"></i></div> \r\n        <div className=\"user_guide_explain\">※ 클릭 시 사용자 가이드가 <br/>다운로드 됩니다.</div>\r\n        </a>       \r\n      </div>\r\n      <div className={`online_center`}>        \r\n        <div>온라인 고객센터</div>\r\n          <a href=\"https://help.douzone.com/support/voice.jsp\" target=\"_blank\" rel=\"noreferrer\">\r\n            <div className={`icon icon1 mt-3`}><i className=\"bi bi-globe\"></i></div>\r\n          </a>\r\n        <div className=\"user_guide_explain\">※ 클릭 시 온라인 고객센터 페이지로 <br/>이동됩니다.</div>\r\n      </div>\r\n      <div className={`as`}>\r\n        <div>원격 A/S</div>\r\n        {/* <div className={`icon`}><i className=\"bi bi-laptop\"></i></div> */}\r\n        <div className=\"icon\"><RiCustomerServiceLine/></div>\r\n        <div></div>\r\n        <div className=\"text-center\"><i className=\"bi bi-telephone mr-1\" style={{\"fontSize\":\"1.6rem\"}}></i>1688-6000</div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Help;","import axios from \"axios\";\r\n\r\naxios.defaults.baseURL = \"http://kosa3.iptime.org:50002\";\r\n// axios.defaults.baseURL = \"http://localhost:8080\";\r\n\r\nexport function addAuthHeader(authToken){\r\n  axios.defaults.headers.common[\"authToken\"] = authToken;\r\n}\r\n\r\nexport function removeAuthHeader(){\r\n  delete axios.defaults.headers.common[\"authToken\"];\r\n}","import axios from \"axios\";\r\n\r\nexport function login(user){\r\n  //공통경로 생략\r\n  const promise = axios.post(\"/auth/login\", user);\r\n  return promise;\r\n}\r\n\r\nexport function getUser(user_id) {\r\n  const promise = axios.get(\"/auth/read\", {params: {user_id}});\r\n  return promise;\r\n}\r\n\r\nexport function updateUserInfo(user) {\r\n  const promise = axios.put(\"/auth/update\", user);\r\n  return promise;\r\n}","//상태 조건값 선언\r\nconst initialState = {\r\n  hid: \"\",\r\n  hname: \"\", //병원 이름\r\n  haddress: \"\",\r\n  hurl: \"\",\r\n  hlat: \"37.52684965592309\",\r\n  hlong: \"127.10834881127674\",\r\n};\r\n\r\n//액션 타입 선언\r\nconst SET_HID = \"hospital/setHid\";\r\nconst SET_HNAME = \"hospital/setHname\";\r\nconst SET_HADDRESS = \"hospital/setHaddress\";\r\nconst SET_HURL = \"hospital/setHURL\";\r\nconst SET_HLAT = \"hospital/setHLAT\";\r\nconst SET_HLONG = \"hospital/setHLONG\";\r\n\r\n//액션 생성 함수 선언\r\nexport const createSetHidAction = (hid) => {\r\n  return {\r\n    type: SET_HID,\r\n    hid: hid,\r\n  };\r\n};\r\n\r\nexport const createSetHnameAction = (hname) => {\r\n  return {\r\n    type: SET_HNAME,\r\n    hname: hname,\r\n  };\r\n};\r\n\r\nexport const createSetHaddressAction = (haddress) => {\r\n  return {\r\n    type: SET_HADDRESS,\r\n    haddress: haddress,\r\n  };\r\n};\r\n\r\nexport const createSetHurlAction = (hurl) => {\r\n  return {\r\n    type: SET_HURL,\r\n    hurl: hurl,\r\n  };\r\n};\r\n\r\nexport const createSetHLATAction = (hlat) => {\r\n  return {\r\n    type: SET_HLAT,\r\n    hlat: hlat,\r\n  };\r\n};\r\n\r\nexport const createSetHLONGAction = (hlong) => {\r\n  return {\r\n    type: SET_HLONG,\r\n    hlong: hlong,\r\n  };\r\n};\r\n\r\n//리듀스 선언\r\nconst hospitalReducer = (state = initialState, action) => { //default값 넣어줌 initialState\r\n  if (action.type === SET_HID) {\r\n    return { ...state, hid: action.hid };\r\n  } else if(action.type === SET_HNAME){\r\n    return { ...state, hname: action.hname };\r\n  } else if(action.type === SET_HADDRESS){\r\n    return { ...state, haddress: action.haddress };\r\n  } else if(action.type === SET_HURL){\r\n    return { ...state, hurl: action.hurl };\r\n  } else if(action.type === SET_HLAT){\r\n    return { ...state, hlat: action.hlat };\r\n  } else if(action.type === SET_HLONG){\r\n    return { ...state, hlong: action.hlong };\r\n  } else {\r\n    return state;\r\n  }\r\n};\r\n\r\nexport default hospitalReducer;","import React, { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { createSetAuthTokenAction, createSetUidAction, cresteSetUauthorityAction } from \"redux/auth-reducer\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport Help from \"./Help\";\r\nimport \"./Login.css\";\r\nimport { addAuthHeader } from \"apis/axiosConfig\";\r\nimport { login } from \"apis/auth\";\r\nimport { ValidationModal } from \"../components/common/ValidationModal\";\r\nimport { createSetHaddressAction, createSetHidAction, createSetHLATAction, createSetHLONGAction, createSetHnameAction, createSetHurlAction } from \"redux/hospital-reducer\";\r\n\r\nfunction Login(props) {\r\n  // 유저 상태\r\n  const [user, setUser] = useState({\r\n    userId: \"\",\r\n    userPassword: \"\"\r\n  });\r\n\r\n  // Spinner\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // 바인딩할 상태함수\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChange = (event) => {\r\n    setUser({\r\n      ...user,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  // 로그인\r\n  const loginUser = async (event) => {\r\n    setLoading(true);\r\n    try{\r\n      // 로그인 요청\r\n      const response = await login(user);\r\n      // console.log(response.data);\r\n\r\n      // 로그인 성공 시 JWT 저장 및 경로 이동\r\n      if (response.data.result === \"success\") {\r\n        // alert(\"로그인 성공\");\r\n\r\n        // 요청 헤더에 JWT 토큰 추가\r\n        addAuthHeader(response.data.authToken);\r\n        // // Redux에 인증 내용 저장      \r\n        dispatch(createSetUidAction(response.data.uid));\r\n        dispatch(createSetAuthTokenAction(response.data.authToken));\r\n        dispatch(cresteSetUauthorityAction(response.data.uauthority));\r\n        dispatch(createSetHnameAction(response.data.hname));\r\n        dispatch(createSetHidAction(response.data.hid));\r\n        dispatch(createSetHaddressAction(response.data.haddress));\r\n        dispatch(createSetHLATAction(response.data.hlat));\r\n        dispatch(createSetHLONGAction(response.data.hlong));\r\n        dispatch(createSetHurlAction(response.data.hurl));\r\n\r\n        // sessionStorage에 인증 내용 저장\r\n        sessionStorage.setItem(\"uid\", response.data.uid);\r\n        sessionStorage.setItem(\"authToken\", response.data.authToken);\r\n        sessionStorage.setItem(\"uauthority\", response.data.uauthority);\r\n        sessionStorage.setItem(\"hname\", response.data.hname);\r\n        sessionStorage.setItem(\"hid\", response.data.hid);\r\n        sessionStorage.setItem(\"haddress\", response.data.haddress);\r\n        sessionStorage.setItem(\"hlat\", response.data.hlat);\r\n        sessionStorage.setItem(\"hlong\", response.data.hlong);\r\n        sessionStorage.setItem(\"hurl\", response.data.hurl);\r\n        \r\n        // 로그인 아이디에 따른 경로 지정\r\n        if(user.userId.slice(0,1) === \"N\") {\r\n          props.history.push(\"/Register\");}\r\n        else if (user.userId.slice(0,1) === \"D\") {\r\n          props.history.push(\"/Treatment\");\r\n        } else if (user.userId.slice(0,1) === \"I\") {      \r\n          props.history.push(\"/Inspection\");\r\n        } \r\n      } else if (response.data.result === \"notCorrectPW\" || response.data.result === \"notFindID\") {\r\n        openModal();\r\n        // alert(\"로그인 실패 : 아이디 혹은 비밀번호가 맞지 않습니다.\");\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 아이디/비밀번호를 입력해주세요.\"\r\n        })        \r\n      }  else if (response.data.result === \"notEnabled\") {\r\n        openModal();\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"비활성화된 계정입니다.\"\r\n        });      \r\n      } \r\n    } catch(error) {\r\n      console.log(error);      \r\n    } finally {\r\n      setLoading(false);\r\n    }  \r\n  };\r\n  \r\n  //---------------------------------------------------------------------------------------\r\n  // 공지사항\r\n  const [bid, setBid] = useState(\"0\");\r\n\r\n  const boardClick = (id) => {\r\n    if (bid !== id) {\r\n      setBid(id);\r\n    } else {\r\n      setBid(\"0\");\r\n    }\r\n  };\r\n\r\n  \r\n  //---------------------------------------------------------------------------------------\r\n  // 유효성 검사를 위한 함수 사용\r\n  const { handleSubmit, register, errors } = useForm({ mode: \"onChange\" });\r\n  // 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [modalOpen, setModalOpen] = useState(false);\r\n  // 유효성 검사 오류 메시지\r\n  const [errorMsg, setErrorMsg] = useState({\r\n    title : \"로그인 실패\",\r\n    content: \"\"\r\n  });\r\n\r\n  const openModal = (event) => {\r\n    setModalOpen(true);\r\n  };\r\n  const closeModal = () => {\r\n    setModalOpen(false);\r\n  };\r\n  \r\n  return (\r\n    <div className=\"box\">\r\n      <div className=\"Login\">\r\n        <div className=\"back\">\r\n          <div className=\"d-flex justify-content-center align-items-center mb-5\">\r\n            <h2 className=\"text-center mr-4\">의료정보 시스템</h2>\r\n            <div>\r\n              <img src=\"/resources/img/logo_blue.png\" alt=\"\" width={70}></img>\r\n            </div>\r\n          </div>\r\n          <form onSubmit={handleSubmit(loginUser)}>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">아이디</label>\r\n              <div className=\"col-sm\">\r\n                <input type=\"text\" className=\"form-control\" name=\"userId\" ref={register({required: true})} onChange={handleChange}></input>\r\n                <div className={errors.userId? \"Login_error\" : \"Login_noterror\"}>아이디를 입력해주세요.</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n              <label className=\"col-sm-3 col-form-label\">비밀번호</label>\r\n              <div className=\"col-sm\">\r\n                <input type=\"password\" className=\"form-control Login_password\" name=\"userPassword\" ref={register({required:true})} onChange={handleChange}></input>\r\n                <div className={errors.userPassword? \"Login_error\" : \"Login_noterror\"}>비밀번호를 입력해주세요.</div>\r\n              </div>\r\n            </div>\r\n            <div className=\"d-flex justify-content-end\">\r\n              {loading ? \r\n              <button className=\"button_team2_fill\" disabled>\r\n                <div className=\"spinner-border spinner-border-sm\"></div>\r\n                <span className=\"pl-1\">LOADING</span>\r\n              </button>              \r\n              :\r\n              <button className=\"button_team2_fill\" type=\"submit\">LOGIN</button> }\r\n              <React.Fragment>\r\n                <ValidationModal open={modalOpen} close={closeModal} errorMsg={errorMsg}></ValidationModal>\r\n              </React.Fragment>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div>\r\n          <Help/>\r\n        </div>\r\n        <div className=\"Board\">\r\n          <div className=\"Board_title\">공지사항</div>\r\n          <div className=\"text-center border\">\r\n            <div className=\"Board_table\">\r\n              <div style={{width: \"10%\"}}>분류</div>\r\n              <div style={{width: \"75%\"}}>제목</div>\r\n              <div style={{width: \"15%\"}}>작성일</div>\r\n            </div>\r\n            <div className={bid === \"1\"? \"Board_tr active\" : \"Board_tr\"} onClick={() => boardClick(\"1\")}>\r\n              <div style={{width: \"10%\"}}>[공지]</div>\r\n              <div style={{width: \"75%\"}}>서버 점검 관련 사항 공지</div>\r\n              <div style={{width: \"15%\"}}>2021-06-01</div>\r\n            </div>\r\n            <div className={bid === \"1\"? 'show' : 'Board_content'}>\r\n              <div>서버 점검으로 인해 2021-06-12 23시 00분부터 2021-06-13 04시 30분까지 프로그램 이용이 <br></br> 어려울 수 있습니다.</div>\r\n            </div>\r\n            <div className={bid === \"2\"? \"Board_tr active\" : \"Board_tr\"} onClick={() => boardClick(\"2\")}>\r\n              <div style={{width: \"10%\"}}>[공지]</div>\r\n              <div style={{width: \"75%\"}}>사용자 가이드 외 이용사항 문의 공지</div>\r\n              <div style={{width: \"15%\"}}>2021-06-01</div>\r\n            </div>\r\n            <div className={bid === \"2\"? 'show' : 'Board_content'}>\r\n              <div>사용자 가이드 외의 문의사항은 온라인 고객센터 혹은 원격 A/S 1688-6000을 통해 문의해주세요.</div>\r\n            </div>\r\n            <div className={bid === \"3\"? \"Board_tr active\" : \"Board_tr\"} onClick={() => boardClick(\"3\")}>\r\n              <div style={{width: \"10%\"}}>[공지]</div>\r\n              <div style={{width: \"75%\"}}>처음 사용하는 사용자를 위한 프로그램 이용 관련 문의</div>\r\n              <div style={{width: \"15%\"}}>2021-06-01</div>\r\n            </div>\r\n            <div className={bid === \"3\"? 'show' : 'Board_content'}>\r\n              <div>\r\n                상단에 존재하는 사용자 가이드를 클릭하시면 사용설명서를 다운 받으실 수 있습니다. <br/>\r\n                그 외의 문의 사항은 온라인 고객센터를 통해 문의 바랍니다.\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;","import { ResponsiveBar } from '@nivo/bar';\r\nimport style from \"./DataAnalysis.module.css\";\r\n\r\nfunction Data1(props) {\r\n  const {data1} = props;\r\n\r\n  return (\r\n    <>\r\n      <div className={style.DataAnalysis_col_header}>최근 3달 진료수</div>\r\n      <div className={style.DataAnalysis_col_content}>\r\n        <ResponsiveBar\r\n          data={data1}\r\n          keys={['진료수']}\r\n          indexBy=\"month\"\r\n          margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n          padding={0.3}\r\n          groupMode=\"grouped\"\r\n          valueScale={{ type: 'linear' }}\r\n          indexScale={{ type: 'band', round: true }}\r\n          colors={{ scheme: 'accent' }}\r\n          fill={[\r\n            {\r\n              match: {\r\n                id: 'treatments'\r\n              }\r\n            }\r\n          ]}\r\n          borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n          axisTop={null}\r\n          axisRight={null}\r\n          axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: '진료수',\r\n            legendPosition: 'middle',\r\n            legendOffset: -40\r\n          }}\r\n          animate={true}\r\n          motionStiffness={90}\r\n          motionDamping={15}\r\n        />\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Data1;","import { ResponsivePie } from \"@nivo/pie\";\r\nimport style from \"./DataAnalysis.module.css\";\r\n\r\nfunction Data2(props) {\r\n  const {data2} = props;\r\n\r\n  return (\r\n    <>\r\n      <div className={style.DataAnalysis_col_header}>접수 현황</div>\r\n      <div className={style.DataAnalysis_col_content}>\r\n        <ResponsivePie\r\n          data={data2}\r\n          margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n          innerRadius={0.5}\r\n          padAngle={0.7}\r\n          cornerRadius={3}\r\n          activeOuterRadiusOffset={8}\r\n          borderWidth={1}\r\n          borderColor={{ from: \"color\", modifiers: [[\"darker\", 0.2]] }}\r\n          arcLinkLabelsSkipAngle={10}\r\n          arcLinkLabelsTextColor=\"#333333\"\r\n          arcLinkLabelsThickness={2}\r\n          arcLinkLabelsColor={{ from: \"color\" }}\r\n          arcLabelsSkipAngle={10}\r\n          arcLabelsTextColor={{ from: \"color\", modifiers: [[\"darker\", 2]] }}\r\n          legends={[\r\n            {\r\n              anchor: \"bottom\",\r\n              direction: \"row\",\r\n              justify: false,\r\n              translateX: 0,\r\n              translateY: 56,\r\n              itemsSpacing: 0,\r\n              itemWidth: 100,\r\n              itemHeight: 18,\r\n              itemTextColor: \"#999\",\r\n              itemDirection: \"left-to-right\",\r\n              itemOpacity: 1,\r\n              symbolSize: 18,\r\n              // symbolShape: \"circle\",\r\n              effects: [\r\n                {\r\n                  on: \"hover\",\r\n                  style: {\r\n                    itemTextColor: \"#000\",\r\n                  },\r\n                },\r\n              ],\r\n            },\r\n          ]}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Data2;\r\n","import { ResponsiveBar } from '@nivo/bar';\r\nimport style from \"./DataAnalysis.module.css\";\r\n\r\nfunction Data3(props) {\r\n  const {data3} = props;\r\n  return (\r\n    <>\r\n      <div className={style.DataAnalysis_col_header}>요일별 나이대별 환자 검사 통계</div>\r\n      <div className={style.DataAnalysis_col_content}>\r\n        <ResponsiveBar\r\n          data={data3}\r\n          keys={['10대', '20대', '30대', '40대', '50대', '60대', '70대', '80대', '90대']}\r\n          indexBy=\"dayOfWeek\"\r\n          margin={{ top: 50, right: 130, bottom: 50, left: 60 }}\r\n          padding={0.3}\r\n          valueScale={{ type: 'linear' }}\r\n          indexScale={{ type: 'band', round: true }}\r\n          colors={{ scheme: 'accent' }}\r\n          defs={[\r\n            {\r\n              id: 'dots',\r\n              type: 'patternDots',\r\n              background: 'inherit',\r\n              color: '#38bcb2',\r\n              size: 4,\r\n              padding: 1,\r\n              stagger: true\r\n            },\r\n            {\r\n              id: 'lines',\r\n              type: 'patternLines',\r\n              background: 'inherit',\r\n              color: '#eed312',\r\n              rotation: -45,\r\n              lineWidth: 6,\r\n              spacing: 10\r\n            }\r\n          ]}\r\n          borderColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n          axisTop={null}\r\n          axisRight={null}\r\n          axisBottom={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: '요일',\r\n            legendPosition: 'middle',\r\n            legendOffset: 40\r\n          }}\r\n          axisLeft={{\r\n            tickSize: 5,\r\n            tickPadding: 5,\r\n            tickRotation: 0,\r\n            legend: '검사 수',\r\n            legendPosition: 'middle',\r\n            legendOffset: -40\r\n          }}\r\n          labelSkipWidth={12}\r\n          labelSkipHeight={12}\r\n          labelTextColor={{ from: 'color', modifiers: [['darker', 1.6]] }}\r\n          legends={[\r\n            {\r\n              dataFrom: 'keys',\r\n              anchor: 'bottom-right',\r\n              direction: 'column',\r\n              justify: false,\r\n              translateX: 120,\r\n              translateY: 0,\r\n              itemsSpacing: 2,\r\n              itemWidth: 100,\r\n              itemHeight: 20,\r\n              itemDirection: 'left-to-right',\r\n              itemOpacity: 0.85,\r\n              symbolSize: 20,\r\n              effects: [\r\n                {\r\n                  on: 'hover',\r\n                  style: {\r\n                    itemOpacity: 1\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n          animate={true}\r\n          motionStiffness={90}\r\n          motionDamping={15}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Data3;","import React from \"react\";\r\nimport { ResponsivePie } from '@nivo/pie';\r\nimport style from \"./DataAnalysis.module.css\";\r\n\r\nfunction Data4(props) {\r\n  const {data4} = props;\r\n  return (\r\n    <>\r\n      <div className={style.DataAnalysis_col_header}>분기별 환자 현황</div>\r\n      <div className={style.DataAnalysis_col_content}>\r\n        <ResponsivePie\r\n          data={data4}\r\n          margin={{ top: 40, right: 80, bottom: 80, left: 80 }}\r\n          innerRadius={0.5}\r\n          padAngle={0.7}\r\n          cornerRadius={3}\r\n          activeOuterRadiusOffset={8}\r\n          colors={{ scheme: 'category10' }}\r\n          borderWidth={1}\r\n          borderColor={{ from: 'color', modifiers: [['darker', 0.2]] }}\r\n          arcLinkLabelsSkipAngle={10}\r\n          arcLinkLabelsTextColor=\"#333333\"\r\n          arcLinkLabelsThickness={2}\r\n          arcLinkLabelsColor={{ from: 'color' }}\r\n          arcLabelsSkipAngle={10}\r\n          arcLabelsTextColor={{ from: 'color', modifiers: [['darker', 2]] }}\r\n          defs={[\r\n            {\r\n              id: 'dots',\r\n              type: 'patternDots',\r\n              background: 'inherit',\r\n              color: 'rgba(255, 255, 255, 0.3)',\r\n              size: 4,\r\n              padding: 1,\r\n              stagger: true\r\n            },\r\n            {\r\n              id: 'lines',\r\n              type: 'patternLines',\r\n              background: 'inherit',\r\n              color: 'rgba(255, 255, 255, 0.3)',\r\n              rotation: -45,\r\n              lineWidth: 6,\r\n              spacing: 10\r\n            }\r\n          ]}\r\n          legends={[\r\n            {\r\n              anchor: 'bottom',\r\n              direction: 'row',\r\n              justify: false,\r\n              translateX: 0,\r\n              translateY: 56,\r\n              itemsSpacing: 0,\r\n              itemWidth: 100,\r\n              itemHeight: 18,\r\n              itemTextColor: '#999',\r\n              itemDirection: 'left-to-right',\r\n              itemOpacity: 1,\r\n              symbolSize: 18,\r\n              symbolShape: 'circle',\r\n              effects: [\r\n                {\r\n                  on: 'hover',\r\n                  style: {\r\n                    itemTextColor: '#000'\r\n                  }\r\n                }\r\n              ]\r\n            }\r\n          ]}\r\n          animate={true}\r\n          motionStiffness={90}\r\n          motionDamping={15}\r\n        />\r\n      </div>\r\n    </>\r\n\r\n  );\r\n}\r\nexport default Data4;\r\n","import { getDatas } from \"apis/data\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Data1 from \"./Data1\";\r\nimport Data2 from \"./Data2\";\r\nimport Data3 from \"./Data3\";\r\nimport Data4 from \"./Data4\";\r\nimport style from \"./DataAnalysis.module.css\";\r\nimport Spinner from \"components/common/Spinner\";\r\n\r\nfunction DataAnalysis(props) {\r\n\r\n  const [data1, setData1] = useState([]);\r\n  const [data2, setData2] = useState([]);\r\n  const [data3, setData3] = useState([]);\r\n  const [data4, setData4] = useState([]);\r\n\r\n  // spinner \r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const getData = async () => {\r\n    setLoading(true);\r\n    try {\r\n      var response = await getDatas();\r\n\r\n      calcData1(response.data.data1);\r\n      calcData2(response.data.data2);\r\n      calcData3(response.data.data3);\r\n      calcData4(response.data.data4);\r\n\r\n      setLoading(false);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  const calcData1 = (datalist) => {\r\n    let count1 = 0;\r\n    let count2 = 0;\r\n    let count3 = 0;\r\n    for (var data of datalist) {\r\n      if (new Date(data.register_starttime).getMonth() === new Date().getMonth()) {\r\n        count1++;\r\n      } else if (new Date(data.register_starttime).getMonth() === new Date().getMonth() - 1) {\r\n        count2++;\r\n      } else if (new Date(data.register_starttime).getMonth() === new Date().getMonth() - 2) {\r\n        count3++\r\n      }\r\n    }\r\n    const newDataList = [\r\n      {\r\n        \"month\": \"전전달\",\r\n        \"진료수\": count3\r\n      },\r\n      {\r\n        \"month\": \"전달\",\r\n        \"진료수\": count2\r\n      },\r\n      {\r\n        \"month\": \"이번달\",\r\n        \"진료수\": count1\r\n      }\r\n    ]\r\n    setData1(newDataList);\r\n  };\r\n  const calcData2 = (datalist) => {\r\n    let count1 = 0, count2 = 0, count3 = 0;\r\n    for (var data of datalist) {\r\n      if (data.register_state === \"취소\") {\r\n        count1++;\r\n      } else if (data.register_state === \"대기\") {\r\n        count2++;\r\n      } else if (data.register_state === \"완료\") {\r\n        count3++;\r\n      }\r\n    }\r\n    const registerState = [\r\n      {\r\n        id: \"취소\",\r\n        label: \"취소\",\r\n        value: count1,\r\n      },\r\n      {\r\n        id: \"대기\",\r\n        label: \"대기\",\r\n        value: count2,\r\n      },\r\n      {\r\n        id: \"완료\",\r\n        label: \"완료\",\r\n        value: count3,\r\n      }\r\n    ];\r\n    setData2(registerState);\r\n  };\r\n  const calcData3 = (datalist) => {\r\n    let countA1 = 0, countA2 = 0, countA3 = 0, countA4 = 0, countA5 = 0, countA6 = 0, countA7 = 0, countA8 = 0, countA9 = 0;\r\n    let countB1 = 0, countB2 = 0, countB3 = 0, countB4 = 0, countB5 = 0, countB6 = 0, countB7 = 0, countB8 = 0, countB9 = 0;\r\n    let countC1 = 0, countC2 = 0, countC3 = 0, countC4 = 0, countC5 = 0, countC6 = 0, countC7 = 0, countC8 = 0, countC9 = 0;\r\n    let countD1 = 0, countD2 = 0, countD3 = 0, countD4 = 0, countD5 = 0, countD6 = 0, countD7 = 0, countD8 = 0, countD9 = 0;\r\n    let countE1 = 0, countE2 = 0, countE3 = 0, countE4 = 0, countE5 = 0, countE6 = 0, countE7 = 0, countE8 = 0, countE9 = 0;\r\n\r\n    let pAge = 0;\r\n    let yearToday = new Date().getFullYear();\r\n    yearToday *= 1;\r\n    for (var data of datalist) {\r\n      // 월요일\r\n      if (new Date(data.register_starttime).getDay() === 1) {\r\n        if ((data.patient_ssn.slice(7, 8) === \"3\") || (data.patient_ssn.slice(7, 8) === \"4\")) {\r\n          var newAge = \"20\" + (data.patient_ssn.slice(0, 2));\r\n          newAge *= 1;\r\n          pAge = yearToday - newAge;\r\n        } else {\r\n          var newAge2 = \"19\" + (data.patient_ssn.slice(0, 2));\r\n          newAge2 *= 1;\r\n          pAge = yearToday - newAge2;\r\n        }\r\n        if (pAge >= 10 && pAge < 20) {\r\n          countA1++;\r\n        } else if (pAge >= 20 && pAge < 30) {\r\n          countA2++;\r\n        } else if (pAge >= 30 && pAge < 40) {\r\n          countA3++;\r\n        } else if (pAge >= 40 && pAge < 50) {\r\n          countA4++;\r\n        } else if (pAge >= 50 && pAge < 60) {\r\n          countA5++;\r\n        } else if (pAge >= 60 && pAge < 70) {\r\n          countA6++;\r\n        } else if (pAge >= 70 && pAge < 80) {\r\n          countA7++;\r\n        } else if (pAge >= 80 && pAge < 90) {\r\n          countA8++;\r\n        } else if (pAge >= 90) {\r\n          countA9++;\r\n        }\r\n      }\r\n      // 화요일\r\n      else if (new Date(data.register_starttime).getDay() === 2) {\r\n        if ((data.patient_ssn.slice(7, 8) === \"3\") || (data.patient_ssn.slice(7, 8) === \"4\")) {\r\n          var newAge = \"20\" + (data.patient_ssn.slice(0, 2));\r\n          newAge *= 1;\r\n          pAge = yearToday - newAge;\r\n        } else {\r\n          var newAge2 = \"19\" + (data.patient_ssn.slice(0, 2));\r\n          newAge2 *= 1;\r\n          pAge = yearToday - newAge2;\r\n        }\r\n        if (pAge >= 10 && pAge < 20) {\r\n          countB1++;\r\n        } else if (pAge >= 20 && pAge < 30) {\r\n          countB2++;\r\n        } else if (pAge >= 30 && pAge < 40) {\r\n          countB3++;\r\n        } else if (pAge >= 40 && pAge < 50) {\r\n          countB4++;\r\n        } else if (pAge >= 50 && pAge < 60) {\r\n          countB5++;\r\n        } else if (pAge >= 60 && pAge < 70) {\r\n          countB6++;\r\n        } else if (pAge >= 70 && pAge < 80) {\r\n          countB7++;\r\n        } else if (pAge >= 80 && pAge < 90) {\r\n          countB8++;\r\n        } else if (pAge >= 90) {\r\n          countB9++;\r\n        }\r\n      }\r\n      // 수요일\r\n      else if (new Date(data.register_starttime).getDay() === 3) {\r\n        if ((data.patient_ssn.slice(7, 8) === \"3\") || (data.patient_ssn.slice(7, 8) === \"4\")) {\r\n          var newAge = \"20\" + (data.patient_ssn.slice(0, 2));\r\n          newAge *= 1;\r\n          pAge = yearToday - newAge;\r\n        } else {\r\n          var newAge2 = \"19\" + (data.patient_ssn.slice(0, 2));\r\n          newAge2 *= 1;\r\n          pAge = yearToday - newAge2;\r\n        }\r\n        if (pAge >= 10 && pAge < 20) {\r\n          countC1++;\r\n        } else if (pAge >= 20 && pAge < 30) {\r\n          countC2++;\r\n        } else if (pAge >= 30 && pAge < 40) {\r\n          countC3++;\r\n        } else if (pAge >= 40 && pAge < 50) {\r\n          countC4++;\r\n        } else if (pAge >= 50 && pAge < 60) {\r\n          countC5++;\r\n        } else if (pAge >= 60 && pAge < 70) {\r\n          countC6++;\r\n        } else if (pAge >= 70 && pAge < 80) {\r\n          countC7++;\r\n        } else if (pAge >= 80 && pAge < 90) {\r\n          countC8++;\r\n        } else if (pAge >= 90) {\r\n          countC9++;\r\n        }\r\n      }\r\n      // 목요일\r\n      else if (new Date(data.register_starttime).getDay() === 4) {\r\n        if ((data.patient_ssn.slice(7, 8) === \"3\") || (data.patient_ssn.slice(7, 8) === \"4\")) {\r\n          var newAge = \"20\" + (data.patient_ssn.slice(0, 2));\r\n          newAge *= 1;\r\n          pAge = yearToday - newAge;\r\n        } else {\r\n          var newAge2 = \"19\" + (data.patient_ssn.slice(0, 2));\r\n          newAge2 *= 1;\r\n          pAge = yearToday - newAge2;\r\n        }\r\n        if (pAge >= 10 && pAge < 20) {\r\n          countD1++;\r\n        } else if (pAge >= 20 && pAge < 30) {\r\n          countD2++;\r\n        } else if (pAge >= 30 && pAge < 40) {\r\n          countD3++;\r\n        } else if (pAge >= 40 && pAge < 50) {\r\n          countD4++;\r\n        } else if (pAge >= 50 && pAge < 60) {\r\n          countD5++;\r\n        } else if (pAge >= 60 && pAge < 70) {\r\n          countD6++;\r\n        } else if (pAge >= 70 && pAge < 80) {\r\n          countD7++;\r\n        } else if (pAge >= 80 && pAge < 90) {\r\n          countD8++;\r\n        } else if (pAge >= 90) {\r\n          countD9++;\r\n        }\r\n      }\r\n      // 금요일\r\n      else if (new Date(data.register_starttime).getDay() === 5) {\r\n        if ((data.patient_ssn.slice(7, 8) === \"3\") || (data.patient_ssn.slice(7, 8) === \"4\")) {\r\n          var newAge = \"20\" + (data.patient_ssn.slice(0, 2));\r\n          newAge *= 1;\r\n          pAge = yearToday - newAge;\r\n        } else {\r\n          var newAge2 = \"19\" + (data.patient_ssn.slice(0, 2));\r\n          newAge2 *= 1;\r\n          pAge = yearToday - newAge2;\r\n        }\r\n        if (pAge >= 10 && pAge < 20) {\r\n          countE1++;\r\n        } else if (pAge >= 20 && pAge < 30) {\r\n          countE2++;\r\n        } else if (pAge >= 30 && pAge < 40) {\r\n          countE3++;\r\n        } else if (pAge >= 40 && pAge < 50) {\r\n          countE4++;\r\n        } else if (pAge >= 50 && pAge < 60) {\r\n          countE5++;\r\n        } else if (pAge >= 60 && pAge < 70) {\r\n          countE6++;\r\n        } else if (pAge >= 70 && pAge < 80) {\r\n          countE7++;\r\n        } else if (pAge >= 80 && pAge < 90) {\r\n          countE8++;\r\n        } else if (pAge >= 90) {\r\n          countE9++;\r\n        }\r\n      }\r\n    }\r\n    const patient_data = [\r\n      {\r\n        \"dayOfWeek\": \"월\",\r\n        \"10대\": countA1,\r\n        \"20대\": countA2,\r\n        \"30대\": countA3,\r\n        \"40대\": countA4,\r\n        \"50대\": countA5,\r\n        \"60대\": countA6,\r\n        \"70대\": countA7,\r\n        \"80대\": countA8,\r\n        \"90대\": countA9,\r\n      },\r\n      {\r\n        \"dayOfWeek\": \"화\",\r\n        \"10대\": countB1,\r\n        \"20대\": countB2,\r\n        \"30대\": countB3,\r\n        \"40대\": countB4,\r\n        \"50대\": countB5,\r\n        \"60대\": countB6,\r\n        \"70대\": countB7,\r\n        \"80대\": countB8,\r\n        \"90대\": countB9,\r\n      },\r\n      {\r\n        \"dayOfWeek\": \"수\",\r\n        \"10대\": countC1,\r\n        \"20대\": countC2,\r\n        \"30대\": countC3,\r\n        \"40대\": countC4,\r\n        \"50대\": countC5,\r\n        \"60대\": countC6,\r\n        \"70대\": countC7,\r\n        \"80대\": countC8,\r\n        \"90대\": countC9,\r\n      },\r\n      {\r\n        \"dayOfWeek\": \"목\",\r\n        \"10대\": countD1,\r\n        \"20대\": countD2,\r\n        \"30대\": countD3,\r\n        \"40대\": countD4,\r\n        \"50대\": countD5,\r\n        \"60대\": countD6,\r\n        \"70대\": countD7,\r\n        \"80대\": countD8,\r\n        \"90대\": countD9,\r\n      },\r\n      {\r\n        \"dayOfWeek\": \"금\",\r\n        \"10대\": countE1,\r\n        \"20대\": countE2,\r\n        \"30대\": countE3,\r\n        \"40대\": countE4,\r\n        \"50대\": countE5,\r\n        \"60대\": countE6,\r\n        \"70대\": countE7,\r\n        \"80대\": countE8,\r\n        \"90대\": countE9,\r\n      }\r\n    ];\r\n    setData3(patient_data);\r\n  };\r\n  const calcData4 = (datalist) => {\r\n    let countQ1 = 0;\r\n    let countQ2 = 0;\r\n    let countQ3 = 0;\r\n    let countQ4 = 0;\r\n    for (var data of datalist) {\r\n      if (new Date(data.register_starttime).getMonth() >= 0 && new Date(data.register_starttime).getMonth() < 3) {\r\n        countQ1++;\r\n      } else if (new Date(data.register_starttime).getMonth() >= 3 && new Date(data.register_starttime).getMonth() < 6) {\r\n        countQ2++;\r\n      } else if (new Date(data.register_starttime).getMonth() >= 6 && new Date(data.register_starttime).getMonth() < 9) {\r\n        countQ3++\r\n      } else if (new Date(data.register_starttime).getMonth() >= 9 && new Date(data.register_starttime).getMonth() < 12) {\r\n        countQ4++\r\n      }\r\n    }\r\n    const newDataList = [\r\n      {\r\n        \"id\": \"1분기\",\r\n        \"label\": \"1분기\",\r\n        \"value\": countQ1,\r\n      },\r\n      {\r\n        \"id\": \"2분기\",\r\n        \"label\": \"2분기\",\r\n        \"value\": countQ2,\r\n      },\r\n      {\r\n        \"id\": \"3분기\",\r\n        \"label\": \"3분기\",\r\n        \"value\": countQ3,\r\n      },\r\n      {\r\n        \"id\": \"4분기\",\r\n        \"label\": \"4분기\",\r\n        \"value\": countQ4,\r\n      }\r\n    ]\r\n    setData4(newDataList);\r\n  };\r\n  useEffect(() => {\r\n    getData();\r\n  }, []);\r\n  return (\r\n    <div className={style.DataAnalysis}>\r\n      {loading ? <Spinner /> :\r\n        <>\r\n          <div className={style.DataAnalysis_row1}>\r\n            <div className={style.DataAnalysis_col}>\r\n              <Data1 data1={data1} />\r\n            </div>\r\n            <div className={style.DataAnalysis_col}>\r\n              <Data2 data2={data2} />\r\n            </div>\r\n          </div>\r\n          <div className={style.DataAnalysis_row2}>\r\n            <div className={style.DataAnalysis_col}>\r\n              <Data3 data3={data3} />\r\n            </div>\r\n            <div className={style.DataAnalysis_col}>\r\n              <Data4 data4={data4} />\r\n            </div>\r\n          </div>\r\n        </>}\r\n    </div>\r\n  );\r\n}\r\nexport default DataAnalysis;\r\n","import axios from \"axios\";\r\n\r\nexport function getDatas(){\r\n  const promise = axios.get(\"/data\");\r\n  return promise;\r\n}","import axios from \"axios\";\r\n\r\nexport function getAllUserList(){\r\n  const promise = axios.get(\"/user\");\r\n  return promise;\r\n}\r\n\r\nexport function getUserList(keyword=\"\", condition=\"all\"){\r\n  const promise = axios.get(\"/user/select\", {params: {keyword, condition}});\r\n  return promise;\r\n}\r\n\r\nexport function updateUser(user) {\r\n  const promise = axios.put(\"/user\", user);\r\n  return promise;\r\n}\r\n\r\nexport function updateUserEnabled(user) {\r\n  return axios.put(\"/user/enabled\", user);\r\n}\r\n\r\nexport function createUser(user) {\r\n  const promise = axios.post(\"/user\", user);\r\n  return promise;\r\n}","import { Modal } from \"../../components/common/Address\";\r\nimport React, { useState } from \"react\";\r\nimport { createUser } from \"apis/users\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nimport { ValidationModal } from \"components/common/ValidationModal\";\r\n\r\nfunction UserCreateForm(props) {\r\n  const hospital_id = useSelector((state) => state.hospitalReducer.hid);\r\n\r\n  // 직원 상태\r\n  const [user, setUser] = useState({\r\n    user_name: \"\",\r\n    user_authority: \"ROLE_DOCTOR\",\r\n    user_hospital_id: hospital_id,\r\n    user_ssn1: \"\",\r\n    user_ssn2: \"\",\r\n    user_sex: \"M\",\r\n    user_tel1: \"010\",\r\n    user_tel2: \"\",\r\n    user_tel3: \"\",\r\n    user_email1: \"\",\r\n    user_email2: \"naver.com\",\r\n    user_zipcode: \"\",\r\n    user_address: \"\",\r\n    user_detailaddress1: \"\",\r\n    user_detailaddress2: \"\",\r\n  });\r\n\r\n  //----------------------------------------------------------------------------------------\r\n  // validation 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [validationModalOpen, setValidationModalOpen] = useState(false);\r\n  // 유효성 검사 오류 메시지\r\n  const [errorMsg, setErrorMsg] = useState({\r\n    title: \"직원 등록 실패\",\r\n    content: \"\",\r\n  });\r\n\r\n  const openvalidationModal = () => {\r\n    setValidationModalOpen(true);\r\n  };\r\n\r\n  const closeValidationModal = () => {\r\n    setValidationModalOpen(false);\r\n  };\r\n\r\n  //----------------------------------------------------------------------------------------\r\n  // 주민번호 뒷자리 마스킹 상태\r\n  const [masking, setMasking] = useState(\"\");\r\n\r\n  //----------------------------------------------------------------------------------------\r\n  // 실행 함수\r\n  const handleChange = (event) => {\r\n    setUser({\r\n      ...user,\r\n      [event.target.name]: event.target.value,\r\n    });\r\n  };\r\n\r\n  const handleChangeSsn = (event) => {\r\n    setUser({\r\n      ...user,\r\n      user_ssn2: event.target.value,\r\n    });\r\n    setMasking(event.target.value);\r\n  };\r\n\r\n  // 직원 등록\r\n  const handleCreate = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      var userValidation = true;\r\n      var regex = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z]).{2,}$/;\r\n\r\n      if(user.user_name === \"\") {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"직원명을 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_name.length < 2) {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 직원명을 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_ssn1 === \"\" || user.user_ssn2 === \"\") {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"주민등록번호를 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_ssn1.length !== 6 || user.user_ssn2.length !== 7) {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 주민등록번호를 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_tel2 === \"\" || user.user_tel3 === \"\") {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"전화번호를 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_tel2.length < 3 || user.user_tel2.length > 4 || user.user_tel3.length < 3 || user.user_tel3.length > 4) {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 전화번호를 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_email1 === \"\") {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"이메일을 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (!regex.test(user.user_email1)) {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 이메일을 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      }\r\n\r\n      if (userValidation) {          \r\n        const response = await createUser(user);\r\n        console.log(response.data);\r\n        if (response.data.result === \"notUnique\") {\r\n          setErrorMsg({\r\n            ...errorMsg,\r\n            content: \"이미 등록된 직원입니다.\",\r\n          });\r\n          return openvalidationModal();\r\n        } else {\r\n          setUser({\r\n            user_name: \"\",\r\n            user_authority: \"ROLE_DOCTOR\",\r\n            user_hospital_id: hospital_id,\r\n            user_ssn1: \"\",\r\n            user_ssn2: \"\",\r\n            user_sex: \"M\",\r\n            user_tel1: \"010\",\r\n            user_tel2: \"\",\r\n            user_tel3: \"\",\r\n            user_email1: \"\",\r\n            user_email2: \"naver.com\",\r\n            user_zipcode: \"\",\r\n            user_address: \"\",\r\n            user_detailaddress1: \"\",\r\n            user_detailaddress2: \"\",\r\n          });\r\n          setMasking(\"\");\r\n          ToastsStore.success(\"직원을 등록했습니다.\");\r\n          props.publishTopic(1);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  //---------------------------------------------------------------------------------------\r\n  // 주소 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [addressModalOpen, setAddressModalOpen] = useState(false);\r\n\r\n  const openAddressModal = (event) => {\r\n    event.preventDefault();\r\n    setAddressModalOpen(true);\r\n  };\r\n  const closeAddressModal = () => {\r\n    setAddressModalOpen(false);\r\n  };\r\n  const sendModal = (data) => {\r\n    setAddressModalOpen(false);\r\n    setUser({\r\n      ...user,\r\n      user_zipcode: data.zonecode,\r\n      user_address: data.address,\r\n    });\r\n    if (data.buildingName === \"\") {\r\n      setUser((prevUser) => {\r\n        return {\r\n          ...prevUser,\r\n          user_detailaddress2: data.bname,\r\n        };\r\n      });\r\n    } else {\r\n      setUser((prevUser) => {\r\n        return {\r\n          ...prevUser,\r\n          user_detailaddress2: data.bname + \", \" + data.buildingName,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-2\">\r\n      <div className=\"User_title\">\r\n        직원 등록\r\n      </div>\r\n      <div className=\"border p-2\">\r\n        <form onSubmit={handleCreate}>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0\">직원명 * : </label>\r\n            <div className=\"col-sm\">\r\n              {/* <input type=\"text\" name=\"user_name\" placeholder=\"직원명\" value={user.user_name} onChange={handleChange} ref={register({ required: true, minLength: 2 })}></input> */}\r\n              <input type=\"text\" name=\"user_name\" placeholder=\"직원명\" value={user.user_name} onChange={handleChange}></input>\r\n              <React.Fragment>\r\n                <ValidationModal open={validationModalOpen} close={closeValidationModal} errorMsg={errorMsg}></ValidationModal>\r\n              </React.Fragment>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0\">주민등록번호 * : </label>\r\n            <div className=\"row ml-3 mr-0\">\r\n              {/* <input type=\"text\" className=\"col-sm\" name=\"user_ssn1\" value={user.user_ssn1} placeholder=\"앞자리\" onChange={handleChange} ref={register({ required: true, minLength: 6, maxLength: 6 })}></input> */}\r\n              <input type=\"text\" className=\"col-sm\" name=\"user_ssn1\" value={user.user_ssn1} placeholder=\"앞자리\" onChange={handleChange}></input>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              <input type=\"text\" className=\"col-sm\" name=\"user_ssn2\" value={masking} placeholder=\"뒷자리\" onChange={handleChangeSsn} \r\n                onBlur={() => {setMasking(masking?.replace(/(?<=.{1})./gi, \"*\"));}}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0\">성별 * : </label>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"user_sex\" value=\"M\" checked={user.user_sex === \"M\" ? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">남</label>\r\n            </div>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"user_sex\" value=\"F\" checked={user.user_sex === \"F\" ? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">여</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0\">직책 * :</label>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"user_authority\" value=\"ROLE_DOCTOR\" checked={user.user_authority === \"ROLE_DOCTOR\" ? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">의사</label>\r\n            </div>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"user_authority\" value=\"ROLE_NURSE\" checked={user.user_authority === \"ROLE_NURSE\" ? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">간호사</label>\r\n            </div>\r\n            <div className=\"col-sm-4 d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"user_authority\" value=\"ROLE_INSPECTOR\" checked={user.user_authority === \"ROLE_INSPECTOR\" ? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">임상병리사</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0 pr-0\">전화 번호 * : </label>\r\n            <div className=\"row col-sm mr-0\">\r\n              <select className=\"col-sm ml-3\" name=\"user_tel1\" value={user.user_tel1} onChange={handleChange}>\r\n                <option value=\"010\">010</option>\r\n                <option value=\"011\">011</option>\r\n                <option value=\"016\">016</option>\r\n                <option value=\"017\">017</option>\r\n                <option value=\"02\">02</option>\r\n                <option value=\"031\">031</option>\r\n                <option value=\"032\">032</option>\r\n                <option value=\"033\">033</option>\r\n                <option value=\"041\">041</option>\r\n                <option value=\"042\">042</option>\r\n                <option value=\"043\">043</option>\r\n                <option value=\"044\">044</option>\r\n                <option value=\"051\">051</option>\r\n                <option value=\"052\">052</option>\r\n                <option value=\"053\">053</option>\r\n                <option value=\"054\">054</option>\r\n                <option value=\"055\">055</option>\r\n                <option value=\"061\">061</option>\r\n                <option value=\"062\">062</option>\r\n                <option value=\"063\">063</option>\r\n                <option value=\"064\">064</option>\r\n              </select>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              {/* <input type=\"text\" className=\"col-sm\" name=\"user_tel2\" value={user.user_tel2} onChange={handleChange} ref={register({ required: true, minLength: 3, maxLength: 4 })}></input> */}\r\n              <input type=\"text\" className=\"col-sm\" name=\"user_tel2\" value={user.user_tel2} onChange={handleChange}></input>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              {/* <input type=\"text\" className=\"col-sm\" name=\"user_tel3\" value={user.user_tel3} onChange={handleChange} ref={register({ required: true, minLength: 3, maxLength: 4 })}></input> */}\r\n              <input type=\"text\" className=\"col-sm\" name=\"user_tel3\" value={user.user_tel3} onChange={handleChange}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0\">이메일 * : </label>\r\n            <div className=\"row ml-3 mr-0\">\r\n              {/* <input type=\"text\" className=\"col-sm mr-1\" name=\"user_email1\" value={user.user_email1} placeholder=\"ABC1234\" onChange={handleChange}\r\n                ref={register({ required: true, pattern: /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z]).{2,}$/ })}></input> */}\r\n              <input type=\"text\" className=\"col-sm mr-1\" name=\"user_email1\" value={user.user_email1} placeholder=\"ABC1234\" onChange={handleChange}></input>\r\n              <div className=\"mr-1 d-flex align-items-center\">@</div>\r\n              <select className=\"col-sm\" name=\"user_email2\" onChange={handleChange} value={user.user_email2}>\r\n                <option value=\"naver.com\">naver.com</option>\r\n                <option value=\"gmail.com\">gmail.com</option>\r\n                <option value=\"kakao.com\">kakao.com</option>\r\n                <option value=\"daum.net\">daum.net</option>\r\n                <option value=\"nate.com\">nate.com</option>\r\n                <option value=\"yahoo.com\">yahoo.com</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0\">주소: </label>\r\n            <div className=\"col-sm\">\r\n              <div className=\"row mb-2 pr-0\">\r\n                <input type=\"text\" className=\"col-sm-5 ml-3\" name=\"user_zipcode\" value={user.user_zipcode} placeholder=\"우편번호\" onChange={handleChange} readOnly></input>\r\n                <React.Fragment>\r\n                  <button className=\"button_team2_empty\" onClick={openAddressModal}>\r\n                    우편번호 찾기\r\n                  </button>\r\n                  <Modal open={addressModalOpen} close={closeAddressModal} send={sendModal}></Modal>\r\n                </React.Fragment>\r\n              </div>\r\n              <input type=\"text\" className=\"col-sm mb-2\" name=\"user_address\" placeholder=\"주소\" value={user.user_address} onChange={handleChange} readOnly></input>\r\n              <div className=\"row no-gutters mb-2\">\r\n                <input type=\"text\" className=\"col-sm mr-2\" name=\"user_detailaddress1\" value={user.user_detailaddress1} placeholder=\"상세주소\" onChange={handleChange}></input>\r\n                <input type=\"text\" className=\"col-sm\" name=\"user_detailaddress2\" value={user.user_detailaddress2} placeholder=\"참고항목\" onChange={handleChange} readOnly></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button className=\"button_team2_fill\" type=\"submit\">\r\n              등록\r\n            </button>\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground />\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserCreateForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { AutoSizer, List } from \"react-virtualized\";\r\nimport { getAllUserList, getUserList } from \"apis/users\";\r\nimport moment from \"moment\";\r\nimport Spinner from \"components/common/Spinner\";\r\nimport Nodata from \"components/common/NoData\";\r\n\r\nfunction UserList(props) {\r\n  // 직원 목록 상태\r\n  const [users, setUsers] = useState([]);\r\n  // 직원 직책 수 상태\r\n  const [userCount, setUserCount] = useState([]);\r\n\r\n  // 직원 직책 카운트\r\n  function getUsersCount(userList) {\r\n    const userCount = [];\r\n    var count1 = 0;\r\n    var count2 = 0;\r\n    var count3 = 0;\r\n    var count4 = 0;\r\n    var count5 = 0;\r\n    var countAll = 0;\r\n    for (var i = 0; i < userList.length; i++) {\r\n      countAll++;\r\n      if(userList[i].user_authority === \"ROLE_DOCTOR\") {\r\n        count1++;\r\n      } else if(userList[i].user_authority === \"ROLE_NURSE\") {\r\n        count2++;\r\n      } else if(userList[i].user_authority === \"ROLE_INSPECTOR\") {\r\n        count3++;\r\n      } \r\n      \r\n      if (userList[i].user_enabled === 1) {\r\n        count4++;\r\n      } else if (userList[i].user_enabled === 0) {\r\n        count5++;\r\n      }\r\n    }\r\n    userCount.push(countAll);\r\n    userCount.push(count1);\r\n    userCount.push(count2);\r\n    userCount.push(count3);\r\n    userCount.push(count4);\r\n    userCount.push(count5);\r\n  \r\n    return userCount;\r\n  };\r\n\r\n  // 검색 상태\r\n  const [keyword, setKeyword] = useState(\"\");\r\n\r\n  // 직책 상태\r\n  const [condition, setCondition] = useState(\"all\");\r\n\r\n  // 직원 코드 비교를 위한 상태\r\n  const [id, setId] = useState(\"\");\r\n\r\n  // Spinner\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleChange = (event) => {\r\n    setKeyword(event.target.value);\r\n  };\r\n\r\n  // 검색\r\n  const handleSearch = async (event) => {\r\n    setLoading(true);\r\n    try {\r\n      event.preventDefault();\r\n      const response = await getUserList(keyword, condition);\r\n      // console.log(response.data.userList)\r\n      setUsers(response.data.userList);\r\n    } catch(error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 직원 선택 -> updateForm으로 데이터 보내기\r\n  const handleClick = (user) => {\r\n    setId(user.user_id);\r\n    props.changeUser(user);\r\n  };\r\n\r\n  // 직책 선택\r\n  const clickCondition = async (selectCondition) => {\r\n    setLoading(true);\r\n    try {\r\n      if (condition !== selectCondition) {\r\n        // console.log(selectCondition, \"선택\");\r\n        setCondition(selectCondition);\r\n        const response = await getUserList(keyword, selectCondition);\r\n        setUsers(response.data.userList);\r\n        // console.log(response.data);\r\n      } else {\r\n        setCondition(\"all\");\r\n        setKeyword(\"\");\r\n        const response = await getAllUserList();\r\n        setUsers(response.data.userList);\r\n        // console.log(response.data);\r\n      }            \r\n    } catch(error) {\r\n      console.log(error);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // 마운트 시 직원 목록 불러오기\r\n  useEffect(() => {\r\n    const work = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await getAllUserList();\r\n        // console.log(response.data.userList)\r\n        setUsers(response.data.userList);\r\n        setUserCount(() => getUsersCount(response.data.userList));\r\n      } catch(error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    work();\r\n  }, []);\r\n\r\n  //----------------------------------------------------------------------------------------\r\n  // MQTT 메시지 받기\r\n  useEffect(() => {\r\n    // console.log(\"받습니다\", props.message);\r\n    const work = async () => {      \r\n      try {\r\n        if(props.message.content === \"updateUser\" || props.message.content === \"addUser\" || props.message.content === \"blockUser\" || props.message.content === \"allowUser\") {\r\n          const response = await getAllUserList();\r\n          // console.log(response.data.userList)\r\n          setUsers(response.data.userList);\r\n          setUserCount(() => getUsersCount(response.data.userList));\r\n          setLoading(true);\r\n        }        \r\n      } catch(error) {\r\n        console.log(error);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    work();\r\n  },[props.message])\r\n\r\n  // Autosizer\r\n  const rowRenderer = ({index, key, style}) => {\r\n    return (\r\n      <div className={users[index].user_enabled === 1 ? \"UserList_tr\" : \"UserList_tr_block\"} key={key} style={style} onClick={() => handleClick(users[index])}>\r\n        <div style={{width: \"3%\"}} key={users.user_id}><input type=\"checkbox\" width={50} checked={id === users[index].user_id? true : false} readOnly></input></div>\r\n        <div style={{width: \"11%\"}}>{users[index].user_id}</div>\r\n        <div style={{width: \"6%\"}}>{users[index].user_name}</div>\r\n        <div className={users[index].user_authority === 'ROLE_DOCTOR' ? \"UserList_Doctor\" : users[index].user_authority === 'ROLE_NURSE' ? \"UserList_Nurse\" : \"UserList_Inspector\"} style={{width: \"9%\"}}>\r\n          {users[index].user_authority === \"ROLE_DOCTOR\"? \"의사\" : (users[index].user_authority === \"ROLE_NURSE\"? \"간호사\" : \"임상병리사\")}</div>\r\n        <div style={{width: \"8%\"}}>{users[index].user_ssn1}</div>\r\n        <div style={{width: \"4%\"}}>{users[index].user_sex === \"M\"? \"남\" : \"여\"}</div>\r\n        <div style={{width: \"12%\"}}>{users[index].user_tel1} - {users[index].user_tel2} - {users[index].user_tel3}</div>\r\n        <div style={{width: \"12%\"}}>{users[index].user_email1}@{users[index].user_email2}</div>\r\n        <div style={{width: \"34%\"}}>{users[index].user_address} {users[index].user_detailaddress1} {users[index].user_detailaddress2}</div>\r\n        <div style={{width: \"11%\"}}>{moment(users[index].user_regdate).format(\"yyyy-MM-DD\")}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"UserList\">\r\n      <div className=\"User_title\">직원 목록</div>\r\n      <div className=\"UserList_content border\">\r\n        <div className=\"mb-2 UserList_content1\">\r\n          <div className=\"UserList_content1_1\">\r\n            <input type=\"text\" className=\"col\" name=\"search\" value={keyword} placeholder=\"이름/생년월일을 입력하세요.\" onChange={handleChange}></input>\r\n            <button className=\"button_team2_fill\" onClick={handleSearch}>검색</button>\r\n          </div>\r\n          <div className=\"UserList_content1_2\">\r\n          <div className=\"pr-3\" onClick={() => clickCondition(\"all\")}>전체: {userCount[0]}명</div>\r\n            <div className=\"pr-3\" onClick={() => clickCondition(\"ROLE_DOCTOR\")}>의사: {userCount[1]}명</div>\r\n            <div className=\"pr-3\" onClick={() => clickCondition(\"ROLE_NURSE\")}>간호사: {userCount[2]}명</div>\r\n            <div className=\"pr-3\" onClick={() => clickCondition(\"ROLE_INSPECTOR\")}>임상병리사: {userCount[3]}명</div>\r\n            <div className=\"pr-3\" onClick={() => clickCondition(\"1\")}>활성화: {userCount[4]}명</div>\r\n            <div onClick={() => clickCondition(\"0\")}>비활성화: {userCount[5]}명</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"text-center\">\r\n            <div className=\"UserList_Table\">\r\n              <div style={{width: \"2%\"}}></div>\r\n              <div style={{width: \"11%\"}}>직원 코드</div>\r\n              <div style={{width: \"7%\"}}>직원명</div>\r\n              <div style={{width: \"10%\"}}>직책</div>\r\n              <div style={{width: \"7%\"}}>생년월일</div>\r\n              <div style={{width: \"5%\"}}>성별</div>\r\n              <div style={{width: \"13%\"}}>전화번호</div>\r\n              <div style={{width: \"13%\"}}>이메일</div>\r\n              <div style={{width: \"32%\"}}>주소</div>\r\n              <div style={{width: \"11%\"}}>등록일</div>\r\n            </div>\r\n          <div>\r\n            {loading ? <Spinner /> \r\n            : users.length === 0 ? \r\n              <React.Fragment>\r\n                <Nodata />\r\n              </React.Fragment>\r\n            :\r\n            <>\r\n              <AutoSizer disableHeight>\r\n                {({width, height}) => {\r\n                  return <List width={width} height={660} list={users} rowCount={users.length} rowHeight={44} rowRenderer={rowRenderer} overscanRowCount={5}></List>\r\n                }}\r\n              </AutoSizer>\r\n            </>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserList;","import { Modal } from \"../../components/common/Address\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport \"./User.css\";\r\nimport { updateUser, updateUserEnabled } from \"apis/users\";\r\nimport moment from \"moment\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nimport { ValidationModal } from \"components/common/ValidationModal\";\r\n\r\nfunction UserUpdateForm(props) {\r\n  // 직원 상태\r\n  const [user, setUser] = useState({});\r\n  const [userId, setUserId] = useState(\"\");\r\n  \r\n  // 마스킹 상태\r\n  const [masking, setMasking] = useState(\"\");\r\n\r\n  //----------------------------------------------------------------------------------------\r\n  // validation 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [validationModalOpen, setValidationModalOpen] = useState(false);\r\n  // 유효성 검사 오류 메시지\r\n  const [errorMsg, setErrorMsg] = useState({\r\n    title : \"직원정보 수정 실패\",\r\n    content: \"\"\r\n  });\r\n\r\n  const openvalidationModal = (event) => {\r\n    setValidationModalOpen(true);\r\n  };\r\n  const closeValidationModal = () => {\r\n    setValidationModalOpen(false);\r\n  };\r\n\r\n  //----------------------------------------------------------------------------------------\r\n  // 실행 함수\r\n  const handleChange = (event) => {\r\n    setUser({\r\n      ...user,\r\n      user_id: props.user.user_id,\r\n      [event.target.name]: event.target.value\r\n    });\r\n    if (event.target.name === \"user_ssn2\") {\r\n      setMasking(event.target.value);\r\n    }\r\n  };\r\n\r\n  const handleChangeSsn = (event) => {\r\n    setUser({\r\n      ...user,\r\n      user_ssn2 : event.target.value\r\n    });\r\n    setMasking(event.target.value);\r\n  };\r\n\r\n  // 직원 정보 수정\r\n  const handleUpdate = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      var userValidation = true;\r\n      var regex = /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z]).{2,}$/;\r\n\r\n      if(user.user_name === \"\") {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"직원명을 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_name.length < 2) {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 직원명을 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_ssn1 === \"\" || user.user_ssn2 === \"\") {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"주민등록번호를 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_ssn1.length !== 6 || user.user_ssn2.length !== 7) {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 주민등록번호를 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_tel2 === \"\" || user.user_tel3 === \"\") {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"전화번호를 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_tel2.length < 3 || user.user_tel2.length > 4 || user.user_tel3.length < 3 || user.user_tel3.length > 4) {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 전화번호를 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (user.user_email1 === \"\") {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"이메일을 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      } else if (!regex.test(user.user_email1)) {\r\n        userValidation = false;\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"올바른 이메일을 입력해주세요.\"\r\n        });\r\n        return openvalidationModal();\r\n      }\r\n\r\n      if (userValidation) {\r\n        const response = await updateUser(user);\r\n        if(response.data) {\r\n          ToastsStore.success(\"직원 정보를 수정했습니다.\");\r\n          props.publishTopic(0);\r\n        }\r\n      }      \r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }; \r\n\r\n  // 직원 활성화 OR 비활성화\r\n  const handleEnabled = async (event) => {\r\n    try {\r\n      await updateUserEnabled(user);\r\n      if (user.user_enabled === 1) {\r\n        ToastsStore.success(\"해당 직원을 비활성화했습니다.\");\r\n        props.publishTopic(2);\r\n      } else {\r\n        ToastsStore.success(\"해당 직원을 활성화했습니다.\");\r\n        props.publishTopic(3);\r\n      }      \r\n    } catch(error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  \r\n  //----------------------------------------------------------------------------------------\r\n  // 주소 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [AddressModalOpen, setAddressModalOpen] = useState(false);\r\n\r\n  const openAddressModal = (event) => {\r\n    event.preventDefault();\r\n    setAddressModalOpen(true);\r\n  };\r\n  const closeAddressModal = () => {\r\n    setAddressModalOpen(false);\r\n  };\r\n  const sendModal = (data) => {\r\n    setAddressModalOpen(false);\r\n    setUser({\r\n      ...user,\r\n      user_zipcode: data.zonecode, \r\n      user_address: data.address\r\n    })\r\n    if (data.buildingName === \"\") {\r\n      setUser(prevUser => {\r\n        return {\r\n          ...prevUser,\r\n          user_detailaddress2: data.bname          \r\n        };\r\n      });\r\n    } else {\r\n      setUser(prevUser => {\r\n        return {\r\n          ...prevUser,\r\n          user_detailaddress2: data.bname + \", \" + data.buildingName   \r\n        };\r\n      });\r\n    }\r\n  };\r\n  \r\n  //----------------------------------------------------------------------------------------\r\n  // 마운트 시 실행\r\n  useEffect(() => {\r\n    setUser({\r\n      user_id: props.user.user_id,\r\n      user_name: props.user.user_name,\r\n      user_authority : props.user.user_authority,\r\n      user_ssn1: props.user.user_ssn1,\r\n      user_ssn2: props.user.user_ssn2,\r\n      user_sex: props.user.user_sex,\r\n      user_tel1: props.user.user_tel1,\r\n      user_tel2: props.user.user_tel2,\r\n      user_tel3: props.user.user_tel3,\r\n      user_email1: props.user.user_email1,\r\n      user_email2: props.user.user_email2,\r\n      user_zipcode: props.user.user_zipcode,\r\n      user_address: props.user.user_address,\r\n      user_detailaddress1: props.user.user_detailaddress1,\r\n      user_detailaddress2: props.user.user_detailaddress2,\r\n      user_regdate: props.user.user_regdate,\r\n      user_enabled: props.user.user_enabled\r\n    });    \r\n    setUserId(props.user.user_id);\r\n\r\n    if (props.user.user_ssn2) {        \r\n      let ssn2Masking = props.user.user_ssn2.slice(0, 1) + \"******\";\r\n      setMasking(ssn2Masking);\r\n    } \r\n  }, [props.user]);\r\n\r\n  useEffect(() => {\r\n    // console.log(\"받습니다\", props.message);\r\n    if(props.message.content === \"blockUser\") {\r\n      setUser({\r\n        ...user,\r\n        user_enabled: 0\r\n      });\r\n    } else if(props.message.content === \"allowUser\") {\r\n      setUser({\r\n        ...user,\r\n        user_enabled: 1\r\n      });\r\n    }\r\n  }, [props.message]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"User_title\">직원 정보 수정</div>\r\n      <div className=\"border p-2\">\r\n      <form onSubmit={handleUpdate}>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 pl-3 p-0 m-0\">직원 코드: </label>\r\n            <div className=\"col-sm d-flex \">{user.user_id}</div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 pl-3 p-0 m-0\">직원명 * : </label>\r\n            <div className=\"col-sm\">\r\n              <input type=\"text\" name=\"user_name\" value={user.user_name} placeholder=\"직원명\" onChange={handleChange}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0\">주민등록번호 * : </label>\r\n            <div className=\"row ml-3 mr-0\">\r\n              <input type=\"text\" className=\"col-sm\" name=\"user_ssn1\" value={user.user_ssn1} placeholder=\"앞자리\" onChange={handleChange}></input>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              <input type=\"text\" className=\"col-sm\" name=\"user_ssn2\" value={masking} placeholder=\"뒷자리\" \r\n                     onChange={handleChangeSsn} onBlur={() => {setMasking(masking?.replace(/(?<=.{1})./gi, '*'));}}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 pl-3 p-0 m-0\">성별 * : </label>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"user_sex\" value=\"M\" checked={user.user_sex === \"M\"? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">남</label>\r\n            </div>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"user_sex\" value=\"F\" checked={user.user_sex === \"F\"? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">여</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 pl-3 p-0 m-0\">직책 * : </label>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"user_authority\" value=\"ROLE_DOCTOR\" checked={user.user_authority === \"ROLE_DOCTOR\"? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">의사</label>\r\n            </div>\r\n            <div className=\"col-sm d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"user_authority\" value=\"ROLE_NURSE\" checked={user.user_authority === \"ROLE_NURSE\"? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">간호사</label>\r\n            </div>\r\n            <div className=\"col-sm-4 d-flex align-items-center\">\r\n              <input type=\"radio\" name=\"user_authority\" value=\"ROLE_INSPECTOR\" checked={user.user_authority === \"ROLE_INSPECTOR\"? true : false} onChange={handleChange}></input>\r\n              <label className=\"ml-3 mb-0\">임상병리사</label>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0\">전화 번호 * : </label>\r\n            <div className=\"row col-sm mr-0\">\r\n              <select className=\"col-sm ml-3\" name=\"user_tel1\" value={user.user_tel1} onChange={handleChange}>\r\n                <option value=\"010\">010</option>\r\n                <option value=\"011\">011</option>\r\n                <option value=\"016\">016</option>\r\n                <option value=\"017\">017</option>\r\n                <option value=\"02\">02</option>\r\n                <option value=\"031\">031</option>\r\n                <option value=\"032\">032</option>\r\n                <option value=\"033\">033</option>\r\n                <option value=\"041\">041</option>\r\n                <option value=\"042\">042</option>\r\n                <option value=\"043\">043</option>\r\n                <option value=\"044\">044</option>\r\n                <option value=\"051\">051</option>\r\n                <option value=\"052\">052</option>\r\n                <option value=\"053\">053</option>\r\n                <option value=\"054\">054</option>\r\n                <option value=\"055\">055</option>\r\n                <option value=\"061\">061</option>\r\n                <option value=\"062\">062</option>\r\n                <option value=\"063\">063</option>\r\n                <option value=\"064\">064</option>\r\n              </select>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              <input type=\"text\" className=\"col-sm\" name=\"user_tel2\" value={user.user_tel2} onChange={handleChange}></input>\r\n              <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n              <input type=\"text\" className=\"col-sm\" name=\"user_tel3\" value={user.user_tel3} onChange={handleChange}></input>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0\">이메일 * : </label>\r\n            <div className=\"row ml-3 mr-0\">\r\n              {/* <input type=\"text\" className=\"col-sm mr-1\" name=\"user_email1\" value={user.user_email1} placeholder=\"ABC1234\" onChange={handleChange}\r\n                     ref={register({required: true, pattern: /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z]).{2,}$/})}></input> */}\r\n                     <input type=\"text\" className=\"col-sm mr-1\" name=\"user_email1\" value={user.user_email1} placeholder=\"ABC1234\" onChange={handleChange}></input>\r\n              <div className=\"mr-1 d-flex align-items-center\">@</div>\r\n              <select className=\"col-sm\" name=\"user_email2\" onChange={handleChange} value={user.user_email2}>\r\n                <option value=\"naver.com\">naver.com</option>\r\n                <option value=\"gmail.com\">gmail.com</option>\r\n                <option value=\"kakao.com\">kakao.com</option>\r\n                <option value=\"daum.net\">daum.net</option>\r\n                <option value=\"nate.com\">nate.com</option>\r\n                <option value=\"yahoo.com\">yahoo.com</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 m-0\">주소 : </label>\r\n            <div className=\"col-sm\">\r\n              <div className=\"row mb-2\"> \r\n                <input type=\"text\" className=\"col-sm-5 ml-3\" name=\"user_zipcode\" value={user.user_zipcode} placeholder=\"우편번호\" readOnly></input>\r\n                <React.Fragment>\r\n                  <button className=\"button_team2_empty\" onClick={openAddressModal}>우편번호 찾기</button>\r\n                  <Modal open={AddressModalOpen} close={closeAddressModal} send={sendModal}></Modal>\r\n                </React.Fragment>   \r\n              </div>\r\n              <input type=\"text\" className=\"col-sm mb-2\" name=\"user_address\" value={user.user_address} placeholder=\"주소\" readOnly></input>\r\n              <div className=\"row no-gutters mb-2\">\r\n                <input type=\"text\" className=\"col-sm mr-2\" name=\"user_detailaddress1\" value={user.user_detailaddress1} placeholder=\"상세주소\" onChange={handleChange}></input>\r\n                <input type=\"text\" className=\"col-sm\" name=\"user_detailaddress2\" value={user.user_detailaddress2} placeholder=\"참고항목\" readOnly></input>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"User_item\">\r\n            <label className=\"col-sm-3 col-form-label pl-3 p-0\">등록 날짜: </label>\r\n            <div className=\"col-sm d-flex align-items-center\">{userId !== undefined? moment(user.user_regdate).format(\"yyyy-MM-DD\") : \"\"}</div>\r\n          </div>\r\n          {userId !== undefined?\r\n          <div className= \"d-flex justify-content-end\">\r\n            <button className=\"button_team2_fill\" type=\"submit\">수정</button>           \r\n            <div className=\"button_team2_empty\" onClick={handleEnabled}>{user.user_enabled === 0 ? \"활성화\" : \"비활성화\"}</div>\r\n            <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground/> \r\n            <React.Fragment>\r\n              <ValidationModal open={validationModalOpen} close={closeValidationModal} errorMsg={errorMsg}></ValidationModal>\r\n            </React.Fragment>\r\n          </div> \r\n          :<div className= \"d-flex justify-content-end\" style={{\"visibility\":\"hidden\"}}><button className=\"button_team2_fill\">수정</button></div> \r\n          }\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UserUpdateForm;","import { useEffect, useRef, useState } from \"react\";\r\nimport UserCreateForm from \"./UserCreateForm\";\r\nimport UserList from \"./UserList\";\r\nimport UserUpdateForm from \"./UserUpdateForm\";\r\nimport Paho from \"paho-mqtt\";\r\nimport { sendMqttMessage } from \"apis/mqtt\";\r\n\r\nfunction User(props) {\r\n  // 직원 상태\r\n  const [user, setUser] = useState({});\r\n\r\n  function changeUser(user) {\r\n    setUser({\r\n      user_id: user.user_id,\r\n      user_name: user.user_name,\r\n      user_authority: user.user_authority,\r\n      user_ssn1: user.user_ssn1,\r\n      user_ssn2: user.user_ssn2,\r\n      user_sex: user.user_sex,\r\n      user_tel1: user.user_tel1,\r\n      user_tel2: user.user_tel2,\r\n      user_tel3: user.user_tel3,\r\n      user_email1: user.user_email1,\r\n      user_email2: user.user_email2,\r\n      user_zipcode: user.user_zipcode,\r\n      user_address: user.user_address,\r\n      user_detailaddress1: user.user_detailaddress1,\r\n      user_detailaddress2: user.user_detailaddress2,\r\n      user_regdate: user.user_regdate,\r\n      user_enabled: user.user_enabled\r\n    });\r\n  };\r\n  \r\n  // MQTT\r\n  const [subTopic, setSubTopic] = useState(\"/138010/master\");\r\n  const pubMessage = [\r\n    {\r\n    topic: \"/138010/master\",\r\n    content: \"updateUser\"\r\n    }, \r\n    {\r\n      topic: \"/138010/master\",\r\n      content: \"addUser\"\r\n    },\r\n    {\r\n      topic: \"/138010/master\",\r\n      content: \"blockUser\"\r\n    },\r\n    {\r\n      topic: \"/138010/master\",\r\n      content: \"allowUser\"\r\n    }\r\n  ]\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  let client = useRef(null);\r\n\r\n  const connectMqttBroker = () => {\r\n    // Paho.Mqtt.Client x\r\n    client.current = new Paho.Client(\"kosa3.iptime.org\", 50012, \"client-\" + new Date().getTime());\r\n    //client.current = new Paho.Client(\"localhost\", 61614, \"client-\" + new Date().getTime());\r\n\r\n    client.current.onConnectionLost = () => {\r\n      console.log(\"Mqtt 접속 끊김\");\r\n    };\r\n\r\n    client.current.onMessageArrived = (msg) => {\r\n      console.log(\"메시지 수신\");\r\n      var Jmessage = JSON.parse(msg.payloadString);\r\n      setMessage(() => {\r\n        return Jmessage;\r\n      });\r\n    };\r\n\r\n    client.current.connect({\r\n      onSuccess: () => {\r\n        client.current.subscribe(subTopic);\r\n        console.log(\"Mqtt 접속 성공\");\r\n      }\r\n    });\r\n  };\r\n\r\n  const disconnectMqttBroker = () => {\r\n    client.current.disconnect(); // onConnectionLost 실행됨\r\n  };\r\n\r\n  const publishTopic = async (num) => {\r\n    await sendMqttMessage(pubMessage[num]);\r\n  };\r\n\r\n  useEffect(() => {\r\n    connectMqttBroker();\r\n    console.log(\"MESSAGE: \", message);\r\n  });\r\n\r\n  return (\r\n    <div className=\"User\">\r\n      {/* 좌측 */}\r\n      <div className=\"User_left\">\r\n        {/* 직원 목록 */}\r\n        <UserList user={user} changeUser={changeUser} message={message}/>\r\n      </div>\r\n\r\n      {/* 우측 */}\r\n      <div className=\"User_right\">\r\n        <div>\r\n          {/* 직원 정보 수정 */}\r\n          <UserUpdateForm user={user} publishTopic={publishTopic} message={message}/>\r\n        </div>\r\n        <div>\r\n          {/* 직원 등록 */}\r\n          <UserCreateForm publishTopic={publishTopic}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default User;","import { FcInfo } from \"react-icons/fc\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Page404(props) {\r\n  const history = useHistory();\r\n\r\n  const handleGoback = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center\" style={{fontSize: \"1.8rem\", height: \"100%\", marginTop: \"15%\"}}>\r\n      <div><FcInfo/> 잘못된 경로의 페이지 입니다.</div>\r\n      <button className=\"button_team2_fill mt-4\" onClick={handleGoback}>뒤로가기</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page404;","import { FcInfo } from \"react-icons/fc\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nfunction Page403(props) {\r\n  const history = useHistory();\r\n\r\n  const handleGoback = () => {\r\n    history.goBack();\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center\" style={{fontSize: \"1.8rem\", height: \"100%\", marginTop: \"15%\"}}>\r\n      <div><FcInfo/> 접근 제한된 페이지 입니다.</div>\r\n      <button className=\"button_team2_fill mt-4\" onClick={handleGoback}>뒤로 가기</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Page403;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Page403 from \"views/errors/Page403\";\r\n\r\nfunction DoctorRoute({ role, component: Component, render, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        // 권한 체크\r\n        if (role === \"ROLE_NURSE\" || role === \"ROLE_DOCTOR\" || role === \"ROLE_MASTER\") {\r\n          return <Component {...props} role={role} />\r\n        }\r\n        else{\r\n          return <Page403 />\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default DoctorRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Page403 from \"views/errors/Page403\";\r\n\r\nfunction DoctorRoute({ role, component: Component, render, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        // 권한 체크\r\n        if (role === \"ROLE_DOCTOR\" || role === \"ROLE_MASTER\") {\r\n          return <Component {...props} role={role} />\r\n        }\r\n        else{\r\n          return <Page403 />\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default DoctorRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Page403 from \"views/errors/Page403\";\r\n\r\nfunction InspectorRoute({ role, component: Component, render, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        // 권한 체크\r\n        if (role === \"ROLE_INSPECTOR\" || role === \"ROLE_MASTER\") {\r\n          return <Component {...props} role={role} />\r\n        }\r\n        else{\r\n          return <Page403 />\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default InspectorRoute;","import React from \"react\";\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport Page403 from \"views/errors/Page403\";\r\n\r\nfunction MasterRoute({ role, component: Component, render, ...rest }) {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={props => {\r\n        // 권한 체크\r\n        if (role === \"ROLE_MASTER\") {\r\n          return <Component {...props} role={role} />\r\n        }\r\n        else{\r\n          return <Page403 />\r\n        }\r\n      }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default MasterRoute;","import { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport Patient from \"views/Patient\";\r\nimport Register from \"views/Register\";\r\nimport Treatment from \"views/Treatment\";\r\nimport Inspection from \"views/Inspection\";\r\nimport Login from \"views/Login\";\r\nimport DataAnalysis from \"views/DataAnalysis\";\r\nimport User from \"views/User\";\r\nimport Page404 from \"views/errors/Page404\";\r\nimport NurseRoute from \"components/common/CustomeRoute/NurseRoute\";\r\nimport DoctorRoute from \"components/common/CustomeRoute/DoctorRoute\";\r\nimport InspectorRoute from \"components/common/CustomeRoute/InspectorRoute\";\r\nimport MasterRoute from \"components/common/CustomeRoute/MasterRoute\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nfunction AppRoute() {\r\n    const Uauthority = useSelector((state) => state.authReducer.uauthority);\r\n    return (\r\n        <Switch>\r\n            <Route path=\"/\" exact component={Login} />\r\n            <NurseRoute\r\n                path=\"/Patient\"\r\n                component={Patient}\r\n                role={Uauthority}\r\n            />\r\n            <NurseRoute\r\n                path=\"/Register\"\r\n                component={Register}\r\n                role={Uauthority}\r\n            />\r\n            <DoctorRoute\r\n                path=\"/Treatment\"\r\n                component={Treatment}\r\n                role={Uauthority}\r\n            />\r\n            <InspectorRoute\r\n                path=\"/Inspection\"\r\n                component={Inspection}\r\n                role={Uauthority}\r\n            />\r\n            <MasterRoute\r\n                path=\"/DataAnalysis\"\r\n                component={DataAnalysis}\r\n                role={Uauthority}\r\n            />\r\n            <MasterRoute\r\n                path=\"/User\"\r\n                component={User}\r\n                role={Uauthority}\r\n            />\r\n            <Route component={Page404} />\r\n        </Switch>\r\n    );\r\n}\r\nexport default AppRoute;","import { Modal } from \"../../components/common/Address\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport style from \"./style.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { getUser, updateUserInfo } from \"apis/auth\";\r\nimport { ToastsContainer, ToastsContainerPosition, ToastsStore } from \"react-toasts\";\r\nimport { ValidationModal } from \"components/common/ValidationModal\";\r\n\r\nfunction Auth(props) {\r\n  const { openModal, closeModal } = props;\r\n  const globalUid = useSelector((state) => state.authReducer.uid);\r\n\r\n  // 회원 상태\r\n  const [user, setUser] = useState({});\r\n  \r\n  //---------------------------------------------------------------------------------------  \r\n  // 유효성 검사를 위한 함수 사용\r\n  const { handleSubmit, register, errors } = useForm({ mode: \"onChange\" });\r\n  // validation 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [validationModalOpen, setValidationModalOpen] = useState(false);\r\n  // 유효성 검사 오류 메시지\r\n  const [errorMsg, setErrorMsg] = useState({\r\n    title : \"회원정보 수정 실패\",\r\n    content: \"\"\r\n  });\r\n\r\n  const openValidationModal = (event) => {\r\n    setValidationModalOpen(true);\r\n  };\r\n  const closeValidationModal = () => {\r\n    setValidationModalOpen(false);\r\n  };\r\n  \r\n  //---------------------------------------------------------------------------------------\r\n\r\n  const handleChange = (event) => {\r\n    setUser({\r\n      ...user,\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n\r\n  // 회원정보 수정\r\n  const handleUpdate = async (event) => {\r\n    try {      \r\n      if (user.old_password !== \"\" && user.old_password === user.new_password) {\r\n        openValidationModal();\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"이전 비밀번호와 동일합니다.\"\r\n        });  \r\n      } else if (user.new_password !== \"\" && user.new_password === user.re_password) {\r\n        const response = await updateUserInfo(user);\r\n        if (response.data === \"success\") {\r\n          ToastsStore.success(\"회원 정보가 수정되었습니다.\");\r\n          setUser({\r\n            ...user,\r\n            old_password: \"\",\r\n            new_password: \"\",\r\n            re_password: \"\",\r\n          });\r\n          closeModal();\r\n        } else {\r\n          openValidationModal();\r\n          setErrorMsg({\r\n            ...errorMsg,\r\n            content: \"기존 비밀번호가 맞지 않습니다.\"\r\n          });\r\n        }        \r\n      } else if (user.old_password !== \"\") {\r\n        openValidationModal();\r\n        setErrorMsg({\r\n          ...errorMsg,\r\n          content: \"비밀번호가 동일하지 않습니다.\"\r\n        });\r\n      }\r\n    } catch(error) {\r\n      console.log(error);\r\n    }    \r\n  };\r\n\r\n  // 마운트 시 user 설정\r\n  useEffect(() => {\r\n    const work = async () => {\r\n      try {\r\n        const response = await getUser(globalUid);\r\n        setUser(response.data);\r\n      } catch(error) {\r\n        console.log(error);\r\n      }\r\n    };\r\n    work()\r\n  }, []);\r\n\r\n  //---------------------------------------------------------------------------------------\r\n  // 주소 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [addressModalOpen, setAddressModalOpen] = useState(false);\r\n\r\n  const openAddressModal = (event) => {\r\n    event.preventDefault();\r\n    setAddressModalOpen(true); \r\n  };\r\n  const closeAddressModal = () => {\r\n    setAddressModalOpen(false);\r\n  };\r\n  const sendModal = (data) => {\r\n    setAddressModalOpen(false);\r\n    setUser({\r\n      ...user,\r\n      user_zipcode: data.zonecode,\r\n      user_Address: data.address,\r\n    });\r\n    if (data.buildingName === \"\") {\r\n      setUser((prevUser) => {\r\n        return {\r\n          ...prevUser,\r\n          user_detailaddress2: data.bname,\r\n        };\r\n      });\r\n    } else {\r\n      setUser((prevUser) => {\r\n        return {\r\n          ...prevUser,\r\n          user_detailaddress2: data.bname + \", \" + data.buildingName,\r\n        };\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={`${style.Auth}`}>\r\n      <div className={openModal ? `${style.openModal} ${style.modal}` : `${style.modal}`}>\r\n        {openModal ? (\r\n          <section>\r\n            <div className={`${style.Auth_header}`}>\r\n              <div>회원정보 수정</div>\r\n              <button className=\"close\" onClick={closeModal}>\r\n                {\" \"}\r\n                &times;{\" \"}\r\n              </button>\r\n            </div>\r\n            <main>\r\n              <div className={`d-flex justify-content-center`}>\r\n                <div className={`${style.Auth_box}`}>\r\n                  <form onSubmit={handleSubmit(handleUpdate)}>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0\">회원 코드: </label>\r\n                      <div className=\"col-sm\">{user.user_id}</div>\r\n                    </div>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0\">회원 이름: </label>\r\n                      <div className=\"col-sm\">{user.user_name}</div>\r\n                    </div>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0\">직급: </label>\r\n                      <div className=\"col-sm\">{user.user_authority === \"ROLE_DOCTOR\"? \"의사\" \r\n                                              : (user.user_authority === \"ROLE_NURSE\"? \"간호사\"\r\n                                              : (user.user_authority === \"ROLE_INSPECTOR\" ? \"임상병리사\": \"의사\"))}\r\n                      </div>\r\n                    </div>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0\">생년월일: </label>\r\n                      <div className=\"col-sm\">{user.user_ssn1}</div>\r\n                    </div>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0\">성별: </label>\r\n                      <div className=\"col-sm\">{user.user_sex === \"M\" ? \"남\" : \"여\"}</div>\r\n                    </div>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0 pb-3\">전화 번호: </label>\r\n                      <div>\r\n                        <div className=\"row col-sm\">\r\n                          <select className=\"col-sm-3\" name=\"user_tel1\" value={user.user_tel1} onChange={handleChange}>\r\n                            <option value=\"010\">010</option>\r\n                            <option value=\"011\">011</option>\r\n                            <option value=\"016\">016</option>\r\n                            <option value=\"017\">017</option>\r\n                            <option value=\"02\">02</option>\r\n                            <option value=\"031\">031</option>\r\n                            <option value=\"032\">032</option>\r\n                            <option value=\"033\">033</option>\r\n                            <option value=\"041\">041</option>\r\n                            <option value=\"042\">042</option>\r\n                            <option value=\"043\">043</option>\r\n                            <option value=\"044\">044</option>\r\n                            <option value=\"051\">051</option>\r\n                            <option value=\"052\">052</option>\r\n                            <option value=\"053\">053</option>\r\n                            <option value=\"054\">054</option>\r\n                            <option value=\"055\">055</option>\r\n                            <option value=\"061\">061</option>\r\n                            <option value=\"062\">062</option>\r\n                            <option value=\"063\">063</option>\r\n                            <option value=\"064\">064</option>\r\n                          </select>\r\n                          <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n                          <input type=\"text\" className=\"col-sm-3\" name=\"user_tel2\" value={user.user_tel2} ref={register({required: true, minLength:3, maxLength:4})} onChange={handleChange}></input>\r\n                          <div className=\"mr-2 ml-2 d-flex align-items-center\">-</div>\r\n                          <input type=\"text\" className=\"col-sm-3\" name=\"user_tel3\" value={user.user_tel3} ref={register({required: true, minLength:3, maxLength:4})} onChange={handleChange}></input>\r\n                        </div>\r\n                        <div className={(errors.user_tel2 || errors.user_tel3)? `${style.Auth_error}` : `${style.Auth_noterror}`}>\r\n                          {(errors.user_tel2 || errors.user_tel3)?.type === \"required\" ? \"전화번호를 입력해주세요.\" \r\n                          :\r\n                          (errors.user_tel2 || errors.user_tel3)?.type === \"minLength\" ? \"3자리 이상 작성해주세요.\" \r\n                          :\r\n                          \"4자리 이하 작성해주세요.\"\r\n                          }\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0 pb-3\">이메일: </label>\r\n                      <div>\r\n                        <div className=\"row col-sm p-0 m-0\">\r\n                          <input type=\"text\" className=\"col-sm mr-1\" name=\"user_email1\" value={user.user_email1} placeholder=\"ABC1234\" onChange={handleChange} \r\n                                  ref={register({required: true, pattern: /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z]).{2,}$/})}></input>\r\n                          <div className=\"mr-1 d-flex align-items-center\">@</div>\r\n                          {/* <input type=\"text\" className=\"col-sm mr-1\" name=\"user_email2\" value={user.user_email2} onChange={handleChange} \r\n                                  ref={register({required: true, pattern: /^[0-9a-zA-Z]([-_.]?[0-9a-zA-Z])*.[a-zA-Z].{2,}$/})} disabled={email}></input> */}\r\n                          <select className=\"col-sm\" name=\"user_email2\" onChange={handleChange} value={user.user_email2}>\r\n                            <option value=\"naver.com\">naver.com</option>\r\n                            <option value=\"gmail.com\">gmail.com</option>\r\n                            <option value=\"kakao.com\">kakao.com</option>\r\n                            <option value=\"daum.net\">daum.net</option>\r\n                            <option value=\"nate.com\">nate.com</option>\r\n                            <option value=\"yahoo.com\">yahoo.com</option>\r\n                          </select>    \r\n                        </div>                 \r\n                        <div className={errors.user_email1? `${style.Auth_error}` : `${style.Auth_noterror}`}>\r\n                          {(errors.user_email1)?.type === \"pattern\" ? \"올바른 형식으로 입력해주세요.\" \r\n                          :  \r\n                          \"이메일를 입력해주세요.\"\r\n                          }\r\n                        </div>             \r\n                      </div>\r\n                    </div>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0\">주소: </label>\r\n                      <div className=\"col-sm\">\r\n                        <div className=\"row mb-2\">\r\n                          <input type=\"text\" className=\"col-sm-6\" name=\"user_zipcode\" value={user.user_zipcode} placeholder=\"우편번호\" readOnly></input>\r\n                          <React.Fragment>\r\n                            <button className=\"button_team2_empty\" onClick={openAddressModal}>우편번호 찾기</button>\r\n                            <Modal open={addressModalOpen} close={closeAddressModal} send={sendModal}></Modal>\r\n                          </React.Fragment>\r\n                        </div>\r\n                        <div className=\"row mb-2\"><input type=\"text\" className=\"col-sm\" name=\"user_address\" value={user.user_address} placeholder=\"주소\" readOnly></input></div>\r\n                        <div className=\"row mb-2\">\r\n                          <input type=\"text\" className=\"col-sm mr-2\" name=\"user_detailaddress1\" value={user.user_detailaddress1} placeholder=\"상세주소\" onChange={handleChange}></input>\r\n                          <input type=\"text\" className=\"col-sm\" name=\"user_detailaddress2\" value={user.user_detailaddress2} placeholder=\"참고항목\" readOnly></input>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0 pb-3\">기존 비밀번호: </label>\r\n                      <div className=\"col-sm-8 p-0\">\r\n                        <input type=\"password\" className={`col-sm ${style.Auth_password}`} name=\"old_password\" ref={register({required: true})} onChange={handleChange}></input>\r\n                        <div className={errors.old_password? `${style.Auth_error}` : `${style.Auth_noterror}`}>비밀번호롤 입력하세요.</div>\r\n                      </div>\r\n                    </div>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0 pb-3\">새로운 비밀번호: </label>\r\n                      <div className=\"col-sm-8 p-0\">\r\n                        <input type=\"password\" className={`col-sm ${style.Auth_password}`} name=\"new_password\" onChange={handleChange}\r\n                                ref={register({required: true,  minLength: 8, maxLength: 16, pattern: /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+])(?!.*[^a-zA-z0-9$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,16}$/})}></input>\r\n                        <div className={errors.new_password? `${style.Auth_error}` : `${style.Auth_noterror}`}>\r\n                          {(errors.new_password)?.type === \"required\" ? \"비밀번호롤 입력하세요.\"\r\n                           : \r\n                           (errors.new_password)?.type === \"minLength\" ? \"8자리 이상 작성해주세요.\" \r\n                           : \r\n                           (errors.new_password)?.type === \"maxLength\" ? \"16자리 이하로 작성해주세요.\" : \"숫자, 영문, 특수문자 1개 이상 사용해주세요.\"}\r\n                          </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className={`${style.Auth_content}`}>\r\n                      <label className=\"col-sm-4 m-0 pb-3\">비밀번호 재입력: </label>\r\n                      <div className=\"col-sm-8 p-0\">\r\n                        <input type=\"password\" className={`col-sm ${style.Auth_password}`} name=\"re_password\" onChange={handleChange}\r\n                                ref={register({required: true,  minLength: 8, maxLength: 16, pattern: /^(?=.*[a-zA-z])(?=.*[0-9])(?=.*[$`~!@$!%*#^?&\\\\(\\\\)\\-_=+])(?!.*[^a-zA-z0-9$`~!@$!%*#^?&\\\\(\\\\)\\-_=+]).{8,16}$/})}></input>\r\n                        <div className={errors.re_password? `${style.Auth_error}` : `${style.Auth_noterror}`}>\r\n                          {(errors.re_password)?.type === \"required\" ? \"비밀번호롤 입력하세요.\"\r\n                           : \r\n                           (errors.re_password)?.type === \"minLength\" ? \"8자리 이상 작성해주세요.\" \r\n                           : \r\n                           (errors.re_password)?.type === \"maxLength\" ? \"16자리 이하로 작성해주세요.\" \r\n                           : \r\n                           \"숫자, 영문, 특수문자 1개 이상 사용해주세요.\"}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"d-flex justify-content-center\">\r\n                      <button className={`button_team2_fill`} type=\"submit\">수정</button>  \r\n                      <ToastsContainer store={ToastsStore} position={ToastsContainerPosition.TOP_CENTER} lightBackground/>        \r\n                      <React.Fragment>\r\n                        <ValidationModal open={validationModalOpen} close={closeValidationModal} errorMsg={errorMsg}></ValidationModal>\r\n                      </React.Fragment>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </main>\r\n          </section>\r\n        ) : null}\r\n      </div>\r\n    </div>   \r\n  );\r\n}\r\n\r\nexport default Auth;","import React, { Component, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport style from \"./WeatherAPI.module.css\";\r\n\r\nconst API_KEY = \"722e5a754ab41987e87ad60035c356f2\";\r\n\r\nfunction WeatherAPI(props) {\r\n  const { hlat, hlong } = props;\r\n  const [hospitalTemp, setHospitalTemp] = useState();\r\n  const [imgUrl, setImgUrl] = useState(\"resources/img/sun.png\");\r\n\r\n  const getWeatherData = (lat, long) => {\r\n    const options = {\r\n      timeout: 10000,\r\n      enableHighAccuracy: true,\r\n      maximumAge: 0\r\n    };\r\n    if ((hlat != null) || (hlong != null)) {\r\n      lat = hlat;\r\n      long = hlong;\r\n      if ((lat !== null) && (long !== null)) {\r\n        fetch(`http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&APPID=${API_KEY}`)\r\n          .then(response => response.json())\r\n          .then(json => {\r\n            setHospitalTemp(Math.floor(json.main.temp - 273.15));\r\n            setImgUrl(`http://openweathermap.org/img/w/${json.weather[0].icon}.png`);\r\n          })\r\n          .catch(error => {\r\n            console.log('Error', error);\r\n          });\r\n      }\r\n    }\r\n    else {\r\n      if (navigator.geolocation) {\r\n        navigator.geolocation.getCurrentPosition((position) => {\r\n          lat = position.coords.latitude;\r\n          long = position.coords.longitude;\r\n          if ((lat !== null) && (long !== null)) {\r\n            fetch(`http://api.openweathermap.org/data/2.5/weather?lat=${lat}&lon=${long}&APPID=${API_KEY}`)\r\n              .then(response => response.json())\r\n              .then(json => {\r\n                setHospitalTemp(Math.floor(json.main.temp - 273.15));\r\n                setImgUrl(`http://openweathermap.org/img/w/${json.weather[0].icon}.png`);\r\n              })\r\n              .catch(error => {\r\n                console.log('Error', error);\r\n              });\r\n          }\r\n        }, (error) => {\r\n          console.log(error)\r\n        }, options);\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getWeatherData(hlat, hlong);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    getWeatherData(hlat, hlong);\r\n  }, [hlat, hlong]);\r\n\r\n  return (\r\n    <div className={style.WeatherAPI_items}>\r\n      <div className={style.WeatherAPI_item}>\r\n        <img alt=\"weather_icon\" src={imgUrl} width=\"40px\" />\r\n      </div>\r\n      <div className={style.WeatherAPI_item}>\r\n        온도 : {hospitalTemp}°C\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default WeatherAPI;","import { removeAuthHeader } from \"apis/axiosConfig\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { createSetAuthTokenAction, createSetUidAction, cresteSetUauthorityAction } from \"redux/auth-reducer\";\r\nimport React, { useState } from \"react\";\r\nimport Auth from \"./views/Auth\";\r\nimport { RiCalendarCheckLine, RiStethoscopeFill, RiTestTubeFill } from \"react-icons/ri\";\r\nimport { IoBarChart } from \"react-icons/io5\";\r\nimport WeatherAPI from \"components/common/WeatherAPI\";\r\nimport { createSetHaddressAction, createSetHidAction, createSetHLATAction, createSetHLONGAction, createSetHnameAction, createSetHurlAction } from \"redux/hospital-reducer\";\r\n\r\nfunction Header(props) {  \r\n  const globalUid = useSelector((state) => state.authReducer.uid);\r\n  const hname = useSelector((state) => state.hospitalReducer.hname);\r\n  const hospital_url = useSelector((state) => state.hospitalReducer.hurl);\r\n  const hlat = useSelector((state) => state.hospitalReducer.hlat);\r\n  const hlong = useSelector((state) => state.hospitalReducer.hlong);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logout = (event) => {\r\n    dispatch(createSetUidAction(\"\"));\r\n    dispatch(createSetAuthTokenAction(\"\"));\r\n    dispatch(cresteSetUauthorityAction(\"\"));\r\n    dispatch(createSetHnameAction(\"\"));\r\n    dispatch(createSetHidAction(\"\"));\r\n    dispatch(createSetHaddressAction(\"\"));\r\n    dispatch(createSetHurlAction(\"\"));\r\n    dispatch(createSetHLATAction(\"\"));\r\n    dispatch(createSetHLONGAction(\"\"));\r\n    removeAuthHeader();\r\n    \r\n    // SessionStorage에 인증 내용 제거\r\n    sessionStorage.removeItem(\"uid\");\r\n    sessionStorage.removeItem(\"authToken\");\r\n    sessionStorage.removeItem(\"uauthority\");\r\n    sessionStorage.removeItem(\"hname\");\r\n    sessionStorage.removeItem(\"hid\");\r\n    sessionStorage.removeItem(\"haddress\");\r\n    sessionStorage.removeItem(\"hurl\");\r\n    sessionStorage.removeItem(\"hlat\");\r\n    sessionStorage.removeItem(\"hlong\");\r\n  };\r\n\r\n  //---------------------------------------------------------------------------------------\r\n  // 모달 상태(open일 떄 true로 바뀌어 열림)\r\n  const [authModalOpen, setAuthModalOpen] = useState(false);\r\n\r\n  const openAuthModal = () => {\r\n    setAuthModalOpen(true);\r\n  };\r\n  const closeAuthModal = () => {\r\n    setAuthModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header1\">\r\n        <div className=\"header1_1\">\r\n          <span className=\"logo\">TEAM2<img className=\"ml-1\" src=\"/resources/img/logo_white_bold.png\" alt=\"\" width={30}></img></span>\r\n        </div>\r\n        <div className=\"header1_2\">\r\n          <WeatherAPI hlat={hlat} hlong={hlong}/>\r\n        </div>\r\n        <div className=\"header1_3\">\r\n          {globalUid !== \"\"?\r\n            <div className=\"header1_3_1\">\r\n              <div>\r\n                <a className=\"header_url\" href={hospital_url} target=\"_blank\" rel=\"noreferrer\">{hname}</a>\r\n              </div>\r\n              <div className=\"header_auth\" >         \r\n                <React.Fragment>\r\n                  <span onClick={openAuthModal}>\r\n                  {globalUid} 님\r\n                  </span>\r\n                  <Auth openModal={authModalOpen} closeModal={closeAuthModal}></Auth>\r\n                </React.Fragment>\r\n              </div>\r\n              <div><Link to=\"/\"><button className=\"button_team2_empty\" onClick={logout}>LOGOUT</button></Link></div>\r\n            </div>\r\n          :\r\n            <div className=\"d-flex justify-content-end\"><Link to=\"/\" className=\"button_team2_empty\">LOGIN</Link></div>\r\n          }\r\n        </div>\r\n      </div>\r\n      {globalUid === \"\"? \"\":\r\n        <div className=\"header2 row no-gutters\">\r\n          <div className=\"col-4 row d-flex justify-content-between ml-1\">\r\n            <div><Link to=\"/Register\" className=\"link_team2\"><RiCalendarCheckLine className=\"mr-1\"/>접수</Link></div>\r\n            <div><Link to=\"/Treatment\" className=\"link_team2\"><RiStethoscopeFill className=\"mr-1\"/>진료</Link></div>\r\n            <div><Link to=\"/Inspection\" className=\"link_team2\"><RiTestTubeFill className=\"mr-1\"/>검사 및 치료</Link></div>\r\n            <div><Link to=\"/DataAnalysis\" className=\"link_team2\"><IoBarChart className=\"mr-1\"/>데이터분석</Link></div>\r\n          </div>\r\n          <div className=\"col-7\"></div>\r\n          <div className=\"col-1 row d-flex justify-content-end\">\r\n            <div><Link to=\"/User\" className=\"link_team2 mr-2\"><i className=\"bi bi-people-fill mr-1\"></i>직원관리</Link></div>\r\n          </div>\r\n        </div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import AppRoute from 'AppRoute';\r\nimport Header from 'Header';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n    <Header />\r\n    <div>\r\n      <AppRoute/>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport hospitalReducer from \"./hospital-reducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  authReducer: authReducer,\r\n  hospitalReducer: hospitalReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport { createStore } from 'redux';\r\nimport rootReducer from 'redux/root-reducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createSetAuthTokenAction, createSetUidAction, cresteSetUauthorityAction } from 'redux/auth-reducer';\r\nimport { addAuthHeader } from 'apis/axiosConfig';\r\nimport { Provider } from 'react-redux';\r\nimport { createSetHaddressAction, createSetHidAction, createSetHLATAction, createSetHLONGAction, createSetHnameAction, createSetHurlAction } from 'redux/hospital-reducer';\r\n\r\nconst store = createStore(rootReducer, composeWithDevTools());\r\n\r\nstore.dispatch(createSetUidAction(sessionStorage.getItem(\"uid\") || \"\"));\r\nstore.dispatch(createSetAuthTokenAction(sessionStorage.getItem(\"authToken\") || \"\"));\r\nstore.dispatch(cresteSetUauthorityAction(sessionStorage.getItem(\"uauthority\") || \"\"));\r\nstore.dispatch(createSetHnameAction(sessionStorage.getItem(\"hname\" || \"\")));\r\nstore.dispatch(createSetHidAction(sessionStorage.getItem(\"hid\") || \"\"));\r\nstore.dispatch(createSetHaddressAction(sessionStorage.getItem(\"haddress\") || \"\"));\r\nstore.dispatch(createSetHurlAction(sessionStorage.getItem(\"hurl\" || \"\")));\r\nstore.dispatch(createSetHLATAction(sessionStorage.getItem(\"hlat\" || \"\")));\r\nstore.dispatch(createSetHLONGAction(sessionStorage.getItem(\"hlong\" || \"\")));\r\n\r\nif (sessionStorage.getItem(\"authToken\")) {\r\n  addAuthHeader(sessionStorage.getItem(\"authToken\"));\r\n}\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </BrowserRouter>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"RegisterStateChange\":\"RegisterStateChange_RegisterStateChange__A5vjP\",\"RegisterStateChange_content_table\":\"RegisterStateChange_RegisterStateChange_content_table__3aHLD\",\"RegisterStateChange_content_stateBtn\":\"RegisterStateChange_RegisterStateChange_content_stateBtn__3GWT5\",\"RegisterStateChange_content_stateBtn_item\":\"RegisterStateChange_RegisterStateChange_content_stateBtn_item__3UUmM\",\"RegisterStateChange_content_stateBtn_item_1\":\"RegisterStateChange_RegisterStateChange_content_stateBtn_item_1__pQwav\",\"RegisterStateChange_content_stateBtn_item_2\":\"RegisterStateChange_RegisterStateChange_content_stateBtn_item_2__mpf_F\",\"RegisterStateChange_content_stateBtn_item_3\":\"RegisterStateChange_RegisterStateChange_content_stateBtn_item_3__1Y77q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InspectionModal\":\"InspectionBarcodeModal_InspectionModal__1X4lT\",\"modal\":\"InspectionBarcodeModal_modal__1ovHv\",\"modal-show\":\"InspectionBarcodeModal_modal-show__3B8I2\",\"openModal\":\"InspectionBarcodeModal_openModal__15Rex\",\"modal-bg-show\":\"InspectionBarcodeModal_modal-bg-show__cZQoY\",\"InspectionBarcodePop\":\"InspectionBarcodeModal_InspectionBarcodePop__2T1bY\",\"InspectionBarcodePop_title\":\"InspectionBarcodeModal_InspectionBarcodePop_title__3fTQp\",\"InspectionBarcodePop_1\":\"InspectionBarcodeModal_InspectionBarcodePop_1__3t1EC\",\"InspectionBarcodePop_1_1\":\"InspectionBarcodeModal_InspectionBarcodePop_1_1__3psuu\",\"InspectionBarcodePop_1_2\":\"InspectionBarcodeModal_InspectionBarcodePop_1_2__3IURs\",\"InspectionBarcodePop_1_3\":\"InspectionBarcodeModal_InspectionBarcodePop_1_3__3pydY\"};"],"sourceRoot":""}